/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/tests/NoSqlProviderTests.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@collectable/core/lib/es2015/ChangeFlag.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@collectable/core/lib/es2015/ChangeFlag.js ***!
  \*****************************************************************/
/*! exports provided: ChangeFlag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChangeFlag\", function() { return ChangeFlag; });\nvar SENTINEL;\r\n/**\r\n * Designed to be used while applying changes to certain types of persistent structures. Often the\r\n * details about whether anything internal was actually changed cannot be determined until after a\r\n * new structure has been created, and sometimes the magnitude of the change needs to be captured as\r\n * well, usually for updating the stored size of the structure, for fast lookup. If after performing\r\n * one or more operations no change has been confirmed, the original structure can be returned and\r\n * the newly-created instances, to which changes would have been applied, can be discarded.\r\n *\r\n * `ChangeFlag` is designed to be used temporarily and then released so that it can be cached for\r\n * efficient reuse, thus avoiding a lot of unnecessary additional object allocations while\r\n * operations are being performed.\r\n *\r\n * @export\r\n * @class ChangeFlag\r\n */\r\nclass ChangeFlag {\r\n    constructor() {\r\n        this.confirmed = false;\r\n        this.delta = 0;\r\n        this._parent = SENTINEL;\r\n    }\r\n    static get() {\r\n        var next = ChangeFlag._cache;\r\n        if (next === SENTINEL) {\r\n            next = new ChangeFlag();\r\n        }\r\n        else {\r\n            ChangeFlag._cache = next._parent;\r\n            next.confirmed = false;\r\n            next.delta = 0;\r\n        }\r\n        return next;\r\n    }\r\n    inc() {\r\n        this.confirmed = true;\r\n        this.delta++;\r\n    }\r\n    dec() {\r\n        this.confirmed = true;\r\n        this.delta--;\r\n    }\r\n    release(modified, original) {\r\n        const value = this.confirmed ? modified : original;\r\n        this._parent = ChangeFlag._cache;\r\n        ChangeFlag._cache = this;\r\n        return value;\r\n    }\r\n    reset() {\r\n        this.confirmed = false;\r\n        this.delta = 0;\r\n    }\r\n}\r\nSENTINEL = new ChangeFlag();\r\nSENTINEL._parent = SENTINEL;\r\nChangeFlag._cache = SENTINEL;\r\n//# sourceMappingURL=ChangeFlag.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/core/lib/es2015/ChangeFlag.js?");

/***/ }),

/***/ "./node_modules/@collectable/core/lib/es2015/collection.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@collectable/core/lib/es2015/collection.js ***!
  \*****************************************************************/
/*! exports provided: IndexedCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndexedCollection\", function() { return IndexedCollection; });\n/* harmony import */ var _frptools_structural__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @frptools/structural */ \"./node_modules/@frptools/structural/lib/es2015/index.js\");\n\r\nvar IndexedCollection;\r\n(function (IndexedCollection) {\r\n    function has(key, collection) {\r\n        return collection['@@has'](key);\r\n    }\r\n    IndexedCollection.has = has;\r\n    function get(key, collection) {\r\n        return collection['@@get'](key);\r\n    }\r\n    IndexedCollection.get = get;\r\n    function set(key, value, collection) {\r\n        return collection['@@set'](key, value);\r\n    }\r\n    IndexedCollection.set = set;\r\n    function verifyKey(key, collection) {\r\n        return collection['@@verifyKey'](key);\r\n    }\r\n    IndexedCollection.verifyKey = verifyKey;\r\n    function update(updater, collection) {\r\n        return Object(_frptools_structural__WEBPACK_IMPORTED_MODULE_0__[\"update\"])(updater, collection);\r\n    }\r\n    IndexedCollection.update = update;\r\n    function updateEntry(updater, key, collection) {\r\n        var next = Object(_frptools_structural__WEBPACK_IMPORTED_MODULE_0__[\"modify\"])(collection);\r\n        next = next['@@update'](updater, key) || next;\r\n        return Object(_frptools_structural__WEBPACK_IMPORTED_MODULE_0__[\"commit\"])(next);\r\n    }\r\n    IndexedCollection.updateEntry = updateEntry;\r\n})(IndexedCollection || (IndexedCollection = {}));\r\n//# sourceMappingURL=collection.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/core/lib/es2015/collection.js?");

/***/ }),

/***/ "./node_modules/@collectable/core/lib/es2015/common.js":
/*!*************************************************************!*\
  !*** ./node_modules/@collectable/core/lib/es2015/common.js ***!
  \*************************************************************/
/*! exports provided: isCollection, isIndexedCollection, normalizeIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCollection\", function() { return isCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIndexedCollection\", function() { return isIndexedCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizeIndex\", function() { return normalizeIndex; });\nfunction isCollection(value) {\r\n    return '@@is-collection' in value;\r\n}\r\nfunction isIndexedCollection(value) {\r\n    return isCollection(value) && '@@verifyKey' in value;\r\n}\r\nfunction normalizeIndex(index, size) {\r\n    return index < 0\r\n        ? size + index < 0\r\n            ? -1\r\n            : size + index\r\n        : index >= size\r\n            ? -1\r\n            : index;\r\n}\r\n//# sourceMappingURL=common.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/core/lib/es2015/common.js?");

/***/ }),

/***/ "./node_modules/@collectable/core/lib/es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@collectable/core/lib/es2015/index.js ***!
  \************************************************************/
/*! exports provided: IndexedCollection, isCollection, isIndexedCollection, normalizeIndex, MappableIterator, ChangeFlag, arraysEqual, arraysEqualStartCount, copyArrayShallow, concatArray, withArrayIndexUpdated, withArrayIndexRemoved, withArrayIndexInserted, withArrayElementAppended, withArrayElementPrepended, writeArrayElementsUsing, writeArrayElements, skipArrayStart, takeArrayStart, firstArrayElement, lastArrayElement, lastArrayIndex, asArray, toArray, partitionArray, partitionArrayAtIndex, removeFromUnsortedArray, numericCompare, stringCompare, compose, pipe, converge, spread, spreadLeft, applyUsing, flip, ifElse, negate, equals, or, and, any, mapIf, mapUnless, map, defaultUsing, defaultIfUndefined, defaultIfNothing, defaultIfNull, defaultIf, defaultUnless, valueOrDefault, undefinedIfNull, identity, noop, constant, nothing, tap, throwError, throwNotImplemented, throwNotSupported, throwInvalidOperation, throwMissing, throwArgumentError, error, notImplemented, notSupported, invalidOperation, missing, argumentError, getArg, argsToArray, mapApply, invoker, invokeWithArgs, invokeMethod, invokeMethodWithArgs, assoc, objectOf, construct, mapProps, mapObject, toPairs, get, has, maybeGet, getFrom, valueOf, substr, curry2, curry3, curry4, curry2n, curry3n, curry4n, formatDate, dump, isDefined, isUndefined, isNull, isNotNull, isNothing, isNotNothing, isIterable, isObject, isFunction, isBoolean, isString, isNumber, isSymbol, isPlain, isInstanceOf, abs, min, max, increment, decrement, formatDecimalPlaces, PCGRandom, UUID, uuid, numericId, refId, isComparable, compare, isEquatable, isEqual, isHashable, hash, hashArray, hashArgs, combineHash, hashObject, hashMiscRef, hashIterator, hashPlainObject, hashNumber, hashString, MutationContext, clone, isPersistent, immutable, commitContext, mutable, selectContext, getMutationContext, isMutationContext, isMutable, isImmutable, isMutableContext, isImmutableContext, areContextsRelated, hasRelatedContext, getSubordinateContext, asSubordinateContext, isPrimaryContext, isSubordinateContext, isRelatedContext, modify, commit, modifyAsSubordinate, modifyAsEqual, modifyProperty, withMutability, ensureContext, update, isUnwrappable, isRecursiveUnwrappable, unwrap, unwrapKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @frptools/corelib */ \"./node_modules/@frptools/corelib/lib/es2015/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"arraysEqual\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"arraysEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"arraysEqualStartCount\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"arraysEqualStartCount\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"copyArrayShallow\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"copyArrayShallow\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"concatArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"concatArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexUpdated\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexUpdated\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexRemoved\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexRemoved\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexInserted\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexInserted\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementAppended\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"withArrayElementAppended\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementPrepended\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"withArrayElementPrepended\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElementsUsing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"writeArrayElementsUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElements\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"writeArrayElements\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"skipArrayStart\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"skipArrayStart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"takeArrayStart\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"takeArrayStart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstArrayElement\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"firstArrayElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastArrayElement\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"lastArrayElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastArrayIndex\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"lastArrayIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"asArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"partitionArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"partitionArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"partitionArrayAtIndex\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"partitionArrayAtIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeFromUnsortedArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"removeFromUnsortedArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"numericCompare\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"numericCompare\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringCompare\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"stringCompare\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compose\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"compose\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"pipe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"converge\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"converge\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"spread\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"spread\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"spreadLeft\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"spreadLeft\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"applyUsing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"applyUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flip\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"flip\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifElse\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"ifElse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"negate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"equals\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"or\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"or\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"and\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"and\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"any\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"any\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapIf\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"mapIf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapUnless\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"mapUnless\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"map\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultUsing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfUndefined\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultIfUndefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNothing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultIfNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNull\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultIfNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIf\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultIf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultUnless\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"defaultUnless\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueOrDefault\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"valueOrDefault\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"undefinedIfNull\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"undefinedIfNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"identity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"noop\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"constant\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"constant\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"nothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tap\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"tap\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwError\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwNotImplemented\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwNotImplemented\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwNotSupported\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwNotSupported\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwInvalidOperation\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwInvalidOperation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwMissing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwMissing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwArgumentError\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwArgumentError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"error\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notImplemented\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"notImplemented\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notSupported\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"notSupported\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invalidOperation\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"invalidOperation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"missing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"missing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"argumentError\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"argumentError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getArg\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"getArg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"argsToArray\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"argsToArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapApply\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"mapApply\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invoker\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"invoker\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeWithArgs\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"invokeWithArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeMethod\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"invokeMethod\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeMethodWithArgs\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"invokeMethodWithArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"assoc\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"assoc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"objectOf\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"objectOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"construct\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"construct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapProps\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"mapProps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapObject\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"mapObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toPairs\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"toPairs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"has\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"maybeGet\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"maybeGet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getFrom\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"getFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueOf\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"valueOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"substr\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"substr\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry2\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry2\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry3\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry4\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry4\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry2n\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry2n\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry3n\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry3n\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry4n\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"curry4n\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"formatDate\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"formatDate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dump\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"dump\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNull\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNotNull\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNotNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNothing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNotNothing\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNotNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isIterable\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isIterable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isBoolean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSymbol\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isSymbol\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPlain\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isPlain\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isInstanceOf\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isInstanceOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"abs\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"abs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"min\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"max\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"increment\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"increment\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"decrement\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"decrement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"formatDecimalPlaces\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"formatDecimalPlaces\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PCGRandom\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"PCGRandom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UUID\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"UUID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"uuid\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"uuid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"numericId\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"numericId\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"refId\", function() { return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"refId\"]; });\n\n/* harmony import */ var _frptools_structural__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @frptools/structural */ \"./node_modules/@frptools/structural/lib/es2015/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isComparable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isComparable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"compare\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEquatable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isEquatable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isHashable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isHashable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hash\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hash\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashArray\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashArgs\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"combineHash\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"combineHash\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashObject\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashMiscRef\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashMiscRef\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashIterator\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashPlainObject\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashPlainObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashNumber\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashString\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hashString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MutationContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"MutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPersistent\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isPersistent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"immutable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"immutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"commitContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"commitContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mutable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"mutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"selectContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"selectContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getMutationContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"getMutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutationContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isMutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isMutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isImmutable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isImmutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutableContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isMutableContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isImmutableContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isImmutableContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"areContextsRelated\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"areContextsRelated\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasRelatedContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"hasRelatedContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSubordinateContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"getSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asSubordinateContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"asSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPrimaryContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isPrimaryContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSubordinateContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRelatedContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isRelatedContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modify\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"modify\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"commit\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"commit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyAsSubordinate\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"modifyAsSubordinate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyAsEqual\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"modifyAsEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyProperty\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"modifyProperty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withMutability\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"withMutability\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ensureContext\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"ensureContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"update\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUnwrappable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isUnwrappable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRecursiveUnwrappable\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"isRecursiveUnwrappable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unwrap\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"unwrap\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unwrapKey\", function() { return _frptools_structural__WEBPACK_IMPORTED_MODULE_1__[\"unwrapKey\"]; });\n\n/* harmony import */ var _collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collection */ \"./node_modules/@collectable/core/lib/es2015/collection.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IndexedCollection\", function() { return _collection__WEBPACK_IMPORTED_MODULE_2__[\"IndexedCollection\"]; });\n\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ \"./node_modules/@collectable/core/lib/es2015/common.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isCollection\", function() { return _common__WEBPACK_IMPORTED_MODULE_3__[\"isCollection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isIndexedCollection\", function() { return _common__WEBPACK_IMPORTED_MODULE_3__[\"isIndexedCollection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"normalizeIndex\", function() { return _common__WEBPACK_IMPORTED_MODULE_3__[\"normalizeIndex\"]; });\n\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./iterator */ \"./node_modules/@collectable/core/lib/es2015/iterator.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MappableIterator\", function() { return _iterator__WEBPACK_IMPORTED_MODULE_4__[\"MappableIterator\"]; });\n\n/* harmony import */ var _ChangeFlag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ChangeFlag */ \"./node_modules/@collectable/core/lib/es2015/ChangeFlag.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ChangeFlag\", function() { return _ChangeFlag__WEBPACK_IMPORTED_MODULE_5__[\"ChangeFlag\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/core/lib/es2015/index.js?");

/***/ }),

/***/ "./node_modules/@collectable/core/lib/es2015/iterator.js":
/*!***************************************************************!*\
  !*** ./node_modules/@collectable/core/lib/es2015/iterator.js ***!
  \***************************************************************/
/*! exports provided: MappableIterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MappableIterator\", function() { return MappableIterator; });\nclass MappableIterator {\r\n    constructor(iterable, map) {\r\n        this.iterable = iterable;\r\n        this.map = map;\r\n        this.it = this.iterable[Symbol.iterator]();\r\n    }\r\n    next(value) {\r\n        var result = this.it.next(value);\r\n        if (result.done) {\r\n            result.value = void 0;\r\n        }\r\n        else {\r\n            result.value = this.map(result.value);\r\n        }\r\n        return result;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=iterator.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/core/lib/es2015/iterator.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/RedBlackTree.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/RedBlackTree.js ***!
  \*****************************************************************************/
/*! exports provided: Instance, Iterator, KeyIterator, ValueIterator, at, clone, diff, empty, emptyWithNumericKeys, emptyWithStringKeys, isEqual, find, findKey, findValue, first, firstKey, firstValue, fromKeys, fromNumericKeys, fromObject, fromPairs, fromPairsWithNumericKeys, fromPairsWithStringKeys, fromStringKeys, get, has, indexOf, isEmpty, isRedBlackTree, iterateFrom, iterateFromFirst, iterateFromIndex, iterateFromKey, iterateFromLast, iterateValuesFromFirst, values, iterateKeysFrom, iterateKeysFromFirst, keys, iterateKeysFromIndex, iterateKeysFromLast, iterateValuesFrom, iterateValuesFromIndex, iterateValuesFromLast, keyAt, last, lastKey, lastValue, remove, set, size, toArray, update, updateTree, valueAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Instance\", function() { return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeStructure\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Iterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KeyIterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeKeyIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ValueIterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeValueIterator\"]; });\n\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"at\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"at\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"diff\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"diff\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"empty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"emptyWithNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"emptyWithStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"find\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"findKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"findValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"first\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"firstKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"firstValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromObject\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairs\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairsWithNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairsWithStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"has\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"indexOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isRedBlackTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"values\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"keys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keyAt\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"keyAt\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"last\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"last\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"lastKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"lastValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"remove\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"set\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"size\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"size\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"toArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"update\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"updateTree\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"updateTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueAt\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"valueAt\"]; });\n\n\r\n\r\n//# sourceMappingURL=RedBlackTree.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/RedBlackTree.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/at.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/at.js ***!
  \*****************************************************************************/
/*! exports provided: at */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"at\", function() { return at; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Retrieves the entry at the specified index (ordinal) in the tree. If a negative number is specified for the index,\r\n * the number is treated as a backtracking offset, with -1 matching the last element in the list, -2 matching the\r\n * second-last, and so forth.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {number} index The numeric index of the entry to retrieve (A negative number counts as a backtracking offset from the end of the tree)\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(RedBlackTreeEntry<K, V>|undefined)} The tree entry at the specified index, or undefined if the index was out of range\r\n */\r\nfunction at(index, tree) {\r\n    return (index = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"normalizeIndex\"])(index, tree._size)) === -1 ? void 0 : Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findByIndex\"])(index, tree);\r\n}\r\n//# sourceMappingURL=at.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/at.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/clone.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/clone.js ***!
  \********************************************************************************/
/*! exports provided: clone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Returns a copy of a tree, preserving the mutable/immutable status of the input tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to be cloned\r\n * @returns {RedBlackTreeStructure<K, V>} A cloned instance of the input tree\r\n */\r\nfunction clone(tree, mutability) {\r\n    return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"cloneTree\"])(tree, mutability);\r\n}\r\n//# sourceMappingURL=clone.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/clone.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/diff.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/diff.js ***!
  \*******************************************************************************/
/*! exports provided: diff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"diff\", function() { return diff; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n\r\nfunction diff(trace, before, after) {\r\n    const left = before[Symbol.iterator](), right = after[Symbol.iterator](), compare = after._compare, traceAdd = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(trace.added), traceRemove = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(trace.removed), traceRetained = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(trace.retained);\r\n    if (!traceAdd && !traceRemove && !traceRetained) {\r\n        return trace;\r\n    }\r\n    let leftNext = left.next();\r\n    let left_item = leftNext.value;\r\n    let left_done = leftNext.done;\r\n    let rightNext = right.next();\r\n    let right_item = rightNext.value;\r\n    let right_done = rightNext.done;\r\n    while (!left_done && !right_done) {\r\n        const c = compare(left_item.key, right_item.key);\r\n        if (c < 0) {\r\n            if (traceRemove && trace.removed(left_item) === false)\r\n                return trace;\r\n        }\r\n        else if (c > 0) {\r\n            if (traceAdd && trace.added(right_item) === false)\r\n                return trace;\r\n        }\r\n        else {\r\n            if (traceRetained && trace.retained(left_item, right_item) === false)\r\n                return trace;\r\n        }\r\n        if (c <= 0) {\r\n            leftNext = traceRemove ? left.next() : left.next(right_item.key);\r\n            left_item = leftNext.value;\r\n            left_done = leftNext.done;\r\n        }\r\n        if (c >= 0) {\r\n            rightNext = traceAdd ? right.next() : right.next(left_item.key);\r\n            right_item = rightNext.value;\r\n            right_done = rightNext.done;\r\n        }\r\n    }\r\n    if (left_done) {\r\n        if (traceAdd) {\r\n            while (!right_done) {\r\n                if (trace.added(right_item) === false)\r\n                    break;\r\n                rightNext = right.next();\r\n                right_item = rightNext.value;\r\n                right_done = rightNext.done;\r\n            }\r\n        }\r\n    }\r\n    else if (traceRemove) {\r\n        while (!left_done) {\r\n            if (trace.removed(left_item) === false)\r\n                break;\r\n            leftNext = left.next();\r\n            left_item = leftNext.value;\r\n            left_done = leftNext.done;\r\n        }\r\n    }\r\n    return trace;\r\n}\r\n//# sourceMappingURL=diff.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/diff.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js ***!
  \********************************************************************************/
/*! exports provided: empty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Creates an empty tree. If no ComparatorFn function is supplied, keys are compared using logical less-than and\r\n * greater-than operations, which will generally only be suitable for numeric or string keys.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {ComparatorFn<K>} compare A comparison function, taking two keys, and returning a value less than 0 if the\r\n *                                  first key is smaller than the second, a value greater than 0 if the first key is\r\n *                                  greater than the second, or 0 if they're the same.\r\n * @param {boolean} [mutability] Indicates the desired mutability of the returned tree\r\n * @returns {RedBlackTreeStructure<K, V>} An empty tree\r\n */\r\nfunction empty(compare, mutability) {\r\n    return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"createTree\"])(compare, mutability);\r\n}\r\n//# sourceMappingURL=empty.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithNumericKeys.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithNumericKeys.js ***!
  \***********************************************************************************************/
/*! exports provided: emptyWithNumericKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emptyWithNumericKeys\", function() { return emptyWithNumericKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js\");\n\r\n\r\nfunction emptyWithNumericKeys(mutability) {\r\n    return Object(_empty__WEBPACK_IMPORTED_MODULE_1__[\"empty\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"numericCompare\"], mutability);\r\n}\r\n//# sourceMappingURL=emptyWithNumericKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithNumericKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithStringKeys.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithStringKeys.js ***!
  \**********************************************************************************************/
/*! exports provided: emptyWithStringKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"emptyWithStringKeys\", function() { return emptyWithStringKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js\");\n\r\n\r\nfunction emptyWithStringKeys(mutability) {\r\n    return Object(_empty__WEBPACK_IMPORTED_MODULE_1__[\"empty\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"stringCompare\"], mutability);\r\n}\r\n//# sourceMappingURL=emptyWithStringKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithStringKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/equality.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/equality.js ***!
  \***********************************************************************************/
/*! exports provided: isEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return isEqual; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js\");\n/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./size */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js\");\n\r\n\r\n\r\n/**\r\n * Determines whether two trees have equivalent sets of keys and values. Though order of insertion can affect the\r\n * internal structure of a red black tree, only the actual set of entries and their ordinal positions are considered.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @param {RedBlackTreeStructure<K, V>} other Another tree to compare entries with\r\n * @returns {boolean} True if both trees are of the same size and have equivalent sets of keys and values for each entry\r\n *   at corresponding indices in each tree, otherwise false.\r\n */\r\nfunction isEqual(tree, other) {\r\n    if (tree === other)\r\n        return true;\r\n    if (Object(_size__WEBPACK_IMPORTED_MODULE_2__[\"size\"])(tree) !== Object(_size__WEBPACK_IMPORTED_MODULE_2__[\"size\"])(other))\r\n        return false;\r\n    // Iterator is required because two trees may have the same set of keys and values but slightly different structures\r\n    var ita = Object(_iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"])(tree), itb = Object(_iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"])(other);\r\n    do {\r\n        var ca = ita.next();\r\n        var cb = itb.next();\r\n        if (!Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isEqual\"])(ca.value, cb.value))\r\n            return false;\r\n    } while (!ca.done);\r\n    return true;\r\n}\r\n//# sourceMappingURL=equality.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/equality.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js ***!
  \*******************************************************************************/
/*! exports provided: find */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Returns the entry in the tree which is closest to the specified input key. The logic determining which entry to\r\n * locate is controlled by the `op` parameter.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {FindOp} op The operation that determines which entry to find in the tree\r\n * @param {K} key A reference key used as input to the find operation\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(RedBlackTreeEntry<K, V>|undefined)} The entry matching the specified key and operation, or undefined if not found\r\n */\r\nfunction find(op, key, tree) {\r\n    var exact = false;\r\n    if (tree._size > 0) {\r\n        switch (op) {\r\n            case 'gte': exact = true;\r\n            case 'gt':\r\n                return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"findMinNodeRightOfKey\"])(exact, key, tree._root, tree._compare);\r\n            case 'lte': exact = true;\r\n            case 'lt':\r\n                return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"findMaxNodeLeftOfKey\"])(exact, key, tree);\r\n            case 'eq':\r\n                return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"findNodeByKey\"])(key, tree);\r\n        }\r\n        throw new Error(`Invalid find operation; must be 'lt', 'lte', 'gt', 'gte' or 'eq'`);\r\n    }\r\n}\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/findKey.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/findKey.js ***!
  \**********************************************************************************/
/*! exports provided: findKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findKey\", function() { return findKey; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./find */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js\");\n\r\n\r\n/**\r\n * Returns the key of whichever entry in the tree which is closest to the specified input key. The logic determining\r\n * which entry to locate is controlled by the `op` parameter.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {FindOp} op The operation that determines which entry to find in the tree\r\n * @param {K} key A reference key used as input to the find operation\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(K|undefined)} The key of the matched entry, or undefined if no matching entry was found\r\n */\r\nfunction findKey(op, key, tree) {\r\n    const node = Object(_find__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(op, key, tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.key : void 0;\r\n}\r\n//# sourceMappingURL=findKey.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/findKey.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/findValue.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/findValue.js ***!
  \************************************************************************************/
/*! exports provided: findValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findValue\", function() { return findValue; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./find */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js\");\n\r\n\r\n/**\r\n * Returns the value of whichever entry in the tree which is closest to the specified input key. The logic determining\r\n * which entry to locate is controlled by the `op` parameter.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {FindOp} op The operation that determines which entry to find in the tree\r\n * @param {K} key A reference key used as input to the find operation\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(V|undefined)} The value of the matched entry, or undefined if no matching entry was found\r\n */\r\nfunction findValue(op, key, tree) {\r\n    const node = Object(_find__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(op, key, tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.value : void 0;\r\n}\r\n//# sourceMappingURL=findValue.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/findValue.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js ***!
  \********************************************************************************/
/*! exports provided: first */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Retrieves the first entry in the tree, or undefined if the tree is empty.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(RedBlackTreeEntry<K, V>|undefined)} The first entry in the tree, or undefined if the tree is empty\r\n */\r\nfunction first(tree) {\r\n    if (tree._size === 0)\r\n        return void 0;\r\n    var node = tree._root;\r\n    while (!Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node._left)) {\r\n        node = node._left;\r\n    }\r\n    return node;\r\n}\r\n//# sourceMappingURL=first.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstKey.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstKey.js ***!
  \***********************************************************************************/
/*! exports provided: firstKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstKey\", function() { return firstKey; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _first__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./first */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js\");\n\r\n\r\n/**\r\n * Retrieves the first key in the tree, or undefined if the tree is empty.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(K|undefined)} The first key in the tree, or undefined if the tree is empty\r\n */\r\nfunction firstKey(tree) {\r\n    var node = Object(_first__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.key : void 0;\r\n}\r\n//# sourceMappingURL=firstKey.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstKey.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstValue.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstValue.js ***!
  \*************************************************************************************/
/*! exports provided: firstValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstValue\", function() { return firstValue; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _first__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./first */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js\");\n\r\n\r\n/**\r\n * Retrieves the value of the first entry in the tree, or undefined if the tree is empty.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(K|undefined)} The value of the first entry in the tree, or undefined if the tree is empty\r\n */\r\nfunction firstValue(tree) {\r\n    var node = Object(_first__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.value : void 0;\r\n}\r\n//# sourceMappingURL=firstValue.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstValue.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js ***!
  \***********************************************************************************/
/*! exports provided: fromKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromKeys\", function() { return fromKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateKeysFromFirst__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iterateKeysFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromFirst.js\");\n/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./set */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js\");\n\r\n\r\n\r\n\r\nfunction fromKeys(compare, keys, mutability) {\r\n    const tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createTree\"])(compare, mutability));\r\n    if (Array.isArray(keys)) {\r\n        for (var i = 0; i < keys.length; i++) {\r\n            Object(_set__WEBPACK_IMPORTED_MODULE_3__[\"set\"])(keys[i], null, tree);\r\n        }\r\n    }\r\n    else {\r\n        const it = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"isRedBlackTree\"])(keys) ? Object(_iterateKeysFromFirst__WEBPACK_IMPORTED_MODULE_2__[\"iterateKeysFromFirst\"])(keys) : keys[Symbol.iterator]();\r\n        var current;\r\n        while (!(current = it.next()).done) {\r\n            Object(_set__WEBPACK_IMPORTED_MODULE_3__[\"set\"])(current.value, null, tree);\r\n        }\r\n    }\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=fromKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromNumericKeys.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromNumericKeys.js ***!
  \******************************************************************************************/
/*! exports provided: fromNumericKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromNumericKeys\", function() { return fromNumericKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _fromKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js\");\n\r\n\r\nfunction fromNumericKeys(keys, mutability) {\r\n    return Object(_fromKeys__WEBPACK_IMPORTED_MODULE_1__[\"fromKeys\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"numericCompare\"], keys, mutability);\r\n}\r\n//# sourceMappingURL=fromNumericKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromNumericKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromObject.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromObject.js ***!
  \*************************************************************************************/
/*! exports provided: fromObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromObject\", function() { return fromObject; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./set */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js\");\n\r\n\r\n\r\n\r\nfunction fromObject(obj, compare, mutability) {\r\n    if (_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isMutationContext\"](compare)) {\r\n        mutability = compare;\r\n        compare = void 0;\r\n    }\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(compare)) {\r\n        compare = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"stringCompare\"];\r\n    }\r\n    const tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createTree\"])(compare, mutability));\r\n    const keys = Object.keys(obj);\r\n    for (var i = 0; i < keys.length; i++) {\r\n        var key = keys[i];\r\n        Object(_set__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(key, obj[key], tree);\r\n    }\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=fromObject.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromObject.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js ***!
  \************************************************************************************/
/*! exports provided: fromPairs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromPairs\", function() { return fromPairs; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./set */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js\");\n\r\n\r\n\r\n/**\r\n * Creates a new `RedBlackTree` from an array of key/value pairs (tuples). If no ComparatorFn function is supplied, keys\r\n * are compared using logical less-than and greater-than operations, which will generally only be suitable for numeric\r\n * or string keys.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {[K, V][]} pairs An array of pairs (tuples), each being a two-element array of [key, value]\r\n * @param {ComparatorFn<K>} compare A comparison function, taking two keys, and returning a value less than 0 if the\r\n *                                  first key is smaller than the second, a value greater than 0 if the first key is\r\n *                                  greater than the second, or 0 if they're the same.\r\n * @returns {RedBlackTreeStructure<K, V>} A tree populated with an entry for each pair in the input array\r\n */\r\nfunction fromPairs(compare, pairs, mutability) {\r\n    const tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createTree\"])(compare, mutability));\r\n    var pair;\r\n    if (Array.isArray(pairs)) {\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            Object(_set__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(pair[0], pair[1], tree);\r\n        }\r\n    }\r\n    else {\r\n        const it = pairs[Symbol.iterator]();\r\n        var current;\r\n        while (!(current = it.next()).done) {\r\n            pair = current.value;\r\n            Object(_set__WEBPACK_IMPORTED_MODULE_2__[\"set\"])(pair[0], pair[1], tree);\r\n        }\r\n    }\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=fromPairs.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithNumericKeys.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithNumericKeys.js ***!
  \***************************************************************************************************/
/*! exports provided: fromPairsWithNumericKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithNumericKeys\", function() { return fromPairsWithNumericKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _fromPairs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromPairs */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js\");\n\r\n\r\nfunction fromPairsWithNumericKeys(pairs, mutability) {\r\n    return Object(_fromPairs__WEBPACK_IMPORTED_MODULE_1__[\"fromPairs\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"numericCompare\"], pairs, mutability);\r\n}\r\n//# sourceMappingURL=fromPairsWithNumericKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithNumericKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithStringKeys.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithStringKeys.js ***!
  \**************************************************************************************************/
/*! exports provided: fromPairsWithStringKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithStringKeys\", function() { return fromPairsWithStringKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _fromPairs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromPairs */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js\");\n\r\n\r\nfunction fromPairsWithStringKeys(pairs, mutability) {\r\n    return Object(_fromPairs__WEBPACK_IMPORTED_MODULE_1__[\"fromPairs\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"stringCompare\"], pairs, mutability);\r\n}\r\n//# sourceMappingURL=fromPairsWithStringKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithStringKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromStringKeys.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromStringKeys.js ***!
  \*****************************************************************************************/
/*! exports provided: fromStringKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromStringKeys\", function() { return fromStringKeys; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _fromKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fromKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js\");\n\r\n\r\nfunction fromStringKeys(keys, mutability) {\r\n    return Object(_fromKeys__WEBPACK_IMPORTED_MODULE_1__[\"fromKeys\"])(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"stringCompare\"], keys, mutability);\r\n}\r\n//# sourceMappingURL=fromStringKeys.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromStringKeys.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/get.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/get.js ***!
  \******************************************************************************/
/*! exports provided: get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Retrieves the value associated with the specified key\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {K} key The key of the entry to retrieve\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(V|undefined)} The value associated with the specified key, or undefined if the key does not exist in the tree\r\n */\r\nfunction get(key, tree) {\r\n    var node = tree._root, compare = tree._compare, found = false, value;\r\n    do {\r\n        if (Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node)) {\r\n            found = true;\r\n        }\r\n        else {\r\n            var c = compare(key, node.key);\r\n            if (c === 0) {\r\n                value = node.value;\r\n                found = true;\r\n            }\r\n            else if (c > 0) {\r\n                node = node._right;\r\n            }\r\n            else {\r\n                node = node._left;\r\n            }\r\n        }\r\n    } while (!found);\r\n    return value;\r\n}\r\n//# sourceMappingURL=get.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/get.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/has.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/has.js ***!
  \******************************************************************************/
/*! exports provided: has */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Determines whether or not a given key exists in the tree\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {K} key The key to look for\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {boolean} True if the there is an entry for the specified key, otherwise false\r\n */\r\nfunction has(key, tree) {\r\n    var node = tree._root, compare = tree._compare, done = false, found = false;\r\n    do {\r\n        if (Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node)) {\r\n            done = true;\r\n        }\r\n        else {\r\n            var c = compare(key, node.key);\r\n            if (c === 0) {\r\n                done = true;\r\n                found = true;\r\n            }\r\n            else if (c > 0) {\r\n                node = node._right;\r\n            }\r\n            else {\r\n                node = node._left;\r\n            }\r\n        }\r\n    } while (!done);\r\n    return found;\r\n}\r\n//# sourceMappingURL=has.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/has.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js ***!
  \********************************************************************************/
/*! exports provided: at, clone, diff, empty, emptyWithNumericKeys, emptyWithStringKeys, isEqual, find, findKey, findValue, first, firstKey, firstValue, fromKeys, fromNumericKeys, fromObject, fromPairs, fromPairsWithNumericKeys, fromPairsWithStringKeys, fromStringKeys, get, has, indexOf, isEmpty, isRedBlackTree, iterateFrom, iterateFromFirst, iterateFromIndex, iterateFromKey, iterateFromLast, iterateValuesFromFirst, values, iterateKeysFrom, iterateKeysFromFirst, keys, iterateKeysFromIndex, iterateKeysFromLast, iterateValuesFrom, iterateValuesFromIndex, iterateValuesFromLast, keyAt, last, lastKey, lastValue, remove, set, size, toArray, update, updateTree, valueAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _at__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./at */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/at.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"at\", function() { return _at__WEBPACK_IMPORTED_MODULE_0__[\"at\"]; });\n\n/* harmony import */ var _clone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clone */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/clone.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _clone__WEBPACK_IMPORTED_MODULE_1__[\"clone\"]; });\n\n/* harmony import */ var _diff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./diff */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/diff.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"diff\", function() { return _diff__WEBPACK_IMPORTED_MODULE_2__[\"diff\"]; });\n\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./empty */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/empty.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return _empty__WEBPACK_IMPORTED_MODULE_3__[\"empty\"]; });\n\n/* harmony import */ var _emptyWithNumericKeys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./emptyWithNumericKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithNumericKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithNumericKeys\", function() { return _emptyWithNumericKeys__WEBPACK_IMPORTED_MODULE_4__[\"emptyWithNumericKeys\"]; });\n\n/* harmony import */ var _emptyWithStringKeys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./emptyWithStringKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/emptyWithStringKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithStringKeys\", function() { return _emptyWithStringKeys__WEBPACK_IMPORTED_MODULE_5__[\"emptyWithStringKeys\"]; });\n\n/* harmony import */ var _equality__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./equality */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/equality.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return _equality__WEBPACK_IMPORTED_MODULE_6__[\"isEqual\"]; });\n\n/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./find */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/find.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return _find__WEBPACK_IMPORTED_MODULE_7__[\"find\"]; });\n\n/* harmony import */ var _findKey__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./findKey */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/findKey.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findKey\", function() { return _findKey__WEBPACK_IMPORTED_MODULE_8__[\"findKey\"]; });\n\n/* harmony import */ var _findValue__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./findValue */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/findValue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findValue\", function() { return _findValue__WEBPACK_IMPORTED_MODULE_9__[\"findValue\"]; });\n\n/* harmony import */ var _first__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./first */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/first.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return _first__WEBPACK_IMPORTED_MODULE_10__[\"first\"]; });\n\n/* harmony import */ var _firstKey__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./firstKey */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstKey.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstKey\", function() { return _firstKey__WEBPACK_IMPORTED_MODULE_11__[\"firstKey\"]; });\n\n/* harmony import */ var _firstValue__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./firstValue */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/firstValue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstValue\", function() { return _firstValue__WEBPACK_IMPORTED_MODULE_12__[\"firstValue\"]; });\n\n/* harmony import */ var _fromKeys__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./fromKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromKeys\", function() { return _fromKeys__WEBPACK_IMPORTED_MODULE_13__[\"fromKeys\"]; });\n\n/* harmony import */ var _fromNumericKeys__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fromNumericKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromNumericKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromNumericKeys\", function() { return _fromNumericKeys__WEBPACK_IMPORTED_MODULE_14__[\"fromNumericKeys\"]; });\n\n/* harmony import */ var _fromObject__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./fromObject */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromObject.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromObject\", function() { return _fromObject__WEBPACK_IMPORTED_MODULE_15__[\"fromObject\"]; });\n\n/* harmony import */ var _fromPairs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./fromPairs */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairs.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairs\", function() { return _fromPairs__WEBPACK_IMPORTED_MODULE_16__[\"fromPairs\"]; });\n\n/* harmony import */ var _fromPairsWithNumericKeys__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./fromPairsWithNumericKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithNumericKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithNumericKeys\", function() { return _fromPairsWithNumericKeys__WEBPACK_IMPORTED_MODULE_17__[\"fromPairsWithNumericKeys\"]; });\n\n/* harmony import */ var _fromPairsWithStringKeys__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./fromPairsWithStringKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromPairsWithStringKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithStringKeys\", function() { return _fromPairsWithStringKeys__WEBPACK_IMPORTED_MODULE_18__[\"fromPairsWithStringKeys\"]; });\n\n/* harmony import */ var _fromStringKeys__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./fromStringKeys */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/fromStringKeys.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromStringKeys\", function() { return _fromStringKeys__WEBPACK_IMPORTED_MODULE_19__[\"fromStringKeys\"]; });\n\n/* harmony import */ var _get__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./get */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/get.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _get__WEBPACK_IMPORTED_MODULE_20__[\"get\"]; });\n\n/* harmony import */ var _has__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./has */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/has.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return _has__WEBPACK_IMPORTED_MODULE_21__[\"has\"]; });\n\n/* harmony import */ var _indexOf__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./indexOf */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/indexOf.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return _indexOf__WEBPACK_IMPORTED_MODULE_22__[\"indexOf\"]; });\n\n/* harmony import */ var _isEmpty__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./isEmpty */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/isEmpty.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return _isEmpty__WEBPACK_IMPORTED_MODULE_23__[\"isEmpty\"]; });\n\n/* harmony import */ var _isRedBlackTree__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./isRedBlackTree */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/isRedBlackTree.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return _isRedBlackTree__WEBPACK_IMPORTED_MODULE_24__[\"isRedBlackTree\"]; });\n\n/* harmony import */ var _iterateFrom__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./iterateFrom */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFrom\", function() { return _iterateFrom__WEBPACK_IMPORTED_MODULE_25__[\"iterateFrom\"]; });\n\n/* harmony import */ var _iterateFromFirst__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./iterateFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromFirst\", function() { return _iterateFromFirst__WEBPACK_IMPORTED_MODULE_26__[\"iterateFromFirst\"]; });\n\n/* harmony import */ var _iterateFromIndex__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./iterateFromIndex */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromIndex\", function() { return _iterateFromIndex__WEBPACK_IMPORTED_MODULE_27__[\"iterateFromIndex\"]; });\n\n/* harmony import */ var _iterateFromKey__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./iterateFromKey */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromKey.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromKey\", function() { return _iterateFromKey__WEBPACK_IMPORTED_MODULE_28__[\"iterateFromKey\"]; });\n\n/* harmony import */ var _iterateFromLast__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./iterateFromLast */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromLast\", function() { return _iterateFromLast__WEBPACK_IMPORTED_MODULE_29__[\"iterateFromLast\"]; });\n\n/* harmony import */ var _iterateFromValuesFromFirst__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./iterateFromValuesFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromValuesFromFirst.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromFirst\", function() { return _iterateFromValuesFromFirst__WEBPACK_IMPORTED_MODULE_30__[\"iterateValuesFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return _iterateFromValuesFromFirst__WEBPACK_IMPORTED_MODULE_30__[\"values\"]; });\n\n/* harmony import */ var _iterateKeysFrom__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./iterateKeysFrom */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFrom.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFrom\", function() { return _iterateKeysFrom__WEBPACK_IMPORTED_MODULE_31__[\"iterateKeysFrom\"]; });\n\n/* harmony import */ var _iterateKeysFromFirst__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./iterateKeysFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromFirst.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromFirst\", function() { return _iterateKeysFromFirst__WEBPACK_IMPORTED_MODULE_32__[\"iterateKeysFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return _iterateKeysFromFirst__WEBPACK_IMPORTED_MODULE_32__[\"keys\"]; });\n\n/* harmony import */ var _iterateKeysFromIndex__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./iterateKeysFromIndex */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromIndex.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromIndex\", function() { return _iterateKeysFromIndex__WEBPACK_IMPORTED_MODULE_33__[\"iterateKeysFromIndex\"]; });\n\n/* harmony import */ var _iterateKeysFromLast__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./iterateKeysFromLast */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromLast.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromLast\", function() { return _iterateKeysFromLast__WEBPACK_IMPORTED_MODULE_34__[\"iterateKeysFromLast\"]; });\n\n/* harmony import */ var _iterateValuesFrom__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./iterateValuesFrom */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFrom.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFrom\", function() { return _iterateValuesFrom__WEBPACK_IMPORTED_MODULE_35__[\"iterateValuesFrom\"]; });\n\n/* harmony import */ var _iterateValuesFromIndex__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./iterateValuesFromIndex */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromIndex.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromIndex\", function() { return _iterateValuesFromIndex__WEBPACK_IMPORTED_MODULE_36__[\"iterateValuesFromIndex\"]; });\n\n/* harmony import */ var _iterateValuesFromLast__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./iterateValuesFromLast */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromLast.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromLast\", function() { return _iterateValuesFromLast__WEBPACK_IMPORTED_MODULE_37__[\"iterateValuesFromLast\"]; });\n\n/* harmony import */ var _keyAt__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./keyAt */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/keyAt.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keyAt\", function() { return _keyAt__WEBPACK_IMPORTED_MODULE_38__[\"keyAt\"]; });\n\n/* harmony import */ var _last__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./last */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"last\", function() { return _last__WEBPACK_IMPORTED_MODULE_39__[\"last\"]; });\n\n/* harmony import */ var _lastKey__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./lastKey */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastKey.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastKey\", function() { return _lastKey__WEBPACK_IMPORTED_MODULE_40__[\"lastKey\"]; });\n\n/* harmony import */ var _lastValue__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./lastValue */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastValue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastValue\", function() { return _lastValue__WEBPACK_IMPORTED_MODULE_41__[\"lastValue\"]; });\n\n/* harmony import */ var _remove__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./remove */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/remove.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return _remove__WEBPACK_IMPORTED_MODULE_42__[\"remove\"]; });\n\n/* harmony import */ var _set__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./set */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return _set__WEBPACK_IMPORTED_MODULE_43__[\"set\"]; });\n\n/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./size */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"size\", function() { return _size__WEBPACK_IMPORTED_MODULE_44__[\"size\"]; });\n\n/* harmony import */ var _toArray__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./toArray */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/toArray.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return _toArray__WEBPACK_IMPORTED_MODULE_45__[\"toArray\"]; });\n\n/* harmony import */ var _update__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./update */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/update.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return _update__WEBPACK_IMPORTED_MODULE_46__[\"update\"]; });\n\n/* harmony import */ var _updateTree__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./updateTree */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/updateTree.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"updateTree\", function() { return _updateTree__WEBPACK_IMPORTED_MODULE_47__[\"updateTree\"]; });\n\n/* harmony import */ var _valueAt__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./valueAt */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/valueAt.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueAt\", function() { return _valueAt__WEBPACK_IMPORTED_MODULE_48__[\"valueAt\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/indexOf.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/indexOf.js ***!
  \**********************************************************************************/
/*! exports provided: indexOf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return indexOf; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Determines the index (ordinal) of the tree entry that has the specified key. If the key does not exist in the tree, -1 is returned.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {K} key The key of the tree entry to find the index for\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {number} The index of the key in the tree, or -1 if the key was not found\r\n */\r\nfunction indexOf(key, tree) {\r\n    return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"findIndex\"])(key, tree._root, tree._compare);\r\n}\r\n//# sourceMappingURL=indexOf.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/indexOf.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/isEmpty.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/isEmpty.js ***!
  \**********************************************************************************/
/*! exports provided: isEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/**\r\n * Determines whether or not the tree currently has any entries\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {boolean} True if the tree is empty, otherwise false\r\n */\r\nfunction isEmpty(tree) {\r\n    return tree._size === 0;\r\n}\r\n//# sourceMappingURL=isEmpty.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/isEmpty.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/isRedBlackTree.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/isRedBlackTree.js ***!
  \*****************************************************************************************/
/*! exports provided: isRedBlackTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return isRedBlackTree; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Determines whether the input argument is an instance of a Collectable.js RedBlackTree structure.\r\n *\r\n * @export\r\n * @param {RedBlackTreeStructure<K, V>} arg The input value to check\r\n * @returns {boolean} True if the input value is a RedBlackTree, otherwise false\r\n */\r\nfunction isRedBlackTree(arg) {\r\n    return Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isRedBlackTree\"])(arg);\r\n}\r\n//# sourceMappingURL=isRedBlackTree.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/isRedBlackTree.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js ***!
  \**************************************************************************************/
/*! exports provided: iterateFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateFrom\", function() { return iterateFrom; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Returns an iterator pointing at whichever entry in the tree which is closest to the specified input key. The logic\r\n * determining which entry to locate is controlled by the `op` parameter.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {FindOp} op The operation that determines which entry to find in the tree\r\n * @param {boolean} reverse If true, the iterator will iterate backward toward the first entry in the tree\r\n * @param {K} key A reference key used as input to the find operation\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {RedBlackTreeIterator<K, V>} An iterator that retrieves each successive entry in the tree, starting from the\r\n *   matched entry. If no matching entry is found, an empty iterator is returned.\r\n */\r\nfunction iterateFrom(op, reverse, key, tree) {\r\n    var exact = false, path;\r\n    if (tree._size > 0) {\r\n        switch (op) {\r\n            case 'gte':\r\n                exact = true;\r\n            case 'gt':\r\n                path = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPathToMinNodeRightOfKey\"])(exact, key, tree._root, _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].NONE, tree._compare);\r\n                break;\r\n            case 'lte':\r\n                exact = true;\r\n            case 'lt':\r\n                path = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPathToMaxNodeLeftOfKey\"])(exact, key, tree._root, _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].NONE, tree._compare);\r\n                break;\r\n            case 'eq':\r\n                path = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPathToNodeByKey\"])(key, tree._root, tree._compare);\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid find operation; must be 'lt', 'lte', 'gt', 'gte' or 'eq'`);\r\n        }\r\n    }\r\n    return _internals__WEBPACK_IMPORTED_MODULE_1__[\"RedBlackTreeIterator\"].create(Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(path) ? path : _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].NONE, tree._compare, reverse);\r\n}\r\n//# sourceMappingURL=iterateFrom.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js ***!
  \*******************************************************************************************/
/*! exports provided: iterateFromFirst */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateFromFirst\", function() { return iterateFromFirst; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Returns an iterator that starts from the first entry in the tree and iterates toward the end of the tree. Emissions\r\n * are references to nodes in the tree, exposed directly to allow Collectable.RedBlackTree to be efficiently consumed as\r\n * a backing structure for other data structures. Do not modify the returned node.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {RedBlackTreeIterator<K, V>} An iterator for entries in the tree\r\n */\r\nfunction iterateFromFirst(tree) {\r\n    var path = _internals__WEBPACK_IMPORTED_MODULE_0__[\"PathNode\"].NONE;\r\n    var node = tree._root;\r\n    while (!Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node)) {\r\n        path = _internals__WEBPACK_IMPORTED_MODULE_0__[\"PathNode\"].next(node, path, 1 /* LEFT */);\r\n        node = node._left;\r\n    }\r\n    return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeIterator\"].create(path, tree._compare, false);\r\n}\r\n//# sourceMappingURL=iterateFromFirst.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js ***!
  \*******************************************************************************************/
/*! exports provided: iterateFromIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateFromIndex\", function() { return iterateFromIndex; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Creates an iterator for which the first entry is at the specified index in the tree. If the index is out of range, an\r\n * empty iterator is returned.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {boolean} reverse If true, the iterator will iterate backward toward the first entry in the tree\r\n * @param {number} index The numeric index of the entry to retrieve (A negative number counts as a backtracking offset from the end of the tree)\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {RedBlackTreeIterator<K, V>} An iterator that retrieves each successive entry in the tree, starting from the specified index\r\n */\r\nfunction iterateFromIndex(reverse, index, tree) {\r\n    var path = (index = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"normalizeIndex\"])(index, tree._size)) === -1 ? _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].NONE : Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPathToIndex\"])(index, tree._root);\r\n    return _internals__WEBPACK_IMPORTED_MODULE_1__[\"RedBlackTreeIterator\"].create(path, tree._compare, reverse);\r\n}\r\n//# sourceMappingURL=iterateFromIndex.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromKey.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromKey.js ***!
  \*****************************************************************************************/
/*! exports provided: iterateFromKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateFromKey\", function() { return iterateFromKey; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Creates an iterator for which the first entry has the specified index in the tree. If the key does not exist in the\r\n * tree, an empty iterator is returned.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {boolean} reverse If true, the iterator will iterate backward toward the first entry in the tree\r\n * @param {K} key The key to look for\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {RedBlackTreeIterator<K, V>} An iterator that retrieves each successive entry in the tree, starting from the specified key\r\n */\r\nfunction iterateFromKey(reverse, key, tree) {\r\n    const path = Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"findPathToNodeByKey\"])(key, tree._root, tree._compare);\r\n    return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeIterator\"].create(path, tree._compare, reverse);\r\n}\r\n//# sourceMappingURL=iterateFromKey.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromKey.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js ***!
  \******************************************************************************************/
/*! exports provided: iterateFromLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateFromLast\", function() { return iterateFromLast; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Returns an iterator that starts from the last entry in the tree and iterates toward the start of the tree. Emissions\r\n * are references to nodes in the tree, exposed directly to allow Collectable.RedBlackTree to be efficiently consumed as\r\n * a backing structure for other data structures. Do not modify the returned node.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {RedBlackTreeIterator<K, V>} An iterator for entries in the tree\r\n */\r\nfunction iterateFromLast(tree) {\r\n    var path = _internals__WEBPACK_IMPORTED_MODULE_0__[\"PathNode\"].NONE;\r\n    var node = tree._root;\r\n    while (!Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node)) {\r\n        path = _internals__WEBPACK_IMPORTED_MODULE_0__[\"PathNode\"].next(node, path, 2 /* RIGHT */);\r\n        node = node._right;\r\n    }\r\n    return _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeIterator\"].create(path, tree._compare, true);\r\n}\r\n//# sourceMappingURL=iterateFromLast.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromValuesFromFirst.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromValuesFromFirst.js ***!
  \*****************************************************************************************************/
/*! exports provided: iterateValuesFromFirst, values */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromFirst\", function() { return iterateValuesFromFirst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js\");\n\r\n\r\n/**\r\n * Returns a value iterator; one for each entry in the tree. The iterator is guaranteed to iterate in the same order as\r\n * the corresponding entries in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to read values from\r\n * @returns {IterableIterator<V>} An iterable iterator that will visit each value in the tree\r\n */\r\nfunction iterateValuesFromFirst(tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeValueIterator\"](Object(_iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"])(tree));\r\n}\r\n/**\r\n * Alias for `iterateValuesFromFirst()`.\r\n *\r\n * Returns a value iterator; one for each entry in the tree. The iterator is guaranteed to iterate in the same order as\r\n * the corresponding entries in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to read values from\r\n * @returns {IterableIterator<V>} An iterable iterator that will visit each value in the tree\r\n */\r\nfunction values(tree) {\r\n    return iterateValuesFromFirst(tree);\r\n}\r\n//# sourceMappingURL=iterateFromValuesFromFirst.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromValuesFromFirst.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFrom.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFrom.js ***!
  \******************************************************************************************/
/*! exports provided: iterateKeysFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFrom\", function() { return iterateKeysFrom; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFrom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFrom */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js\");\n\r\n\r\nfunction iterateKeysFrom(op, reverse, key, tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeKeyIterator\"](Object(_iterateFrom__WEBPACK_IMPORTED_MODULE_1__[\"iterateFrom\"])(op, reverse, key, tree));\r\n}\r\n//# sourceMappingURL=iterateKeysFrom.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFrom.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromFirst.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromFirst.js ***!
  \***********************************************************************************************/
/*! exports provided: iterateKeysFromFirst, keys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromFirst\", function() { return iterateKeysFromFirst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return keys; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js\");\n\r\n\r\n/**\r\n * Returns a key iterator; one for each entry in the tree. The iterator is guaranteed to iterate in the same order as\r\n * the corresponding entries in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to read values from\r\n * @returns {IterableIterator<K>} An iterable iterator that will visit each key in the tree\r\n */\r\nfunction iterateKeysFromFirst(tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeKeyIterator\"](Object(_iterateFromFirst__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"])(tree));\r\n}\r\n/**\r\n * Alias for `iterateKeysFromFirst()`.\r\n *\r\n * Returns a key iterator; one for each entry in the tree. The iterator is guaranteed to iterate in the same order as\r\n * the corresponding entries in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to read values from\r\n * @returns {IterableIterator<K>} An iterable iterator that will visit each key in the tree\r\n */\r\nfunction keys(tree) {\r\n    return iterateKeysFromFirst(tree);\r\n}\r\n//# sourceMappingURL=iterateKeysFromFirst.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromFirst.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromIndex.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromIndex.js ***!
  \***********************************************************************************************/
/*! exports provided: iterateKeysFromIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromIndex\", function() { return iterateKeysFromIndex; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromIndex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromIndex */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js\");\n\r\n\r\nfunction iterateKeysFromIndex(reverse, index, tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeKeyIterator\"](Object(_iterateFromIndex__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromIndex\"])(reverse, index, tree));\r\n}\r\n//# sourceMappingURL=iterateKeysFromIndex.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromIndex.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromLast.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromLast.js ***!
  \**********************************************************************************************/
/*! exports provided: iterateKeysFromLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromLast\", function() { return iterateKeysFromLast; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromLast */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js\");\n\r\n\r\nfunction iterateKeysFromLast(tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeKeyIterator\"](Object(_iterateFromLast__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromLast\"])(tree));\r\n}\r\n//# sourceMappingURL=iterateKeysFromLast.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateKeysFromLast.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFrom.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFrom.js ***!
  \********************************************************************************************/
/*! exports provided: iterateValuesFrom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFrom\", function() { return iterateValuesFrom; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFrom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFrom */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFrom.js\");\n\r\n\r\nfunction iterateValuesFrom(op, reverse, key, tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeValueIterator\"](Object(_iterateFrom__WEBPACK_IMPORTED_MODULE_1__[\"iterateFrom\"])(op, reverse, key, tree));\r\n}\r\n//# sourceMappingURL=iterateValuesFrom.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFrom.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromIndex.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromIndex.js ***!
  \*************************************************************************************************/
/*! exports provided: iterateValuesFromIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromIndex\", function() { return iterateValuesFromIndex; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromIndex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromIndex */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromIndex.js\");\n\r\n\r\nfunction iterateValuesFromIndex(reverse, index, tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeValueIterator\"](Object(_iterateFromIndex__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromIndex\"])(reverse, index, tree));\r\n}\r\n//# sourceMappingURL=iterateValuesFromIndex.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromIndex.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromLast.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromLast.js ***!
  \************************************************************************************************/
/*! exports provided: iterateValuesFromLast */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromLast\", function() { return iterateValuesFromLast; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony import */ var _iterateFromLast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateFromLast */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromLast.js\");\n\r\n\r\nfunction iterateValuesFromLast(tree) {\r\n    return new _internals__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeValueIterator\"](Object(_iterateFromLast__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromLast\"])(tree));\r\n}\r\n//# sourceMappingURL=iterateValuesFromLast.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateValuesFromLast.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/keyAt.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/keyAt.js ***!
  \********************************************************************************/
/*! exports provided: keyAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyAt\", function() { return keyAt; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Retrieves the key at the specified index (ordinal) in the tree. If a negative number is specified for the index,\r\n * the number is treated as a backtracking offset, with -1 matching the last element in the list, -2 matching the\r\n * second-last, and so forth.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {number} index The numeric index of the entry to retrieve (A negative number counts as a backtracking offset from the end of the tree)\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(K|undefined)} The key at the specified index, or undefined if the index was out of range\r\n */\r\nfunction keyAt(index, tree) {\r\n    const node = (index = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"normalizeIndex\"])(index, tree._size)) === -1 ? void 0 : Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findByIndex\"])(index, tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.key : void 0;\r\n}\r\n//# sourceMappingURL=keyAt.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/keyAt.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js ***!
  \*******************************************************************************/
/*! exports provided: last */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"last\", function() { return last; });\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n/**\r\n * Retrieves the last entry in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {([K, V]|undefined)} A key/value tuple for the last entry in the tree, or undefined if the tree was empty\r\n */\r\nfunction last(tree) {\r\n    if (tree._size === 0)\r\n        return void 0;\r\n    var node = tree._root;\r\n    while (!Object(_internals__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node._right)) {\r\n        node = node._right;\r\n    }\r\n    return node;\r\n}\r\n//# sourceMappingURL=last.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastKey.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastKey.js ***!
  \**********************************************************************************/
/*! exports provided: lastKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastKey\", function() { return lastKey; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _last__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./last */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js\");\n\r\n\r\n/**\r\n * Retrieves the last key in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {([K, V]|undefined)} The key of the last entry in the tree, or undefined if the tree was empty\r\n */\r\nfunction lastKey(tree) {\r\n    var node = Object(_last__WEBPACK_IMPORTED_MODULE_1__[\"last\"])(tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.key : void 0;\r\n}\r\n//# sourceMappingURL=lastKey.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastKey.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastValue.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastValue.js ***!
  \************************************************************************************/
/*! exports provided: lastValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastValue\", function() { return lastValue; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _last__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./last */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/last.js\");\n\r\n\r\n/**\r\n * Retrieves the value of the last entry in the tree.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {([K, V]|undefined)} The value of the last entry in the tree, or undefined if the tree was empty\r\n */\r\nfunction lastValue(tree) {\r\n    var node = Object(_last__WEBPACK_IMPORTED_MODULE_1__[\"last\"])(tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.value : void 0;\r\n}\r\n//# sourceMappingURL=lastValue.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/lastValue.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/remove.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/remove.js ***!
  \*********************************************************************************/
/*! exports provided: remove */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Removes the specified key from the tree. If the key was not in the tree, no changes are made, and the original tree\r\n * is returned.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {K} key The key of the entry to be removed\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to be updated\r\n * @returns {RedBlackTreeStructure<K, V>} An updated copy of the tree, or the same tree if the input tree was already mutable\r\n */\r\nfunction remove(key, tree) {\r\n    if (tree._size === 0) {\r\n        return tree;\r\n    }\r\n    var originalTree = tree;\r\n    tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](tree);\r\n    _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modifyProperty\"](tree, '_root');\r\n    var p = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPath\"])(tree, key, tree._root, tree._compare);\r\n    if (p.next !== 0 /* NONE */) {\r\n        _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].release(p, tree._root);\r\n        return originalTree;\r\n    }\r\n    if (tree._size === 1) {\r\n        _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].release(p, tree._root);\r\n        if (tree !== originalTree) {\r\n            return Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createTree\"])(tree._compare);\r\n        }\r\n        tree._size = 0;\r\n        tree._root = _internals__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        return tree;\r\n    }\r\n    var current = p.node;\r\n    var hasRight = !Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(current._right);\r\n    var hasLeft = !Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(current._left);\r\n    var debt = 0;\r\n    if (hasRight || hasLeft) {\r\n        if (hasRight) {\r\n            if (hasLeft) {\r\n                p = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findSuccessor\"])(tree, p);\r\n                Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"swapNodeContents\"])(p.node, current);\r\n                current = p.node;\r\n            }\r\n            debt = current._red ? 0 : 1;\r\n            current = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, current);\r\n        }\r\n        else if (hasLeft) {\r\n            debt = current._red ? 0 : 1;\r\n            current = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, current);\r\n        }\r\n    }\r\n    else {\r\n        debt = current._red ? 0 : 1;\r\n        current = _internals__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n    }\r\n    if (p.parent.isNone()) {\r\n        tree._root = current;\r\n    }\r\n    p.replace(current);\r\n    if (current._red && p.parent.node._red) {\r\n        current._red = false;\r\n        debt = 0;\r\n    }\r\n    if (debt > 0) {\r\n        var parent = (p = p.release()).node, gp = p.parent, sibling = _internals__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"], left = _internals__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"], right = _internals__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        do {\r\n            var branch = p.next;\r\n            if (p.isNone()) {\r\n                p.node._red = false;\r\n                Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"updateCount\"])(p.node);\r\n                debt--;\r\n            }\r\n            else if (branch === 1 /* LEFT */) {\r\n                if ((sibling = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, parent))._red) {\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"swapNodeColors\"])(parent, sibling);\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateLeft\"])(gp, parent, sibling, tree);\r\n                    p.node = sibling;\r\n                    gp = p;\r\n                    p = _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].next(parent, p, 1 /* LEFT */);\r\n                }\r\n                else if (!(left = sibling._left)._red && !sibling._right._red) {\r\n                    sibling._red = true;\r\n                    if (parent._red) {\r\n                        parent._red = false;\r\n                        debt--;\r\n                        if (p.isNone()) {\r\n                            tree._root = current;\r\n                        }\r\n                    }\r\n                    else {\r\n                        current = parent;\r\n                        p = p.release();\r\n                        gp = p.parent;\r\n                        parent = p.node;\r\n                    }\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"updateCount\"])(parent);\r\n                }\r\n                else {\r\n                    if (!sibling._right._red && left._red) {\r\n                        left = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, sibling);\r\n                        p.next = 2 /* RIGHT */;\r\n                        Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"swapNodeColors\"])(sibling, left);\r\n                        Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateRight\"])(p, sibling, left, tree);\r\n                        sibling = left;\r\n                    }\r\n                    right = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, sibling);\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateLeft\"])(gp, parent, sibling, tree);\r\n                    sibling._red = parent._red;\r\n                    parent._red = false;\r\n                    right._red = false;\r\n                    debt--;\r\n                }\r\n            }\r\n            else {\r\n                if ((sibling = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, parent))._red) {\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateRight\"])(gp, parent, sibling, tree);\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"swapNodeColors\"])(parent, sibling);\r\n                    p.node = sibling;\r\n                    gp = p;\r\n                    p = _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].next(parent, p, 2 /* RIGHT */);\r\n                }\r\n                else if (!(right = sibling._right)._red && !sibling._left._red) {\r\n                    sibling._red = true;\r\n                    if (parent._red) {\r\n                        parent._red = false;\r\n                        debt--;\r\n                        if (p.isNone()) {\r\n                            tree._root = current;\r\n                        }\r\n                    }\r\n                    else {\r\n                        current = parent;\r\n                        p = p.release();\r\n                        gp = p.parent;\r\n                        parent = p.node;\r\n                    }\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"updateCount\"])(parent);\r\n                }\r\n                else {\r\n                    if (!sibling._left._red && right._red) {\r\n                        right = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, sibling);\r\n                        p.next = 1 /* LEFT */;\r\n                        Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"swapNodeColors\"])(sibling, right);\r\n                        Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateLeft\"])(p, sibling, right, tree);\r\n                        sibling = right;\r\n                    }\r\n                    left = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, sibling);\r\n                    Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rotateRight\"])(gp, parent, sibling, tree);\r\n                    sibling._red = parent._red;\r\n                    parent._red = false;\r\n                    left._red = false;\r\n                    debt--;\r\n                }\r\n            }\r\n        } while (debt > 0);\r\n    }\r\n    if (p.isActive()) {\r\n        current = _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].releaseAndRecount(p, current);\r\n    }\r\n    tree._size--;\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=remove.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/remove.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js ***!
  \******************************************************************************/
/*! exports provided: set */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n\r\n/**\r\n * Adds a new key and value to the tree, or updates the value if the key was previously absent from the tree. If the new\r\n * value is the equal to a value already associated with the specified key, no change is made, and the original tree is\r\n * returned.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {K} key The key of the entry to be updated or inserted\r\n * @param {V} value The value that should be associated with the key\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to be updated\r\n * @returns {RedBlackTreeStructure<K, V>} An updated copy of the tree, or the same tree if the input tree was already mutable\r\n */\r\nfunction set(key, value, tree) {\r\n    var originalTree = tree;\r\n    tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](tree);\r\n    if (tree._size === 0) {\r\n        tree._root = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createNode\"])(tree, false, key, value);\r\n        tree._size = 1;\r\n        return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n    }\r\n    tree._root = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modifyAsSubordinate\"](tree, tree._root);\r\n    var p = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findPath\"])(tree, key, tree._root, tree._compare);\r\n    if (p.next === 0 /* NONE */) {\r\n        var replaced = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"assignValue\"])(value, p.node);\r\n        _internals__WEBPACK_IMPORTED_MODULE_1__[\"PathNode\"].release(p, tree._root);\r\n        if (!replaced) {\r\n            tree = originalTree;\r\n        }\r\n    }\r\n    else {\r\n        var node = Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"createNode\"])(tree, true, key, value);\r\n        Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"setChild\"])(p.next, p.node, node);\r\n        if (tree._size > 1) {\r\n            Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"rebalance\"])(p, node, p.node, tree);\r\n        }\r\n        tree._size++;\r\n    }\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=set.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/set.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js ***!
  \*******************************************************************************/
/*! exports provided: size */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"size\", function() { return size; });\n/**\r\n * Returns the current number of entries in the tree\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {number} The number of entries in the tree\r\n */\r\nfunction size(tree) {\r\n    return tree._size;\r\n}\r\n//# sourceMappingURL=size.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/toArray.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/toArray.js ***!
  \**********************************************************************************/
/*! exports provided: toArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return toArray; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./size */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/size.js\");\n/* harmony import */ var _iterateFromFirst__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iterateFromFirst */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/iterateFromFirst.js\");\n\r\n\r\n\r\nconst NOMAP = () => { };\r\nfunction toArray(arg, tree) {\r\n    var map;\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(tree)) {\r\n        tree = arg;\r\n        map = NOMAP;\r\n    }\r\n    else {\r\n        map = arg;\r\n    }\r\n    var array = new Array(Object(_size__WEBPACK_IMPORTED_MODULE_1__[\"size\"])(tree));\r\n    var it = Object(_iterateFromFirst__WEBPACK_IMPORTED_MODULE_2__[\"iterateFromFirst\"])(tree);\r\n    var i, entry;\r\n    if (map === NOMAP) {\r\n        for (i = 0; i < array.length; i++) {\r\n            array[i] = it.next().value;\r\n        }\r\n    }\r\n    else {\r\n        for (i = 0; i < array.length; i++) {\r\n            entry = it.next().value;\r\n            array[i] = map(entry.value, entry.key, i);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n//# sourceMappingURL=toArray.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/toArray.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/update.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/update.js ***!
  \*********************************************************************************/
/*! exports provided: update */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n\r\n/**\r\n * Locates a value in the tree and passes it to a callback function that should return an updated value. If the value\r\n * returned is equal to the old value, then the original tree is returned, otherwise a modified copy of the original\r\n * tree is returned instead. If the specified key does not exist in the tree, undefined is passed to the callback\r\n * function, and if a defined value is returned, it is inserted into the tree. If the input tree is mutable, it is\r\n * modified and returned as-is, instead of being cloned beforehand.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {(UpdateTreeEntryCallback<K, V|undefined>)} callback A callback that will be passed\r\n * @param {K} key The key of the entry to be updated or inserted\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to be updated\r\n * @returns {RedBlackTreeStructure<K, V>} An updated copy of the tree, or the same tree if the input tree was already mutable\r\n */\r\nfunction update(callback, key, tree) {\r\n    var node = Object(_internals__WEBPACK_IMPORTED_MODULE_2__[\"findNodeByKey\"])(key, tree);\r\n    var oldValue = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.value : void 0;\r\n    var newValue = callback(oldValue, tree);\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isEqual\"])(oldValue, newValue))\r\n        return tree;\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(newValue)) {\r\n        tree = Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"set\"])(key, newValue, tree);\r\n    }\r\n    else {\r\n        tree = Object(_index__WEBPACK_IMPORTED_MODULE_1__[\"remove\"])(key, tree);\r\n    }\r\n    return tree;\r\n}\r\n//# sourceMappingURL=update.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/update.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/updateTree.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/updateTree.js ***!
  \*************************************************************************************/
/*! exports provided: updateTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateTree\", function() { return updateTree; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n\r\n/**\r\n * Passes a mutable instance of a tree to a callback function so that batches of changes can be applied without creating\r\n * additional intermediate copies of the tree, which would waste resources unnecessarily. If the input tree is mutable,\r\n * it is modified and returned as-is, instead of being cloned beforehand.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {UpdateTreeCallback<K, V>} callback A callback that will be passed a mutable version of the tree\r\n * @param {RedBlackTreeStructure<K, V>} tree The tree to be updated\r\n * @returns {RedBlackTreeStructure<K, V>} An updated version of the tree, with changes applied\r\n */\r\nfunction updateTree(callback, tree) {\r\n    callback(tree = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modify\"](tree));\r\n    return _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"commit\"](tree);\r\n}\r\n//# sourceMappingURL=updateTree.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/updateTree.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/functions/valueAt.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/functions/valueAt.js ***!
  \**********************************************************************************/
/*! exports provided: valueAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"valueAt\", function() { return valueAt; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\n/**\r\n * Retrieves the value of the entry at the specified index (ordinal) in the tree. If a negative number is specified for\r\n * the index, the number is treated as a backtracking offset, with -1 matching the last element in the list, -2 matching\r\n * the second-last, and so forth.\r\n *\r\n * @export\r\n * @template K The type of keys in the tree\r\n * @template V The type of values in the tree\r\n * @param {number} index The numeric index of the entry to retrieve (A negative number counts as a backtracking offset from the end of the tree)\r\n * @param {RedBlackTreeStructure<K, V>} tree The input tree\r\n * @returns {(V|undefined)} The value at the specified index, or undefined if the index was out of range\r\n */\r\nfunction valueAt(index, tree) {\r\n    const node = (index = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"normalizeIndex\"])(index, tree._size)) === -1 ? void 0 : Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"findByIndex\"])(index, tree);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(node) ? node.value : void 0;\r\n}\r\n//# sourceMappingURL=valueAt.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/functions/valueAt.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/index.js ***!
  \**********************************************************************/
/*! exports provided: RedBlackTree, RedBlackTreeStructure, RedBlackTreeIterator, RedBlackTreeKeyIterator, RedBlackTreeValueIterator, at, clone, diff, empty, emptyWithNumericKeys, emptyWithStringKeys, isEqual, find, findKey, findValue, first, firstKey, firstValue, fromKeys, fromNumericKeys, fromObject, fromPairs, fromPairsWithNumericKeys, fromPairsWithStringKeys, fromStringKeys, get, has, indexOf, isEmpty, isRedBlackTree, iterateFrom, iterateFromFirst, iterateFromIndex, iterateFromKey, iterateFromLast, iterateValuesFromFirst, values, iterateKeysFrom, iterateKeysFromFirst, keys, iterateKeysFromIndex, iterateKeysFromLast, iterateValuesFrom, iterateValuesFromIndex, iterateValuesFromLast, keyAt, last, lastKey, lastValue, remove, set, size, toArray, update, updateTree, valueAt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ \"./node_modules/@collectable/red-black-tree/lib/es2015/RedBlackTree.js\");\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTree\", function() { return _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__; });\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"at\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"at\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"diff\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"diff\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"empty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"emptyWithNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"emptyWithStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"emptyWithStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"find\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"findKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"findValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"first\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"firstKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"firstValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromObject\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairs\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithNumericKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairsWithNumericKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromPairsWithStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromPairsWithStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"fromStringKeys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"fromStringKeys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"has\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"indexOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"isRedBlackTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"values\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromFirst\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromFirst\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"keys\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateKeysFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateKeysFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFrom\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromIndex\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"iterateValuesFromLast\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"iterateValuesFromLast\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"keyAt\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"keyAt\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"last\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"last\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastKey\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"lastKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastValue\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"lastValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"remove\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"set\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"size\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"size\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"toArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"update\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"updateTree\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"updateTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueAt\", function() { return _functions__WEBPACK_IMPORTED_MODULE_1__[\"valueAt\"]; });\n\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeStructure\", function() { return _internals__WEBPACK_IMPORTED_MODULE_2__[\"RedBlackTreeStructure\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeIterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_2__[\"RedBlackTreeIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeKeyIterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_2__[\"RedBlackTreeKeyIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeValueIterator\", function() { return _internals__WEBPACK_IMPORTED_MODULE_2__[\"RedBlackTreeValueIterator\"]; });\n\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/index.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/RedBlackTree.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/RedBlackTree.js ***!
  \***************************************************************************************/
/*! exports provided: RedBlackTreeStructure, isRedBlackTree, createTree, cloneTree */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeStructure\", function() { return RedBlackTreeStructure; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return isRedBlackTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTree\", function() { return createTree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneTree\", function() { return cloneTree; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony import */ var _unwrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./unwrap */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/unwrap.js\");\n/* harmony import */ var _functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../functions */ \"./node_modules/@collectable/red-black-tree/lib/es2015/functions/index.js\");\n\r\n\r\n\r\n\r\nclass RedBlackTreeStructure {\r\n    /** @internal */\r\n    constructor(mctx, compare, root, size) {\r\n        this['@@mctx'] = mctx;\r\n        this._compare = compare;\r\n        this._root = root;\r\n        this._size = size;\r\n    }\r\n    /** @internal */\r\n    get '@@is-collection'() { return true; }\r\n    /** @internal */\r\n    get '@@size'() { return this._size; }\r\n    /** @internal */\r\n    '@@clone'(mctx) {\r\n        return new RedBlackTreeStructure(mctx, this._compare, this._root, this._size);\r\n    }\r\n    /** @internal */\r\n    '@@equals'(other) {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"isEqual\"])(this, other);\r\n    }\r\n    /** @internal */\r\n    '@@hash'() {\r\n        return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"hashIterator\"])(Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"iterateFromFirst\"])(this));\r\n    }\r\n    /** @internal */\r\n    '@@unwrap'() {\r\n        return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"unwrap\"])(this);\r\n    }\r\n    /** @internal */\r\n    '@@unwrapInto'(target) {\r\n        return Object(_unwrap__WEBPACK_IMPORTED_MODULE_2__[\"unwrap\"])(this, target);\r\n    }\r\n    /** @internal */\r\n    '@@createUnwrapTarget'() {\r\n        return {};\r\n    }\r\n    /** @internal */\r\n    '@@get'(key) {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"get\"])(key, this);\r\n    }\r\n    /** @internal */\r\n    '@@has'(key) {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"has\"])(key, this);\r\n    }\r\n    /** @internal */\r\n    '@@set'(key, value) {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"set\"])(key, value, this);\r\n    }\r\n    /** @internal */\r\n    '@@update'(updater, key) {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"update\"])(updater, key, this);\r\n    }\r\n    /** @internal */\r\n    '@@verifyKey'(key) {\r\n        return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(key);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return Object(_functions__WEBPACK_IMPORTED_MODULE_3__[\"iterateFromFirst\"])(this);\r\n    }\r\n}\r\nfunction isRedBlackTree(arg) {\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(arg) && arg instanceof RedBlackTreeStructure;\r\n}\r\nfunction createTree(compare, mutability) {\r\n    return new RedBlackTreeStructure(Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"selectContext\"])(mutability), compare, _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"], 0);\r\n}\r\nfunction cloneTree(tree, mutability) {\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(mutability))\r\n        mutability = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isMutable\"])(tree);\r\n    return new RedBlackTreeStructure(Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"selectContext\"])(mutability), tree._compare, tree._root, tree._size);\r\n}\r\n//# sourceMappingURL=RedBlackTree.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/RedBlackTree.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/find.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/find.js ***!
  \*******************************************************************************/
/*! exports provided: findNodeByKey, findIndex, findPathToNodeByKey, findMaxNodeLeftOfKey, findPathToMaxNodeLeftOfKey, findMinNodeRightOfKey, findPathToMinNodeRightOfKey, findByIndex, findPathToIndex, findNext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findNodeByKey\", function() { return findNodeByKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findIndex\", function() { return findIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findPathToNodeByKey\", function() { return findPathToNodeByKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findMaxNodeLeftOfKey\", function() { return findMaxNodeLeftOfKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findPathToMaxNodeLeftOfKey\", function() { return findPathToMaxNodeLeftOfKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findMinNodeRightOfKey\", function() { return findMinNodeRightOfKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findPathToMinNodeRightOfKey\", function() { return findPathToMinNodeRightOfKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findByIndex\", function() { return findByIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findPathToIndex\", function() { return findPathToIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findNext\", function() { return findNext; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js\");\n\r\n\r\n\r\nfunction findNodeByKey(key, tree) {\r\n    var node = tree._root, compare = tree._compare, found = false;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node) && !found) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        var c = compare(key, node.key);\r\n        if (c === 0) {\r\n            found = true;\r\n        }\r\n        else {\r\n            node = c > 0 ? node._right : node._left;\r\n        }\r\n    }\r\n    return found ? node : void 0;\r\n}\r\nfunction findIndex(key, node, compare) {\r\n    var found = false, i = node._left._count;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node) && !found) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        var c = compare(key, node.key);\r\n        if (c === 0) {\r\n            found = true;\r\n        }\r\n        else if (c > 0) {\r\n            node = node._right;\r\n            i += node._left._count + 1;\r\n        }\r\n        else {\r\n            node = node._left;\r\n            i -= (node._right._count + 1);\r\n        }\r\n    }\r\n    return found ? i : -1;\r\n}\r\nfunction findPathToNodeByKey(key, node, compare) {\r\n    var path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].NONE, found = false;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node) && !found) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        var c = compare(key, node.key);\r\n        path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, path, 0 /* NONE */);\r\n        if (c === 0) {\r\n            found = true;\r\n        }\r\n        else if (c > 0) {\r\n            node = node._right;\r\n            path.next = 2 /* RIGHT */;\r\n        }\r\n        else {\r\n            node = c > 0 ? node._right : node._left;\r\n            path.next = 1 /* LEFT */;\r\n        }\r\n    }\r\n    if (!found) {\r\n        _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].release(path);\r\n        path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].NONE;\r\n    }\r\n    return path;\r\n}\r\nfunction findMaxNodeLeftOfKey(allowExactKeyMatch, key, tree) {\r\n    var node = tree._root, compare = tree._compare, found = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"], done = false;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node) && !done) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        var c = compare(key, node.key);\r\n        if (c === 0) {\r\n            done = allowExactKeyMatch;\r\n            if (done) {\r\n                found = node;\r\n            }\r\n            else {\r\n                node = node._left;\r\n            }\r\n        }\r\n        else if (c > 0) {\r\n            found = node;\r\n            node = node._right;\r\n        }\r\n        else {\r\n            node = node._left;\r\n        }\r\n    }\r\n    return Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(found) ? void 0 : found;\r\n}\r\nfunction findPathToMaxNodeLeftOfKey(allowExactKeyMatch, key, node, parent, compare) {\r\n    var path, found, c = compare(key, node.key);\r\n    if (c <= 0) {\r\n        if (c === 0 && allowExactKeyMatch) {\r\n            return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 0 /* NONE */);\r\n        }\r\n        if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._left)) {\r\n            return void 0;\r\n        }\r\n        path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 1 /* LEFT */);\r\n        found = findPathToMaxNodeLeftOfKey(allowExactKeyMatch, key, node._left, path, compare);\r\n        if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n            path.release();\r\n            return void 0;\r\n        }\r\n        return found;\r\n    }\r\n    if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._right)) {\r\n        return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 0 /* NONE */);\r\n    }\r\n    path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 2 /* RIGHT */);\r\n    found = findPathToMaxNodeLeftOfKey(allowExactKeyMatch, key, node._right, path, compare);\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n        path.next = 0 /* NONE */;\r\n        return path;\r\n    }\r\n    return found;\r\n}\r\nfunction findMinNodeRightOfKey(allowExactKeyMatch, key, node, compare) {\r\n    var c = compare(key, node.key);\r\n    if (c >= 0) {\r\n        if (c === 0 && allowExactKeyMatch) {\r\n            return node;\r\n        }\r\n        if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._right)) {\r\n            return void 0;\r\n        }\r\n        return findMinNodeRightOfKey(allowExactKeyMatch, key, node._right, compare);\r\n    }\r\n    if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._left)) {\r\n        return node;\r\n    }\r\n    var found = findMinNodeRightOfKey(allowExactKeyMatch, key, node._left, compare);\r\n    return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found) ? node : found;\r\n}\r\nfunction findPathToMinNodeRightOfKey(allowExactKeyMatch, key, node, parent, compare) {\r\n    var path, found, c = compare(key, node.key);\r\n    if (c >= 0) {\r\n        if (c === 0 && allowExactKeyMatch) {\r\n            return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 0 /* NONE */);\r\n        }\r\n        if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._right)) {\r\n            return void 0;\r\n        }\r\n        path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 2 /* RIGHT */);\r\n        found = findPathToMinNodeRightOfKey(allowExactKeyMatch, key, node._right, path, compare);\r\n        if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n            path.release();\r\n            return void 0;\r\n        }\r\n        return found;\r\n    }\r\n    if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._left)) {\r\n        return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 0 /* NONE */);\r\n    }\r\n    path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, parent, 1 /* LEFT */);\r\n    found = findPathToMinNodeRightOfKey(allowExactKeyMatch, key, node._left, path, compare);\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n        path.next = 0 /* NONE */;\r\n        return path;\r\n    }\r\n    return found;\r\n}\r\nfunction findByIndex(index, tree) {\r\n    var node = tree._root;\r\n    var i = node._left._count;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (i !== index) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        if (index < i) {\r\n            node = node._left;\r\n            i -= (node._right._count + 1);\r\n        }\r\n        else {\r\n            node = node._right;\r\n            i += node._left._count + 1;\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction findPathToIndex(index, node) {\r\n    var path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].NONE;\r\n    var i = node._left._count;\r\n    var loopCounter = 0; // ## DEV ##\r\n    while (i !== index) {\r\n        // ## DEV [[\r\n        if (++loopCounter === 100) {\r\n            throw new Error('Loop never terminated');\r\n        }\r\n        // ]] ##\r\n        if (index < i) {\r\n            path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, path, 1 /* LEFT */);\r\n            node = node._left;\r\n            i -= (node._right._count + 1);\r\n        }\r\n        else {\r\n            path = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, path, 2 /* RIGHT */);\r\n            node = node._right;\r\n            i += node._left._count + 1;\r\n        }\r\n    }\r\n    return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, path, 0 /* NONE */);\r\n}\r\nfunction leftOf(node) {\r\n    return node._left;\r\n}\r\nfunction rightOf(node) {\r\n    return node._right;\r\n}\r\nfunction findNext(compare, reversed, inclusive, key, current) {\r\n    let alreadyVisited, findPath, childOf;\r\n    if (reversed) {\r\n        alreadyVisited = 1 /* LEFT */;\r\n        findPath = findPathToMaxNodeLeftOfKey;\r\n        childOf = leftOf;\r\n    }\r\n    else {\r\n        alreadyVisited = 2 /* RIGHT */;\r\n        findPath = findPathToMinNodeRightOfKey;\r\n        childOf = rightOf;\r\n    }\r\n    if (inclusive && compare(key, current.node.key) === 0) {\r\n        inclusive = false;\r\n    }\r\n    let found, tentativeParentMatch = false;\r\n    while (current.isActive() && Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n        const parent = current.parent;\r\n        if (!parent.isNone()) {\r\n            let c = compare(key, parent.node.key);\r\n            if (reversed)\r\n                c = -c;\r\n            if (c >= 0) {\r\n                current = current.release();\r\n                current.next = alreadyVisited; // keep a record of the already-traversed branch for iteration purposes\r\n                if (inclusive && c === 0) {\r\n                    found = current;\r\n                }\r\n                continue;\r\n            }\r\n            else {\r\n                tentativeParentMatch = true;\r\n            }\r\n        }\r\n        const child = childOf(current.node);\r\n        if (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(child)) {\r\n            found = findPath(inclusive, key, child, current, compare);\r\n        }\r\n        if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(found)) {\r\n            current = current.release();\r\n            if (tentativeParentMatch) {\r\n                found = current;\r\n            }\r\n        }\r\n        current.next = alreadyVisited; // keep a record of the already-traversed branch for iteration purposes\r\n    }\r\n    return found;\r\n}\r\n//# sourceMappingURL=find.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/find.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js ***!
  \********************************************************************************/
/*! exports provided: RedBlackTreeStructure, isRedBlackTree, createTree, cloneTree, rebalance, PathNode, findPath, findSuccessor, clonePath, Node, NONE, createNode, isNone, editRightChild, editLeftChild, assignValue, rotateLeft, rotateRight, rotateLeftRight, rotateRightLeft, swapNodeContents, swapNodeColors, setChild, updateCount, RedBlackTreeIterator, RedBlackTreeKeyIterator, RedBlackTreeValueIterator, findNodeByKey, findIndex, findPathToNodeByKey, findMaxNodeLeftOfKey, findPathToMaxNodeLeftOfKey, findMinNodeRightOfKey, findPathToMinNodeRightOfKey, findByIndex, findPathToIndex, findNext, unwrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RedBlackTree */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/RedBlackTree.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeStructure\", function() { return _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__[\"RedBlackTreeStructure\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRedBlackTree\", function() { return _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__[\"isRedBlackTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createTree\", function() { return _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__[\"createTree\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cloneTree\", function() { return _RedBlackTree__WEBPACK_IMPORTED_MODULE_0__[\"cloneTree\"]; });\n\n/* harmony import */ var _rebalance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rebalance */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/rebalance.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rebalance\", function() { return _rebalance__WEBPACK_IMPORTED_MODULE_1__[\"rebalance\"]; });\n\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PathNode\", function() { return _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findPath\", function() { return _path__WEBPACK_IMPORTED_MODULE_2__[\"findPath\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findSuccessor\", function() { return _path__WEBPACK_IMPORTED_MODULE_2__[\"findSuccessor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clonePath\", function() { return _path__WEBPACK_IMPORTED_MODULE_2__[\"clonePath\"]; });\n\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NONE\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"NONE\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createNode\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"createNode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNone\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"isNone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"editRightChild\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"editRightChild\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"editLeftChild\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"editLeftChild\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"assignValue\", function() { return _node__WEBPACK_IMPORTED_MODULE_3__[\"assignValue\"]; });\n\n/* harmony import */ var _ops__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ops */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotateLeft\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"rotateLeft\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotateRight\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"rotateRight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotateLeftRight\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"rotateLeftRight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"rotateRightLeft\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"rotateRightLeft\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"swapNodeContents\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"swapNodeContents\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"swapNodeColors\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"swapNodeColors\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setChild\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"setChild\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"updateCount\", function() { return _ops__WEBPACK_IMPORTED_MODULE_4__[\"updateCount\"]; });\n\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./iterator */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/iterator.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeIterator\", function() { return _iterator__WEBPACK_IMPORTED_MODULE_5__[\"RedBlackTreeIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeKeyIterator\", function() { return _iterator__WEBPACK_IMPORTED_MODULE_5__[\"RedBlackTreeKeyIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeValueIterator\", function() { return _iterator__WEBPACK_IMPORTED_MODULE_5__[\"RedBlackTreeValueIterator\"]; });\n\n/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./find */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/find.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findNodeByKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findNodeByKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findIndex\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findPathToNodeByKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findPathToNodeByKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findMaxNodeLeftOfKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findMaxNodeLeftOfKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findPathToMaxNodeLeftOfKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findPathToMaxNodeLeftOfKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findMinNodeRightOfKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findMinNodeRightOfKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findPathToMinNodeRightOfKey\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findPathToMinNodeRightOfKey\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findByIndex\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findByIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findPathToIndex\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findPathToIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"findNext\", function() { return _find__WEBPACK_IMPORTED_MODULE_6__[\"findNext\"]; });\n\n/* harmony import */ var _unwrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./unwrap */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/unwrap.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unwrap\", function() { return _unwrap__WEBPACK_IMPORTED_MODULE_7__[\"unwrap\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/iterator.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/iterator.js ***!
  \***********************************************************************************/
/*! exports provided: RedBlackTreeIterator, RedBlackTreeKeyIterator, RedBlackTreeValueIterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeIterator\", function() { return RedBlackTreeIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeKeyIterator\", function() { return RedBlackTreeKeyIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RedBlackTreeValueIterator\", function() { return RedBlackTreeValueIterator; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js\");\n/* harmony import */ var _find__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./find */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/find.js\");\n\r\n\r\n\r\n\r\nclass RedBlackTreeIterator {\r\n    constructor(_current, _compare, _reversed) {\r\n        this._current = _current;\r\n        this._compare = _compare;\r\n        this._reversed = _reversed;\r\n        this._begun = false;\r\n    }\r\n    static create(current, compare, reversed) {\r\n        if (current.isActive()) {\r\n            current.next = reversed ? 2 /* RIGHT */ : 1 /* LEFT */; // indicates the already-traversed branch\r\n        }\r\n        return new RedBlackTreeIterator(current, compare, !!reversed);\r\n    }\r\n    _next(reverse) {\r\n        var current = this._current;\r\n        var result = { done: false, value: _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"] };\r\n        if (current.isNone()) {\r\n            result.done = true;\r\n            return result;\r\n        }\r\n        if (!this._begun) {\r\n            this._begun = true;\r\n            result.value = current.node;\r\n            return result;\r\n        }\r\n        var done = false, node, canEmit = false;\r\n        do {\r\n            switch (current.next) {\r\n                case 0 /* NONE */:\r\n                    if (reverse) {\r\n                        node = current.node._right;\r\n                        current.next = 2 /* RIGHT */;\r\n                    }\r\n                    else {\r\n                        node = current.node._left;\r\n                        current.next = 1 /* LEFT */;\r\n                    }\r\n                    if (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node)) {\r\n                        current = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, current, 0 /* NONE */);\r\n                    }\r\n                    break;\r\n                case 1 /* LEFT */:\r\n                    if (reverse) {\r\n                        current = current.release();\r\n                    }\r\n                    else if (canEmit) {\r\n                        result.value = current.node;\r\n                        done = true;\r\n                    }\r\n                    else {\r\n                        node = current.node._right;\r\n                        if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node)) {\r\n                            current = current.release();\r\n                        }\r\n                        else {\r\n                            current.next = 2 /* RIGHT */;\r\n                            current = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, current, 0 /* NONE */);\r\n                        }\r\n                    }\r\n                    break;\r\n                case 2 /* RIGHT */:\r\n                    if (!reverse) {\r\n                        current = current.release();\r\n                    }\r\n                    else if (canEmit) {\r\n                        result.value = current.node;\r\n                        done = true;\r\n                    }\r\n                    else {\r\n                        node = current.node._left;\r\n                        if (Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node)) {\r\n                            current = current.release();\r\n                        }\r\n                        else {\r\n                            current.next = 1 /* LEFT */;\r\n                            current = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].next(node, current, 0 /* NONE */);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            if (current.isNone()) {\r\n                result.done = true;\r\n                result.value = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n                done = true;\r\n            }\r\n            else {\r\n                canEmit = true;\r\n            }\r\n        } while (!done);\r\n        this._current = current;\r\n        return result;\r\n    }\r\n    _findNext(reverse, inclusive, key) {\r\n        const result = { done: true, value: _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"] };\r\n        let current = this._current, c;\r\n        if (current.isActive()) {\r\n            if ((!this._begun && (this._begun = true, c = this._compare(current.node.key, key), c = reverse ? -c : c, inclusive ? c >= 0 : c > 0)) ||\r\n                (this._current = current = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"valueOrDefault\"])(Object(_find__WEBPACK_IMPORTED_MODULE_3__[\"findNext\"])(this._compare, reverse, inclusive, key, current), _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].NONE), current.isActive())) {\r\n                result.done = false;\r\n                result.value = current.node;\r\n                current.next = reverse ? 2 /* RIGHT */ : 1 /* LEFT */;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    next(key, inclusive) {\r\n        return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(key) ? this._next(this._reversed) : this._findNext(this._reversed, inclusive !== false, key);\r\n    }\r\n    previous(key, inclusive) {\r\n        return Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(key) ? this._next(!this._reversed) : this._findNext(!this._reversed, inclusive !== false, key);\r\n    }\r\n    clone() {\r\n        return new RedBlackTreeIterator(Object(_path__WEBPACK_IMPORTED_MODULE_2__[\"clonePath\"])(this._current), this._compare, this._reversed);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\nclass RedBlackTreeKeyIterator {\r\n    constructor(_it) {\r\n        this._it = _it;\r\n    }\r\n    next(key, inclusive) {\r\n        const result = this._it.next(key, inclusive);\r\n        return (result.value = result.value.key, result);\r\n    }\r\n    previous(key, inclusive) {\r\n        const result = this._it.previous(key, inclusive);\r\n        return (result.value = result.value.key, result);\r\n    }\r\n    clone() {\r\n        return new RedBlackTreeKeyIterator(this._it.clone());\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\nclass RedBlackTreeValueIterator {\r\n    constructor(_it) {\r\n        this._it = _it;\r\n    }\r\n    next(key, inclusive) {\r\n        const result = this._it.next(key, inclusive);\r\n        return (result.value = result.value.value, result);\r\n    }\r\n    previous(key, inclusive) {\r\n        const result = this._it.previous(key, inclusive);\r\n        return (result.value = result.value.value, result);\r\n    }\r\n    clone() {\r\n        return new RedBlackTreeValueIterator(this._it.clone());\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=iterator.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/iterator.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js ***!
  \*******************************************************************************/
/*! exports provided: Node, NONE, createNode, isNone, editRightChild, editLeftChild, assignValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NONE\", function() { return NONE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNode\", function() { return createNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNone\", function() { return isNone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"editRightChild\", function() { return editRightChild; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"editLeftChild\", function() { return editLeftChild; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignValue\", function() { return assignValue; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n\r\nclass Node {\r\n    constructor(mctx, key, value, _red, _left, _right, _count) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this._red = _red;\r\n        this._left = _left;\r\n        this._right = _right;\r\n        this._count = _count;\r\n        this['@@mctx'] = mctx;\r\n    }\r\n    /** @internal */\r\n    '@@clone'(mctx) {\r\n        return new Node(mctx, this.key, this.value, this._red, this._left, this._right, this._count);\r\n    }\r\n}\r\nconst anyVoid = void 0;\r\nconst NONE = new Node(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"immutable\"](), anyVoid, anyVoid, false, anyVoid, anyVoid, 0);\r\nNONE._left = NONE;\r\nNONE._right = NONE;\r\nfunction createNode(tree, red, key, value) {\r\n    return new Node(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"getSubordinateContext\"](tree), key, value, red, NONE, NONE, 1);\r\n}\r\nfunction isNone(node) {\r\n    return node === NONE;\r\n}\r\nfunction editRightChild(owner, node) {\r\n    var child = node._right;\r\n    return isNone(child) || _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"areContextsRelated\"](child, owner) ? child\r\n        : (node._right = (child = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modifyAsSubordinate\"](owner, child)), child);\r\n}\r\nfunction editLeftChild(owner, node) {\r\n    var child = node._left;\r\n    return isNone(child) || _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"areContextsRelated\"](child, owner) ? child\r\n        : (node._left = (child = _collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"modifyAsSubordinate\"](owner, child)), child);\r\n}\r\nfunction assignValue(value, node) {\r\n    const v = node.value;\r\n    // Note the double-equals below is used to correctly compare Symbol() with Object(Symbol())\r\n    if (v === value || (v !== null && typeof v === 'object' && v == value)) {\r\n        return false;\r\n    }\r\n    node.value = value;\r\n    return true;\r\n}\r\n//# sourceMappingURL=node.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js ***!
  \******************************************************************************/
/*! exports provided: rotateLeft, rotateRight, rotateLeftRight, rotateRightLeft, swapNodeContents, swapNodeColors, setChild, updateCount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateLeft\", function() { return rotateLeft; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateRight\", function() { return rotateRight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateLeftRight\", function() { return rotateLeftRight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateRightLeft\", function() { return rotateRightLeft; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"swapNodeContents\", function() { return swapNodeContents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"swapNodeColors\", function() { return swapNodeColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setChild\", function() { return setChild; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateCount\", function() { return updateCount; });\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n\r\nfunction writeBack(upper, lower, tree) {\r\n    if (upper.isActive()) {\r\n        setChild(upper.next, upper.node, lower);\r\n    }\r\n    else {\r\n        tree._root = lower;\r\n    }\r\n}\r\nfunction rotateLeft(upper, parent, child, tree) {\r\n    parent._right = child._left;\r\n    child._left = parent;\r\n    updateCount(parent);\r\n    updateCount(child);\r\n    writeBack(upper, child, tree);\r\n    return child;\r\n}\r\nfunction rotateRight(upper, parent, child, tree) {\r\n    parent._left = child._right;\r\n    child._right = parent;\r\n    updateCount(parent);\r\n    updateCount(child);\r\n    writeBack(upper, child, tree);\r\n    return child;\r\n}\r\nfunction rotateLeftRight(upper, grandParent, parent, child, tree) {\r\n    parent._right = child._left;\r\n    child._left = parent;\r\n    grandParent._left = child._right;\r\n    child._right = grandParent;\r\n    updateCount(grandParent);\r\n    updateCount(parent);\r\n    updateCount(child);\r\n    writeBack(upper, child, tree);\r\n    return child;\r\n}\r\nfunction rotateRightLeft(upper, grandParent, parent, child, tree) {\r\n    parent._left = child._right;\r\n    child._right = parent;\r\n    grandParent._right = child._left;\r\n    child._left = grandParent;\r\n    updateCount(grandParent);\r\n    updateCount(parent);\r\n    updateCount(child);\r\n    writeBack(upper, child, tree);\r\n    return child;\r\n}\r\nfunction swapNodeContents(upper, lower) {\r\n    var key = upper.key;\r\n    var value = upper.value;\r\n    upper.key = lower.key;\r\n    upper.value = lower.value;\r\n    lower.key = key;\r\n    lower.value = value;\r\n}\r\nfunction swapNodeColors(upper, lower) {\r\n    var red = upper._red;\r\n    upper._red = lower._red;\r\n    lower._red = red;\r\n}\r\nfunction setChild(branch, parent, child) {\r\n    if (branch === 0 /* NONE */)\r\n        return;\r\n    if (branch === 1 /* LEFT */) {\r\n        parent._left = child;\r\n    }\r\n    else {\r\n        parent._right = child;\r\n    }\r\n    updateCount(parent);\r\n}\r\nfunction updateCount(node) {\r\n    if (Object(_node__WEBPACK_IMPORTED_MODULE_0__[\"isNone\"])(node))\r\n        return;\r\n    node._count = node._left._count + node._right._count + 1;\r\n}\r\n//# sourceMappingURL=ops.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js ***!
  \*******************************************************************************/
/*! exports provided: PathNode, findPath, findSuccessor, clonePath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PathNode\", function() { return PathNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findPath\", function() { return findPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findSuccessor\", function() { return findSuccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clonePath\", function() { return clonePath; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony import */ var _ops__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ops */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js\");\n\r\n\r\n\r\nclass PathNode {\r\n    constructor(node, parent, next) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        this.next = next;\r\n    }\r\n    static next(node, parent, next) {\r\n        var p = PathNode.cache;\r\n        if (p.isActive()) {\r\n            PathNode.cache = p.parent;\r\n            p.node = node;\r\n            p.parent = parent;\r\n            p.next = next;\r\n        }\r\n        else {\r\n            p = new PathNode(node, parent, next);\r\n        }\r\n        return p;\r\n    }\r\n    static release(p, node) {\r\n        if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(node)) {\r\n            node = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        }\r\n        do {\r\n            p.node = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        } while (p.parent.isActive() && (p = p.parent, node = p.node));\r\n        p.parent = PathNode.cache;\r\n        return node;\r\n    }\r\n    static releaseAndRecount(p, node) {\r\n        do {\r\n            Object(_ops__WEBPACK_IMPORTED_MODULE_2__[\"updateCount\"])(p.node);\r\n            p.node = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        } while (p.parent.isActive() && (p = p.parent, node = p.node));\r\n        p.parent = PathNode.cache;\r\n        return node;\r\n    }\r\n    isActive() {\r\n        return this !== PathNode.NONE;\r\n    }\r\n    isNone() {\r\n        return this === PathNode.NONE;\r\n    }\r\n    replace(node) {\r\n        if (this.parent.isActive()) {\r\n            Object(_ops__WEBPACK_IMPORTED_MODULE_2__[\"setChild\"])(this.parent.next, this.parent.node, node);\r\n        }\r\n        this.node = node;\r\n    }\r\n    release() {\r\n        var p = this.parent;\r\n        this.node = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        this.parent = PathNode.cache;\r\n        PathNode.cache = this;\r\n        return p;\r\n    }\r\n}\r\nPathNode.NONE = new PathNode(_node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"], void 0, 0 /* NONE */);\r\nPathNode.NONE.parent = PathNode.NONE;\r\nPathNode.cache = PathNode.NONE;\r\nfunction findPath(tree, key, root, compare, p) {\r\n    var node = root; // Assumes root has already been assigned. Check for a void root before calling insert().\r\n    if (Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(p)) {\r\n        p = PathNode.NONE;\r\n    }\r\n    do {\r\n        var c = compare(key, node.key);\r\n        if (c < 0) {\r\n            p = PathNode.next(node, p, 1 /* LEFT */);\r\n            node = Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, node);\r\n        }\r\n        else if (c > 0) {\r\n            p = PathNode.next(node, p, 2 /* RIGHT */);\r\n            node = Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, node);\r\n        }\r\n        else {\r\n            p = PathNode.next(node, p, 0 /* NONE */);\r\n            node = _node__WEBPACK_IMPORTED_MODULE_1__[\"NONE\"];\r\n        }\r\n    } while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node));\r\n    return p;\r\n}\r\nfunction findSuccessor(tree, p) {\r\n    p.next = 2 /* RIGHT */;\r\n    var node = Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, p.node);\r\n    while (!Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._left)) {\r\n        p = PathNode.next(node, p, 1 /* LEFT */);\r\n        node = Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, node);\r\n    }\r\n    p = PathNode.next(node, p, 0 /* NONE */);\r\n    return p;\r\n}\r\nfunction clonePath(path) {\r\n    let child = path = PathNode.next(path.node, path.parent, path.next), parent = child;\r\n    while (!parent.isNone()) {\r\n        child.parent = parent = PathNode.next(parent.node, parent.parent, parent.next);\r\n        child = parent;\r\n        parent = child.parent;\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=path.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/rebalance.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/rebalance.js ***!
  \************************************************************************************/
/*! exports provided: rebalance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rebalance\", function() { return rebalance; });\n/* harmony import */ var _ops__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ops */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/ops.js\");\n/* harmony import */ var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/node.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/path.js\");\n\r\n\r\n\r\nfunction rebalance(tail, node, parent, tree) {\r\n    var p = tail;\r\n    var done = false;\r\n    do {\r\n        parent = p.node;\r\n        if (done) {\r\n            Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(parent);\r\n        }\r\n        else if (parent._red) {\r\n            var pp = p.parent, grandParent = pp.node;\r\n            var uncle = pp.next === 1 /* LEFT */ ? Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editRightChild\"])(tree, grandParent) : Object(_node__WEBPACK_IMPORTED_MODULE_1__[\"editLeftChild\"])(tree, grandParent);\r\n            if (uncle._red) {\r\n                uncle._red = false;\r\n                parent._red = false;\r\n                if (pp.parent.isActive()) {\r\n                    grandParent._red = true;\r\n                }\r\n                Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(parent);\r\n                Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(grandParent);\r\n                node = grandParent;\r\n            }\r\n            else {\r\n                if (pp.next === p.next) {\r\n                    if (p.next === 1 /* LEFT */) {\r\n                        Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"rotateRight\"])(pp.parent, grandParent, parent, tree);\r\n                    }\r\n                    else {\r\n                        Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"rotateLeft\"])(pp.parent, grandParent, parent, tree);\r\n                    }\r\n                    grandParent._red = true;\r\n                    parent._red = false;\r\n                    node = parent;\r\n                }\r\n                else {\r\n                    if (p.next === 1 /* LEFT */) {\r\n                        Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"rotateRightLeft\"])(pp.parent, grandParent, parent, node, tree);\r\n                    }\r\n                    else {\r\n                        Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"rotateLeftRight\"])(pp.parent, grandParent, parent, node, tree);\r\n                    }\r\n                    node._red = false;\r\n                    grandParent._red = true;\r\n                }\r\n            }\r\n            p = p.release();\r\n            if (!node._red) {\r\n                done = true;\r\n            }\r\n        }\r\n        else {\r\n            done = parent === p.node;\r\n            node = parent;\r\n            Object(_ops__WEBPACK_IMPORTED_MODULE_0__[\"updateCount\"])(node);\r\n        }\r\n        p = p.release();\r\n    } while (p.isActive());\r\n    if (p.isActive()) {\r\n        node = _path__WEBPACK_IMPORTED_MODULE_2__[\"PathNode\"].release(p, node);\r\n    }\r\n}\r\n//# sourceMappingURL=rebalance.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/rebalance.js?");

/***/ }),

/***/ "./node_modules/@collectable/red-black-tree/lib/es2015/internals/unwrap.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@collectable/red-black-tree/lib/es2015/internals/unwrap.js ***!
  \*********************************************************************************/
/*! exports provided: unwrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrap\", function() { return unwrap; });\n/* harmony import */ var _collectable_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\n/* harmony import */ var _internals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internals */ \"./node_modules/@collectable/red-black-tree/lib/es2015/internals/index.js\");\n\r\n\r\nfunction unwrap(tree, target) {\r\n    if (tree._size === 0) {\r\n        return {};\r\n    }\r\n    var stack = new Array(Math.ceil(Math.log(tree._size)) * 2);\r\n    var i = 0, node = tree._root, branch = 1 /* LEFT */;\r\n    do {\r\n        target[Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"unwrapKey\"])(node.key)] = Object(_collectable_core__WEBPACK_IMPORTED_MODULE_0__[\"unwrap\"])(node.value);\r\n        if (branch === 1 /* LEFT */) {\r\n            if (!Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._left)) {\r\n                stack[i++] = [node, 2 /* RIGHT */];\r\n                node = node._left;\r\n                branch = 1 /* LEFT */;\r\n                continue;\r\n            }\r\n            else {\r\n                branch = 2 /* RIGHT */;\r\n            }\r\n        }\r\n        if (branch === 2 /* RIGHT */) {\r\n            if (!Object(_internals__WEBPACK_IMPORTED_MODULE_1__[\"isNone\"])(node._right)) {\r\n                stack[i++] = [node, 0 /* NONE */];\r\n                node = node._right;\r\n                branch = 1 /* LEFT */;\r\n                continue;\r\n            }\r\n            else {\r\n                branch = 0 /* NONE */;\r\n            }\r\n        }\r\n        if (branch === 0 /* NONE */ && i > 0) {\r\n            --i;\r\n            node = stack[i][0];\r\n            branch = stack[i][1];\r\n        }\r\n    } while (i > 0 || branch !== 0 /* NONE */);\r\n    return target;\r\n}\r\n//# sourceMappingURL=unwrap.js.map\n\n//# sourceURL=webpack:///./node_modules/@collectable/red-black-tree/lib/es2015/internals/unwrap.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/array.js":
/*!************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/array.js ***!
  \************************************************************/
/*! exports provided: arraysEqual, arraysEqualStartCount, copyArrayShallow, concatArray, withArrayIndexUpdated, withArrayIndexRemoved, withArrayIndexInserted, withArrayElementAppended, withArrayElementPrepended, writeArrayElementsUsing, writeArrayElements, skipArrayStart, takeArrayStart, firstArrayElement, lastArrayElement, lastArrayIndex, asArray, toArray, partitionArray, partitionArrayAtIndex, removeFromUnsortedArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arraysEqual\", function() { return arraysEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arraysEqualStartCount\", function() { return arraysEqualStartCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copyArrayShallow\", function() { return copyArrayShallow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"concatArray\", function() { return concatArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexUpdated\", function() { return withArrayIndexUpdated; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexRemoved\", function() { return withArrayIndexRemoved; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexInserted\", function() { return withArrayIndexInserted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementAppended\", function() { return withArrayElementAppended; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementPrepended\", function() { return withArrayElementPrepended; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElementsUsing\", function() { return writeArrayElementsUsing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElements\", function() { return writeArrayElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"skipArrayStart\", function() { return skipArrayStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"takeArrayStart\", function() { return takeArrayStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstArrayElement\", function() { return firstArrayElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastArrayElement\", function() { return lastArrayElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastArrayIndex\", function() { return lastArrayIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asArray\", function() { return asArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return toArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"partitionArray\", function() { return partitionArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"partitionArrayAtIndex\", function() { return partitionArrayAtIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeFromUnsortedArray\", function() { return removeFromUnsortedArray; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math */ \"./node_modules/@frptools/corelib/lib/es2015/math.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core */ \"./node_modules/@frptools/corelib/lib/es2015/core.js\");\n/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is */ \"./node_modules/@frptools/corelib/lib/es2015/is.js\");\n\r\n\r\n\r\nfunction arraysEqual(arg0, arg1, arg2) {\r\n    let eq, a, b;\r\n    if (Object(_is__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(arg0)) {\r\n        switch (arguments.length) {\r\n            case 1: return (a, b) => arraysEqual(arg0, a, b);\r\n            case 2: return (b) => arraysEqual(arg0, arg1, b);\r\n        }\r\n        a = arg1;\r\n        b = arg2;\r\n        eq = arg0;\r\n    }\r\n    else {\r\n        a = arg0;\r\n        b = arg1;\r\n        eq = _core__WEBPACK_IMPORTED_MODULE_1__[\"equals\"];\r\n    }\r\n    if (a === b)\r\n        return true;\r\n    if (a.length !== b.length)\r\n        return false;\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (!eq(a[i], b[i]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction arraysEqualStartCount(arg0, arg1, arg2) {\r\n    let eq, a, b;\r\n    if (Object(_is__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(arg0)) {\r\n        switch (arguments.length) {\r\n            case 1: return (a, b) => arraysEqualStartCount(arg0, a, b);\r\n            case 2: return (b) => arraysEqualStartCount(arg0, arg1, b);\r\n        }\r\n        a = arg1;\r\n        b = arg2;\r\n        eq = arg0;\r\n    }\r\n    else {\r\n        a = arg0;\r\n        b = arg1;\r\n        eq = _core__WEBPACK_IMPORTED_MODULE_1__[\"equals\"];\r\n    }\r\n    if (a === b)\r\n        return true;\r\n    const max = Object(_math__WEBPACK_IMPORTED_MODULE_0__[\"min\"])(a.length, b.length);\r\n    for (let i = 0; i < max; i++) {\r\n        if (!eq(a[i], b[i]))\r\n            return i;\r\n    }\r\n    return max;\r\n}\r\nfunction copyArrayShallow(values) {\r\n    if (values.length > 7) {\r\n        var arr = new Array(values.length);\r\n        for (var i = 0; i < values.length; i++) {\r\n            arr[i] = values[i];\r\n        }\r\n        return arr;\r\n    }\r\n    switch (values.length) {\r\n        case 0: return [];\r\n        case 1: return [values[0]];\r\n        case 2: return [values[0], values[1]];\r\n        case 3: return [values[0], values[1], values[2]];\r\n        case 4: return [values[0], values[1], values[2], values[3]];\r\n        case 5: return [values[0], values[1], values[2], values[3], values[4]];\r\n        case 6: return [values[0], values[1], values[2], values[3], values[4], values[5]];\r\n        case 7: return [values[0], values[1], values[2], values[3], values[4], values[5], values[6]];\r\n        default: return values.slice(); // never reached, but seems to trigger optimization in V8 for some reason\r\n    }\r\n}\r\nfunction concatArray(left, right) {\r\n    var arr = new Array(left.length + right.length);\r\n    for (var i = 0; i < left.length; i++) {\r\n        arr[i] = left[i];\r\n    }\r\n    for (var j = 0; j < right.length; i++, j++) {\r\n        arr[i] = right[j];\r\n    }\r\n    return arr;\r\n}\r\nfunction withArrayIndexUpdated(index, value, array) {\r\n    var length = array.length;\r\n    var newArray = Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        newArray[i] = array[i];\r\n    }\r\n    newArray[index] = value;\r\n    return newArray;\r\n}\r\nfunction withArrayIndexRemoved(index, array) {\r\n    var length = array.length;\r\n    if (length === 0 || index >= length)\r\n        return array;\r\n    if (length === 1)\r\n        return [];\r\n    var newArray = Array(length - 1);\r\n    for (var i = 0; i < index; ++i) {\r\n        newArray[i] = array[i];\r\n    }\r\n    for (i = i + 1; i < length; ++i) {\r\n        newArray[i - 1] = array[i];\r\n    }\r\n    return newArray;\r\n}\r\nfunction withArrayIndexInserted(index, value, array) {\r\n    var length = array.length;\r\n    var newArray = Array(length + 1);\r\n    for (var i = 0; i < index; ++i) {\r\n        newArray[i] = array[i];\r\n    }\r\n    newArray[i++] = value;\r\n    for (; i < length + 1; ++i) {\r\n        newArray[i] = array[i - 1];\r\n    }\r\n    return newArray;\r\n}\r\nfunction withArrayElementAppended(value, array) {\r\n    const newArray = Array(array.length + 1);\r\n    for (var i = 0; i < array.length; ++i) {\r\n        newArray[i] = array[i];\r\n    }\r\n    newArray[array.length] = value;\r\n    return newArray;\r\n}\r\nfunction withArrayElementPrepended(value, array) {\r\n    const newArray = Array(array.length + 1);\r\n    newArray[0] = value;\r\n    for (var i = 0; i < array.length; ++i) {\r\n        newArray[i + 1] = array[i];\r\n    }\r\n    return newArray;\r\n}\r\nfunction writeArrayElementsUsing(mapFn, sourceValues, targetValues, sourceIndex, targetIndex, count) {\r\n    var i, j, c;\r\n    if (sourceValues === targetValues && sourceIndex < targetIndex) {\r\n        for (i = sourceIndex + count - 1, j = targetIndex + count - 1, c = 0; c < count; i--, j--, c++) {\r\n            targetValues[j] = mapFn(sourceValues[i], j);\r\n        }\r\n    }\r\n    else {\r\n        for (i = sourceIndex, j = targetIndex, c = 0; c < count; i++, j++, c++) {\r\n            targetValues[j] = mapFn(sourceValues[i], j);\r\n        }\r\n    }\r\n}\r\nfunction writeArrayElements(source, destination, sourceIndex, destinationIndex, count) {\r\n    var i, j, c;\r\n    if (source === destination && sourceIndex < destinationIndex) {\r\n        for (i = sourceIndex + count - 1, j = destinationIndex + count - 1, c = 0; c < count; i--, j--, c++) {\r\n            destination[j] = source[i];\r\n        }\r\n    }\r\n    else {\r\n        for (i = sourceIndex, j = destinationIndex, c = 0; c < count; i++, j++, c++) {\r\n            destination[j] = source[i];\r\n        }\r\n    }\r\n}\r\nfunction skipArrayStart(count, values) {\r\n    var array = new Array(Object(_math__WEBPACK_IMPORTED_MODULE_0__[\"max\"])(0, values.length - count));\r\n    for (var i = 0, j = count; j < values.length; i++, j++) {\r\n        array[i] = values[j];\r\n    }\r\n    return array;\r\n}\r\nfunction takeArrayStart(count, values) {\r\n    const array = new Array(Object(_math__WEBPACK_IMPORTED_MODULE_0__[\"min\"])(count, values.length));\r\n    const length = array.length;\r\n    for (let i = 0; i < length; i++) {\r\n        array[i] = values[i];\r\n    }\r\n    return array;\r\n}\r\nfunction firstArrayElement(values) {\r\n    return values[0];\r\n}\r\nfunction lastArrayElement(values) {\r\n    return values[values.length - 1];\r\n}\r\nfunction lastArrayIndex(values) {\r\n    return values.length - 1;\r\n}\r\nfunction asArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\nfunction toArray(value) {\r\n    return [value];\r\n}\r\nfunction partitionArray(f, arr) {\r\n    return arr.reduce((a, x) => ((a[f(x) ? 0 : 1]).push(x), a), [[], []]);\r\n}\r\nfunction partitionArrayAtIndex(index, array) {\r\n    const a = new Array(index);\r\n    const b = new Array(array.length - index);\r\n    writeArrayElements(array, a, 0, 0, index);\r\n    writeArrayElements(array, b, index, 0, array.length - index);\r\n    return [a, b];\r\n}\r\nfunction removeFromUnsortedArray(predicate, array) {\r\n    const lastIndex = array.length - 1;\r\n    for (let i = 0; i <= lastIndex; i++) {\r\n        if (predicate(array[i])) {\r\n            if (i < lastIndex) {\r\n                array[i] = array[lastIndex];\r\n            }\r\n            array.length = lastIndex;\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=array.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/array.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/compare.js":
/*!**************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/compare.js ***!
  \**************************************************************/
/*! exports provided: numericCompare, stringCompare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"numericCompare\", function() { return numericCompare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringCompare\", function() { return stringCompare; });\nconst numericCompare = function (a, b) {\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n};\r\nconst stringCompare = function (a, b) {\r\n    return a.localeCompare(b);\r\n};\r\n//# sourceMappingURL=compare.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/compare.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/core.js":
/*!***********************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/core.js ***!
  \***********************************************************/
/*! exports provided: compose, pipe, converge, spread, spreadLeft, applyUsing, flip, ifElse, negate, equals, or, and, any, mapIf, mapUnless, map, defaultUsing, defaultIfUndefined, defaultIfNothing, defaultIfNull, defaultIf, defaultUnless, valueOrDefault, undefinedIfNull, identity, noop, constant, nothing, tap, throwError, throwNotImplemented, throwNotSupported, throwInvalidOperation, throwMissing, throwArgumentError, error, notImplemented, notSupported, invalidOperation, missing, argumentError, getArg, argsToArray, mapApply, invoker, invokeWithArgs, invokeMethod, invokeMethodWithArgs, assoc, objectOf, construct, mapProps, mapObject, toPairs, get, has, maybeGet, getFrom, valueOf, substr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compose\", function() { return compose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return pipe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"converge\", function() { return converge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spread\", function() { return spread; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spreadLeft\", function() { return spreadLeft; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyUsing\", function() { return applyUsing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flip\", function() { return flip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ifElse\", function() { return ifElse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return negate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"or\", function() { return or; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"and\", function() { return and; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"any\", function() { return any; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapIf\", function() { return mapIf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapUnless\", function() { return mapUnless; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultUsing\", function() { return defaultUsing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultIfUndefined\", function() { return defaultIfUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNothing\", function() { return defaultIfNothing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNull\", function() { return defaultIfNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultIf\", function() { return defaultIf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultUnless\", function() { return defaultUnless; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"valueOrDefault\", function() { return valueOrDefault; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"undefinedIfNull\", function() { return undefinedIfNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"constant\", function() { return constant; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return nothing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tap\", function() { return tap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwError\", function() { return throwError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwNotImplemented\", function() { return throwNotImplemented; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwNotSupported\", function() { return throwNotSupported; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwInvalidOperation\", function() { return throwInvalidOperation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwMissing\", function() { return throwMissing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"throwArgumentError\", function() { return throwArgumentError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"error\", function() { return error; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notImplemented\", function() { return notImplemented; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notSupported\", function() { return notSupported; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invalidOperation\", function() { return invalidOperation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"missing\", function() { return missing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"argumentError\", function() { return argumentError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getArg\", function() { return getArg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"argsToArray\", function() { return argsToArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapApply\", function() { return mapApply; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invoker\", function() { return invoker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invokeWithArgs\", function() { return invokeWithArgs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invokeMethod\", function() { return invokeMethod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invokeMethodWithArgs\", function() { return invokeMethodWithArgs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assoc\", function() { return assoc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"objectOf\", function() { return objectOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"construct\", function() { return construct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapProps\", function() { return mapProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapObject\", function() { return mapObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toPairs\", function() { return toPairs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"maybeGet\", function() { return maybeGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFrom\", function() { return getFrom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"valueOf\", function() { return valueOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"substr\", function() { return substr; });\n/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ \"./node_modules/@frptools/corelib/lib/es2015/is.js\");\n/* harmony import */ var _curry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curry */ \"./node_modules/@frptools/corelib/lib/es2015/curry.js\");\n\r\n\r\n// Composition\r\nconst compose = (...fns) => (...args) => fns.reduceRight((x, f, i) => i === fns.length - 1 ? f(...args) : f(x), null);\r\nconst pipe = (...fns) => (...args) => (Array.isArray(fns[0]) ? fns[0] : fns).reduce((x, f, i) => i === 0 ? f(...x) : f(x), args);\r\nconst converge = (f, ...fns) => (x) => f(...fns.map(g => g(x)));\r\nconst spread = (f, ...fns) => (...x) => f(...fns.map((g, i) => g(x[i])));\r\nconst spreadLeft = (f, ...fns) => (...x) => f(...fns.map((g, i) => g(x[fns.length - i - 1])));\r\nconst applyUsing = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, x) => f(x)(x));\r\nconst flip = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((f, a, b) => f(b, a));\r\n// Logic\r\nconst ifElse = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry4n\"])((f, g, h, ...x) => f(...x) ? g(...x) : h(...x));\r\nconst negate = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, x) => !f(x));\r\nconst equals = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((a, b) => a === b);\r\nconst or = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((f, g, x) => f(x) || g(x));\r\nconst and = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((f, g, x) => f(x) && g(x));\r\n// tslint:disable-next-line:variable-name\r\nconst any = (...fns) => (x) => fns.some(f => f(x));\r\nconst mapIf = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((p, f, x) => p(x) ? f(x) : x);\r\nconst mapUnless = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((p, f, x) => p(x) ? x : f(x));\r\n// Transformation\r\nconst map = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, x) => f(x));\r\nconst defaultUsing = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, x) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(x) ? f() : x);\r\nconst defaultIfUndefined = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((a, x) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(x) ? a : x);\r\nconst defaultIfNothing = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((a, x) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(x) ? a : x);\r\nconst defaultIfNull = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((a, x) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNull\"])(x) ? a : x);\r\nconst defaultIf = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((f, a, x) => f(x) ? a : x);\r\nconst defaultUnless = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((f, a, x) => f(x) ? x : a);\r\nconst valueOrDefault = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((x, a) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(x) ? a : x);\r\nconst undefinedIfNull = defaultIfNull(void 0);\r\nconst identity = (x) => x;\r\nconst noop = (...args) => { };\r\nconst constant = (x) => () => x;\r\nconst nothing = constant(void 0);\r\nconst tap = (f) => (x) => (f(x), x);\r\n// Errors\r\nconst throwError = (s = '') => { throw new Error(s); };\r\nconst throwNotImplemented = (s) => throwError(`Not implemented${s ? `: ${s}` : ''}`);\r\nconst throwNotSupported = (s) => throwError(`Operation not supported${s ? `: ${s}` : ''}`);\r\nconst throwInvalidOperation = (s) => throwError(`Invalid operation${s ? `: ${s}` : ''}`);\r\nconst throwMissing = (name, message) => throwError(`No value is defined${name ? ` for \"${name}\"${message ? ` (${message})` : ''}` : ''}`);\r\nconst throwArgumentError = (name, message) => throwError(`Invalid ${name ? `value for parameter \"${name}\"` : 'argument value'}${message ? `: ${message}` : ''}`);\r\nconst error = (s) => () => throwError(s);\r\nconst notImplemented = (s) => () => throwNotImplemented(s);\r\nconst notSupported = (s) => () => throwNotSupported(s);\r\nconst invalidOperation = (s) => () => throwInvalidOperation(s);\r\nconst missing = (name, message) => () => throwMissing(name, message);\r\nconst argumentError = (name, message) => () => throwArgumentError(name, message);\r\n// Function Arguments\r\nconst getArg = (i) => function () { return arguments[i]; };\r\nconst argsToArray = (...args) => args;\r\nconst mapApply = (f, g) => (...args) => f(...args.map(g));\r\n// Function Binding\r\nconst invoker = (f, ...a) => (...b) => f(...a, ...b);\r\nconst invokeWithArgs = (...args) => (f) => f(...args);\r\nconst invokeMethod = (key) => (target) => target[key]();\r\nconst invokeMethodWithArgs = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2n\"])((key, ...args) => (target) => target[key](...args));\r\n// Object\r\nconst assoc = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry3\"])((key, value, target) => (Object.assign({}, target, { [key]: value })));\r\nconst objectOf = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((key, value) => ({ [key]: value }));\r\nconst construct = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2n\"])((type, ...args) => new type(...args));\r\nconst mapProps = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, o) => Object.keys(o).map(key => f(key, o[key])));\r\nconst mapObject = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((f, o) => Object.keys(o).reduce((o, key) => (o[key] = f(o[key], key), o), Object.assign({}, o)));\r\nconst toPairs = (o) => Object.keys(o).map(key => [key, o[key]]);\r\nconst get = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((key, o) => o[key]);\r\nconst has = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((key, o) => key in o);\r\nconst maybeGet = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((key, o) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(o) ? void 0 : o[key]);\r\nconst getFrom = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])((o, k) => o[k]);\r\nconst valueOf = (value) => Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(value) ? value : value.valueOf();\r\n// String\r\nconst substr = (from, length) => (s) => s.substr(from, length);\r\n//# sourceMappingURL=core.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/core.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/curry.js":
/*!************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/curry.js ***!
  \************************************************************/
/*! exports provided: curry2, curry3, curry4, curry2n, curry3n, curry4n */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry2\", function() { return curry2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry3\", function() { return curry3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry4\", function() { return curry4; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry2n\", function() { return curry2n; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry3n\", function() { return curry3n; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"curry4n\", function() { return curry4n; });\nfunction curry2(f) {\r\n    function curried(a, b) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return b => f(a, b);\r\n            default: return f(a, b);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\nfunction curry3(f) {\r\n    function curried(a, b, c) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return curry2((b, c) => f(a, b, c));\r\n            case 2: return c => f(a, b, c);\r\n            default: return f(a, b, c);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\nfunction curry4(f) {\r\n    function curried(a, b, c, d) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return curry3((b, c, d) => f(a, b, c, d));\r\n            case 2: return curry2((c, d) => f(a, b, c, d));\r\n            case 3: return d => f(a, b, c, d);\r\n            default: return f(a, b, c, d);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\nfunction curry2n(f) {\r\n    function curried(a, ...b) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return (...b) => f(a, ...b);\r\n            default: return f(a, ...b);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\nfunction curry3n(f) {\r\n    function curried(a, b, ...c) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return curry2n((b, ...c) => f(a, b, ...c));\r\n            case 2: return (...c) => f(a, b, ...c);\r\n            default: return f(a, b, ...c);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\nfunction curry4n(f) {\r\n    function curried(a, b, c, ...d) {\r\n        switch (arguments.length) {\r\n            case 0: return curried;\r\n            case 1: return curry3n((b, c, ...d) => f(a, b, c, ...d));\r\n            case 2: return curry2n((c, ...d) => f(a, b, c, ...d));\r\n            case 3: return (...d) => f(a, b, c, ...d);\r\n            default: return f(a, b, c, ...d);\r\n        }\r\n    }\r\n    return curried;\r\n}\r\n//# sourceMappingURL=curry.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/curry.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/date.js":
/*!***********************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/date.js ***!
  \***********************************************************/
/*! exports provided: formatDate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDate\", function() { return formatDate; });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(date_fns__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _curry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curry */ \"./node_modules/@frptools/corelib/lib/es2015/curry.js\");\n\r\n\r\nconst formatDate = Object(_curry__WEBPACK_IMPORTED_MODULE_1__[\"curry2\"])(function formatDate(format, date) {\r\n    return date_fns__WEBPACK_IMPORTED_MODULE_0___default.a.format(date, format);\r\n});\r\n//# sourceMappingURL=date.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/date.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/debug.js":
/*!************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/debug.js ***!
  \************************************************************/
/*! exports provided: dump */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dump\", function() { return dump; });\n// import { curry2 } from './curry';\r\n// import { compose } from './core';\r\nconst _dump = (s, ...x) => (s && console.log(s, ...x), x[0]);\r\nconst dump = function (s, ...x) { return arguments.length <= 1 ? (...x) => _dump(s, ...x) : _dump(s, ...x); };\r\n// export const xdump = curry2((s: DumpLabel, f: Function) => (...args: any[]) => (dump(s && `[%] ${s}`, ...args), f(...args)));\r\n// export const fdump = curry2((s: DumpLabel, f: Function) => compose(dump(s && `[=] ${s}`), f));\r\n// export const fxdump = curry2((s: DumpLabel, f: Function) => xdump(s, fdump(s, f)));\r\n// export const sdump = curry2((s: DumpLabel, f: Function) => compose(M.tap(dump(s && `[$] ${s}`)), f));\r\n// export const sfdump = curry2((s: DumpLabel, f: Function) => sdump(s, fdump(s, f)));\r\n// export const sxdump = curry2((s: DumpLabel, f: Function) => sdump(s, xdump(s, f)));\r\n// export const sfxdump = curry2((s: DumpLabel, f: Function) => sdump(s, fxdump(s, f)));\r\n// export const intercept = curry2((f: Function, g: Function) => (x: any) => fxdump(!'g(f(x))', g(fxdump(!'x', dump(!'f', f))(x))));\r\n//# sourceMappingURL=debug.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/debug.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/index.js ***!
  \************************************************************/
/*! exports provided: arraysEqual, arraysEqualStartCount, copyArrayShallow, concatArray, withArrayIndexUpdated, withArrayIndexRemoved, withArrayIndexInserted, withArrayElementAppended, withArrayElementPrepended, writeArrayElementsUsing, writeArrayElements, skipArrayStart, takeArrayStart, firstArrayElement, lastArrayElement, lastArrayIndex, asArray, toArray, partitionArray, partitionArrayAtIndex, removeFromUnsortedArray, numericCompare, stringCompare, compose, pipe, converge, spread, spreadLeft, applyUsing, flip, ifElse, negate, equals, or, and, any, mapIf, mapUnless, map, defaultUsing, defaultIfUndefined, defaultIfNothing, defaultIfNull, defaultIf, defaultUnless, valueOrDefault, undefinedIfNull, identity, noop, constant, nothing, tap, throwError, throwNotImplemented, throwNotSupported, throwInvalidOperation, throwMissing, throwArgumentError, error, notImplemented, notSupported, invalidOperation, missing, argumentError, getArg, argsToArray, mapApply, invoker, invokeWithArgs, invokeMethod, invokeMethodWithArgs, assoc, objectOf, construct, mapProps, mapObject, toPairs, get, has, maybeGet, getFrom, valueOf, substr, curry2, curry3, curry4, curry2n, curry3n, curry4n, formatDate, dump, isDefined, isUndefined, isNull, isNotNull, isNothing, isNotNothing, isIterable, isObject, isFunction, isBoolean, isString, isNumber, isSymbol, isPlain, isInstanceOf, abs, min, max, increment, decrement, formatDecimalPlaces, PCGRandom, UUID, uuid, numericId, refId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array */ \"./node_modules/@frptools/corelib/lib/es2015/array.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"arraysEqual\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"arraysEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"arraysEqualStartCount\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"arraysEqualStartCount\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"copyArrayShallow\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"copyArrayShallow\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"concatArray\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"concatArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexUpdated\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexUpdated\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexRemoved\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexRemoved\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayIndexInserted\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"withArrayIndexInserted\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementAppended\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"withArrayElementAppended\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withArrayElementPrepended\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"withArrayElementPrepended\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElementsUsing\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"writeArrayElementsUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"writeArrayElements\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"writeArrayElements\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"skipArrayStart\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"skipArrayStart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"takeArrayStart\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"takeArrayStart\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"firstArrayElement\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"firstArrayElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastArrayElement\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"lastArrayElement\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lastArrayIndex\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"lastArrayIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asArray\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"asArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"toArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"partitionArray\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"partitionArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"partitionArrayAtIndex\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"partitionArrayAtIndex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"removeFromUnsortedArray\", function() { return _array__WEBPACK_IMPORTED_MODULE_0__[\"removeFromUnsortedArray\"]; });\n\n/* harmony import */ var _compare__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compare */ \"./node_modules/@frptools/corelib/lib/es2015/compare.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"numericCompare\", function() { return _compare__WEBPACK_IMPORTED_MODULE_1__[\"numericCompare\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"stringCompare\", function() { return _compare__WEBPACK_IMPORTED_MODULE_1__[\"stringCompare\"]; });\n\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core */ \"./node_modules/@frptools/corelib/lib/es2015/core.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compose\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"compose\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"pipe\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"converge\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"converge\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"spread\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"spread\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"spreadLeft\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"spreadLeft\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"applyUsing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"applyUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"flip\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"flip\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ifElse\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"ifElse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"negate\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"negate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"equals\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"or\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"or\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"and\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"and\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"any\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"any\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapIf\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"mapIf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapUnless\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"mapUnless\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"map\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultUsing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultUsing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfUndefined\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultIfUndefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNothing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultIfNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIfNull\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultIfNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultIf\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultIf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultUnless\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"defaultUnless\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueOrDefault\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"valueOrDefault\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"undefinedIfNull\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"undefinedIfNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"identity\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"identity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"noop\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"noop\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"constant\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"constant\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"nothing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"nothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tap\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"tap\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwError\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwNotImplemented\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwNotImplemented\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwNotSupported\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwNotSupported\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwInvalidOperation\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwInvalidOperation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwMissing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwMissing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"throwArgumentError\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"throwArgumentError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"error\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"error\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notImplemented\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"notImplemented\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"notSupported\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"notSupported\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invalidOperation\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"invalidOperation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"missing\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"missing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"argumentError\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"argumentError\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getArg\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"getArg\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"argsToArray\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"argsToArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapApply\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"mapApply\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invoker\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"invoker\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeWithArgs\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"invokeWithArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeMethod\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"invokeMethod\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"invokeMethodWithArgs\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"invokeMethodWithArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"assoc\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"assoc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"objectOf\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"objectOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"construct\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"construct\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapProps\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"mapProps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mapObject\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"mapObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toPairs\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"toPairs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"has\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"maybeGet\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"maybeGet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getFrom\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"getFrom\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"valueOf\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"valueOf\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"substr\", function() { return _core__WEBPACK_IMPORTED_MODULE_2__[\"substr\"]; });\n\n/* harmony import */ var _curry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./curry */ \"./node_modules/@frptools/corelib/lib/es2015/curry.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry2\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry2\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry3\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry4\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry4\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry2n\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry2n\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry3n\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry3n\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"curry4n\", function() { return _curry__WEBPACK_IMPORTED_MODULE_3__[\"curry4n\"]; });\n\n/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date */ \"./node_modules/@frptools/corelib/lib/es2015/date.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"formatDate\", function() { return _date__WEBPACK_IMPORTED_MODULE_4__[\"formatDate\"]; });\n\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./debug */ \"./node_modules/@frptools/corelib/lib/es2015/debug.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"dump\", function() { return _debug__WEBPACK_IMPORTED_MODULE_5__[\"dump\"]; });\n\n/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./is */ \"./node_modules/@frptools/corelib/lib/es2015/is.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isUndefined\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNull\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNotNull\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isNotNull\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNothing\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNotNothing\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isNotNothing\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isIterable\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isIterable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isFunction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isBoolean\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSymbol\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isSymbol\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPlain\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isPlain\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isInstanceOf\", function() { return _is__WEBPACK_IMPORTED_MODULE_6__[\"isInstanceOf\"]; });\n\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./math */ \"./node_modules/@frptools/corelib/lib/es2015/math.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"abs\", function() { return _math__WEBPACK_IMPORTED_MODULE_7__[\"abs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return _math__WEBPACK_IMPORTED_MODULE_7__[\"min\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return _math__WEBPACK_IMPORTED_MODULE_7__[\"max\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"increment\", function() { return _math__WEBPACK_IMPORTED_MODULE_7__[\"increment\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"decrement\", function() { return _math__WEBPACK_IMPORTED_MODULE_7__[\"decrement\"]; });\n\n/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./number */ \"./node_modules/@frptools/corelib/lib/es2015/number.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"formatDecimalPlaces\", function() { return _number__WEBPACK_IMPORTED_MODULE_8__[\"formatDecimalPlaces\"]; });\n\n/* harmony import */ var _random__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./random */ \"./node_modules/@frptools/corelib/lib/es2015/random.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PCGRandom\", function() { return _random__WEBPACK_IMPORTED_MODULE_9__[\"PCGRandom\"]; });\n\n/* harmony import */ var _uuid__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./uuid */ \"./node_modules/@frptools/corelib/lib/es2015/uuid.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UUID\", function() { return _uuid__WEBPACK_IMPORTED_MODULE_10__[\"UUID\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"uuid\", function() { return _uuid__WEBPACK_IMPORTED_MODULE_10__[\"uuid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"numericId\", function() { return _uuid__WEBPACK_IMPORTED_MODULE_10__[\"numericId\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"refId\", function() { return _uuid__WEBPACK_IMPORTED_MODULE_10__[\"refId\"]; });\n\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/index.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/is.js":
/*!*********************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/is.js ***!
  \*********************************************************/
/*! exports provided: isDefined, isUndefined, isNull, isNotNull, isNothing, isNotNothing, isIterable, isObject, isFunction, isBoolean, isString, isNumber, isSymbol, isPlain, isInstanceOf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNull\", function() { return isNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNotNull\", function() { return isNotNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNothing\", function() { return isNothing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNotNothing\", function() { return isNotNothing; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIterable\", function() { return isIterable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return isBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSymbol\", function() { return isSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPlain\", function() { return isPlain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isInstanceOf\", function() { return isInstanceOf; });\nfunction isDefined(value) {\r\n    return value !== void 0;\r\n}\r\nfunction isUndefined(value) {\r\n    return value === void 0;\r\n}\r\nfunction isNull(value) {\r\n    return value === null;\r\n}\r\nfunction isNotNull(value) {\r\n    return value !== null;\r\n}\r\nfunction isNothing(value) {\r\n    return value === void 0 || value === null;\r\n}\r\nfunction isNotNothing(value) {\r\n    return value !== void 0 && value !== null;\r\n}\r\nfunction isIterable(value) {\r\n    return Symbol.iterator in value;\r\n}\r\nfunction isObject(value) {\r\n    return typeof value === 'object' && value !== null;\r\n}\r\nfunction isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\nfunction isBoolean(value) {\r\n    return typeof value === 'boolean';\r\n}\r\nfunction isString(value) {\r\n    return typeof value === 'string';\r\n}\r\nfunction isNumber(value) {\r\n    return typeof value === 'number';\r\n}\r\nfunction isSymbol(value) {\r\n    return typeof value === 'symbol';\r\n}\r\nfunction isPlain(value) {\r\n    return value.constructor === Object;\r\n}\r\nfunction isInstanceOf(type) {\r\n    function instanceOf(value) {\r\n        return value instanceof type;\r\n    }\r\n    return instanceOf;\r\n}\r\n//# sourceMappingURL=is.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/is.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/math.js":
/*!***********************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/math.js ***!
  \***********************************************************/
/*! exports provided: abs, min, max, increment, decrement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"abs\", function() { return abs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"min\", function() { return min; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"max\", function() { return max; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"increment\", function() { return increment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decrement\", function() { return decrement; });\n/**\r\n * Fast, minimal implementation of Math.abs()\r\n *\r\n * @export\r\n * @param {number} value\r\n * @returns {number} The absolute value of the input argument\r\n */\r\nfunction abs(value) {\r\n    return value < 0 ? -value : value;\r\n}\r\n/**\r\n* Fast, minimal implementation of Math.min()\r\n*\r\n* @export\r\n* @param {number} a\r\n* @param {number} b\r\n* @returns {number} The smaller of the two arguments, or the first argument if both are equal\r\n*/\r\nfunction min(a, b) {\r\n    return a <= b ? a : b;\r\n}\r\n/**\r\n* Fast, minimal implementation of Math.max()\r\n*\r\n* @export\r\n* @param {number} a\r\n* @param {number} b\r\n* @returns {number} The marger of the two arguments, or the first argument if both are equal\r\n*/\r\nfunction max(a, b) {\r\n    return a >= b ? a : b;\r\n}\r\nfunction increment(a = 0) {\r\n    return a + 1;\r\n}\r\nfunction decrement(a = 0) {\r\n    return a - 1;\r\n}\r\n//# sourceMappingURL=math.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/math.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/number.js":
/*!*************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/number.js ***!
  \*************************************************************/
/*! exports provided: formatDecimalPlaces */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatDecimalPlaces\", function() { return formatDecimalPlaces; });\nfunction formatDecimalPlaces(places, n) {\r\n    let s = String(n);\r\n    const i = s.indexOf('.');\r\n    const dec = i === -1 ? 0 : s.length - i - 1;\r\n    if (dec === 0)\r\n        s += '.';\r\n    if (dec < places)\r\n        s += ''.padEnd(places - dec, '0');\r\n    else if (dec > places)\r\n        s = s.substr(0, s.length + places - dec);\r\n    return s;\r\n}\r\n//# sourceMappingURL=number.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/number.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/random.js":
/*!*************************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/random.js ***!
  \*************************************************************/
/*! exports provided: PCGRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PCGRandom\", function() { return PCGRandom; });\n/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ \"./node_modules/@frptools/corelib/lib/es2015/is.js\");\n// Copyright 2014 Thom Chiovoloni, released under the MIT license.\r\n/// A random number generator based on the basic implementation of the PCG algorithm,\r\n/// as described here: http://www.pcg-random.org/\r\n// Adapted for TypeScript from Thom's original code at https://github.com/thomcc/pcg-random\r\n\r\nconst defaultIncHi = 0x14057b7e;\r\nconst defaultIncLo = 0xf767814f;\r\nconst MUL_HI = 0x5851f42d >>> 0;\r\nconst MUL_LO = 0x4c957f2d >>> 0;\r\nconst BIT_53 = 9007199254740992.0;\r\nconst BIT_27 = 134217728.0;\r\n/**\r\n * PCG is a family of simple fast space-efficient statistically good algorithms for random number generation. Unlike\r\n * many general-purpose RNGs, they are also hard to predict.\r\n */\r\nclass PCGRandom {\r\n    constructor(seedHi, seedLo, incHi, incLo) {\r\n        if (Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(seedLo) && Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(seedHi)) {\r\n            seedLo = (Math.random() * 0xffffffff) >>> 0;\r\n            seedHi = 0;\r\n        }\r\n        else if (Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(seedLo)) {\r\n            seedLo = seedHi;\r\n            seedHi = 0;\r\n        }\r\n        if (Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(incLo) && Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(incHi)) {\r\n            incLo = this._state ? this._state[3] : defaultIncLo;\r\n            incHi = this._state ? this._state[2] : defaultIncHi;\r\n        }\r\n        else if (Object(_is__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(incLo)) {\r\n            incLo = incHi;\r\n            incHi = 0;\r\n        }\r\n        this._state = new Int32Array([0, 0, incHi >>> 0, ((incLo || 0) | 1) >>> 0]);\r\n        this._next();\r\n        add64(this._state, this._state[0], this._state[1], seedHi >>> 0, seedLo >>> 0);\r\n        this._next();\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns A copy of the internal state of this random number generator as a JavaScript Array\r\n     */\r\n    getState() {\r\n        return [this._state[0], this._state[1], this._state[2], this._state[3]];\r\n    }\r\n    /**\r\n     * Restore state previously retrieved using getState()\r\n     */\r\n    setState(state) {\r\n        this._state[0] = state[0];\r\n        this._state[1] = state[1];\r\n        this._state[2] = state[2];\r\n        this._state[3] = state[3] | 1;\r\n    }\r\n    _next() {\r\n        // save current state (what we'll use for this number)\r\n        var oldHi = this._state[0] >>> 0;\r\n        var oldLo = this._state[1] >>> 0;\r\n        // churn LCG.\r\n        mul64(this._state, oldHi, oldLo, MUL_HI, MUL_LO);\r\n        add64(this._state, this._state[0], this._state[1], this._state[2], this._state[3]);\r\n        // get least sig. 32 bits of ((oldstate >> 18) ^ oldstate) >> 27\r\n        var xsHi = oldHi >>> 18;\r\n        var xsLo = ((oldLo >>> 18) | (oldHi << 14)) >>> 0;\r\n        xsHi = (xsHi ^ oldHi) >>> 0;\r\n        xsLo = (xsLo ^ oldLo) >>> 0;\r\n        var xorshifted = ((xsLo >>> 27) | (xsHi << 5)) >>> 0;\r\n        // rotate xorshifted right a random amount, based on the most sig. 5 bits\r\n        // bits of the old state.\r\n        var rot = oldHi >>> 27;\r\n        var rot2 = ((-rot >>> 0) & 31) >>> 0;\r\n        return ((xorshifted >>> rot) | (xorshifted << rot2)) >>> 0;\r\n    }\r\n    /// Get a uniformly distributed 32 bit integer between [0, max).\r\n    integer(max) {\r\n        if (!max) {\r\n            return this._next();\r\n        }\r\n        max = max >>> 0;\r\n        if ((max & (max - 1)) === 0) {\r\n            return this._next() & (max - 1); // fast path for power of 2\r\n        }\r\n        var num = 0;\r\n        var skew = ((-max >>> 0) % max) >>> 0;\r\n        for (num = this._next(); num < skew; num = this._next()) {\r\n            // this loop will rarely execute more than twice,\r\n            // and is intentionally empty\r\n        }\r\n        return num % max;\r\n    }\r\n    /// Get a uniformly distributed IEEE-754 double between 0.0 and 1.0, with\r\n    /// 53 bits of precision (every bit of the mantissa is randomized).\r\n    number() {\r\n        var hi = (this._next() & 0x03ffffff) * 1.0;\r\n        var lo = (this._next() & 0x07ffffff) * 1.0;\r\n        return ((hi * BIT_27) + lo) / BIT_53;\r\n    }\r\n}\r\nfunction mul64(out, aHi, aLo, bHi, bLo) {\r\n    var c1 = (aLo >>> 16) * (bLo & 0xffff) >>> 0;\r\n    var c0 = (aLo & 0xffff) * (bLo >>> 16) >>> 0;\r\n    var lo = ((aLo & 0xffff) * (bLo & 0xffff)) >>> 0;\r\n    var hi = ((aLo >>> 16) * (bLo >>> 16)) + ((c0 >>> 16) + (c1 >>> 16)) >>> 0;\r\n    c0 = (c0 << 16) >>> 0;\r\n    lo = (lo + c0) >>> 0;\r\n    if ((lo >>> 0) < (c0 >>> 0)) {\r\n        hi = (hi + 1) >>> 0;\r\n    }\r\n    c1 = (c1 << 16) >>> 0;\r\n    lo = (lo + c1) >>> 0;\r\n    if ((lo >>> 0) < (c1 >>> 0)) {\r\n        hi = (hi + 1) >>> 0;\r\n    }\r\n    hi = (hi + Math.imul(aLo, bHi)) >>> 0;\r\n    hi = (hi + Math.imul(aHi, bLo)) >>> 0;\r\n    out[0] = hi;\r\n    out[1] = lo;\r\n}\r\n// add two 64 bit numbers (given in parts), and store the result in `out`.\r\nfunction add64(out, aHi, aLo, bHi, bLo) {\r\n    var hi = (aHi + bHi) >>> 0;\r\n    var lo = (aLo + bLo) >>> 0;\r\n    if ((lo >>> 0) < (aLo >>> 0)) {\r\n        hi = (hi + 1) | 0;\r\n    }\r\n    out[0] = hi;\r\n    out[1] = lo;\r\n}\r\n//# sourceMappingURL=random.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/random.js?");

/***/ }),

/***/ "./node_modules/@frptools/corelib/lib/es2015/uuid.js":
/*!***********************************************************!*\
  !*** ./node_modules/@frptools/corelib/lib/es2015/uuid.js ***!
  \***********************************************************/
/*! exports provided: UUID, uuid, numericId, refId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UUID\", function() { return UUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uuid\", function() { return uuid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"numericId\", function() { return numericId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"refId\", function() { return refId; });\n// import * as v4 from 'uuid/v4';\r\n// import * as bytesToUuid from 'uuid/lib/bytesToUuid';\r\n// import { isString } from './is';\r\nclass UUID {\r\n}\r\nfunction uuid() { }\r\n// export class UUID extends Uint8Array {\r\n//   static readonly Zero: UUID = new UUID();\r\n//   static compare (a: UUID, b: UUID): number;\r\n//   static compare (a: ArrayLike<number>, b: ArrayLike<number>): number;\r\n//   static compare (a: ArrayLike<number>, b: ArrayLike<number>): number {\r\n//     for(\r\n//       var i = 0, n = compare(a[0], b[0]);\r\n//       n === 0 && i < 16;\r\n//       ++i, n = compare(a[i], b[i])\r\n//     );\r\n//     return n;\r\n//   }\r\n//   static fromURN (urn: string): UUID {\r\n//     return UUID.fromString(urn.substr(9));\r\n//   }\r\n//   static fromString (value: string): UUID {\r\n//     const uuid = new UUID();\r\n//     return parse(value, uuid);\r\n//   }\r\n//   constructor () {\r\n//     super(16);\r\n//   }\r\n//   '@@equals' (other: any): boolean {\r\n//     if (other instanceof UUID || Array.isArray(other)) {\r\n//       return other.length === 16 && UUID.compare(this, other) === 0;\r\n//     }\r\n//     const str = isString(other) ? other : (other || '').toString();\r\n//     const uuid = str.startsWith('urn:uuid:') ? UUID.fromURN(str) : UUID.fromString(str);\r\n//     return UUID.compare(this, uuid) === 0;\r\n//   }\r\n//   '@@compare' (other: this): number {\r\n//     return UUID.compare(this, other);\r\n//   }\r\n//   private _str = '';\r\n//   toString () {\r\n//     let str = this._str;\r\n//     if(str === '') {\r\n//       this._str = str = bytesToUuid(this);\r\n//     }\r\n//     return str;\r\n//   }\r\n//   toShortString () {\r\n//     return this.toString().substr(0, 8);\r\n//   }\r\n//   toURN () {\r\n//     return `urn:uuid:${bytesToUuid(this)}`;\r\n//   }\r\n// }\r\n// export function uuid (): UUID {\r\n//   const uuid = new UUID();\r\n//   return v4(null, uuid);\r\n// }\r\n// const compare = (a: number, b: number) => a - b;\r\n// // -----------------------------------------------------------------------------\r\n// // ## uuid-parse: Simple, fast parsing and unparsing of RFC4122 UUIDS.\r\n// // Code adapted under MIT license from https://github.com/zefferus/uuid-parse\r\n// // Maps for number <-> hex string conversion\r\n// var _byteToHex: string[] = [];\r\n// var _hexToByte: {[key: string]: number} = {};\r\n// for (var i = 0; i < 256; i++) {\r\n//   _byteToHex[i] = (i + 0x100).toString(16).substr(1);\r\n//   _hexToByte[_byteToHex[i]] = i;\r\n// }\r\n// // **`parse()` - Parse a UUID into it's component bytes**\r\n// function parse<T extends Uint8Array|number[]> (s: string, buf: T, offset?: number): T {\r\n//   const i = (buf && offset) || 0;\r\n//   let ii = 0;\r\n//   buf = buf || [];\r\n//   s.toLowerCase().replace(/[0-9a-f]{2}/g, function (oct: string) {\r\n//     if (ii < 16) { // Don't overflow!\r\n//       buf[i + ii++] = _hexToByte[oct];\r\n//     }\r\n//     return oct;\r\n//   });\r\n//   // Zero out remaining bytes if string was short\r\n//   while (ii < 16) {\r\n//     buf[i + ii++] = 0;\r\n//   }\r\n//   return buf;\r\n// }\r\n// // -----------------------------------------------------------------------------\r\nlet _nextId = 0;\r\nfunction numericId() {\r\n    return ++_nextId;\r\n}\r\nconst _wm = new WeakMap();\r\nfunction refId(obj, id) {\r\n    return id\r\n        ? (_wm.set(obj, id), id)\r\n        : _wm.get(obj) || (id = `?${numericId()}`, _wm.set(obj, id), id);\r\n}\r\n//# sourceMappingURL=uuid.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/corelib/lib/es2015/uuid.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/Comparable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/Comparable.js ***!
  \********************************************************************/
/*! exports provided: isComparable, compare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isComparable\", function() { return isComparable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\nfunction isComparable(value) {\r\n    return '@@compare' in value;\r\n}\r\nfunction compare(a, b) {\r\n    return a['@@compare'](b);\r\n}\r\n//# sourceMappingURL=Comparable.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/Comparable.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/Equatable.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/Equatable.js ***!
  \*******************************************************************/
/*! exports provided: isEquatable, isEqual */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEquatable\", function() { return isEquatable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return isEqual; });\n/* harmony import */ var _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @frptools/corelib */ \"./node_modules/@frptools/corelib/lib/es2015/index.js\");\n\r\nfunction isEquatable(value) {\r\n    return '@@equals' in value;\r\n}\r\n/**\r\n * Checks whether two `Equatable` objects have equivalent data. If both objects implement\r\n * `Equatable` but are of different iterable types, their values are iterated over in tandem, and\r\n * checked for either strict equality, or with `isEqual` if both child values implement `Equatable`.\r\n *\r\n * @export\r\n * @param {Equatable} a\r\n * @param {Equatable} b\r\n * @returns {boolean} true if both arguments have the same internal\r\n */\r\nfunction isEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    var na = Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(a), nb = Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isNothing\"])(b);\r\n    if (na || nb) {\r\n        return na === nb;\r\n    }\r\n    if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(a)) {\r\n        if (isEquatable(a)) {\r\n            return a['@@equals'](b);\r\n        }\r\n        if (!Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(b)) {\r\n            return false;\r\n        }\r\n        if (isEquatable(b)) {\r\n            return b['@@equals'](a);\r\n        }\r\n        if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isIterable\"])(a) && Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isIterable\"])(b)) {\r\n            var ita = a[Symbol.iterator]();\r\n            var itb = b[Symbol.iterator]();\r\n            do {\r\n                var ca = ita.next();\r\n                var cb = itb.next();\r\n                if (ca.done !== cb.done) {\r\n                    return false;\r\n                }\r\n                if (!ca.done) {\r\n                    var va = ca.value, vb = cb.value;\r\n                    if (!isEqual(va, vb)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } while (!ca.done);\r\n            return true;\r\n        }\r\n    }\r\n    else if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(b) && isEquatable(b)) {\r\n        return b['@@equals'](a);\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=Equatable.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/Equatable.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/Hashable.js":
/*!******************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/Hashable.js ***!
  \******************************************************************/
/*! exports provided: isHashable, hash, hashArray, hashArgs, combineHash, hashObject, hashMiscRef, hashIterator, hashPlainObject, hashNumber, hashString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHashable\", function() { return isHashable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hash\", function() { return hash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashArray\", function() { return hashArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashArgs\", function() { return hashArgs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"combineHash\", function() { return combineHash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashObject\", function() { return hashObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashMiscRef\", function() { return hashMiscRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashIterator\", function() { return hashIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashPlainObject\", function() { return hashPlainObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashNumber\", function() { return hashNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashString\", function() { return hashString; });\n/* harmony import */ var _Persistent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Persistent */ \"./node_modules/@frptools/structural/lib/es2015/Persistent.js\");\n/* harmony import */ var _frptools_corelib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @frptools/corelib */ \"./node_modules/@frptools/corelib/lib/es2015/index.js\");\n\r\n\r\nfunction isHashable(value) {\r\n    return '@@hash' in value;\r\n}\r\nfunction hash(arg) {\r\n    return opt(_hash(arg));\r\n}\r\nfunction hashArray(arr) {\r\n    return opt(_hashArray(arr));\r\n}\r\nfunction hashArgs() {\r\n    var h = 5381;\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        h = _combineHash(h, hash(arguments[i]));\r\n    }\r\n    return opt(h);\r\n}\r\nfunction combineHash(a, b) {\r\n    return opt(_combineHash(a, b));\r\n}\r\nfunction hashObject(value) {\r\n    return opt(_hashObject(value));\r\n}\r\nfunction hashMiscRef(o) {\r\n    return opt(_hashMiscRef(o));\r\n}\r\nfunction hashIterator(it) {\r\n    return opt(_hashIterator(it));\r\n}\r\nfunction hashPlainObject(o) {\r\n    return opt(_hashPlainObject(o));\r\n}\r\nfunction hashNumber(n) {\r\n    return opt(_hashNumber(n));\r\n}\r\nfunction hashString(str) {\r\n    return opt(_hashString(str));\r\n}\r\nfunction isZero(value) {\r\n    return value === null || value === void 0 || value === false;\r\n}\r\nconst RANDOM = new _frptools_corelib__WEBPACK_IMPORTED_MODULE_1__[\"PCGRandom\"](13);\r\nconst CACHE = new WeakMap();\r\nfunction randomInt() {\r\n    return RANDOM.integer(0x7FFFFFFF);\r\n}\r\nfunction _hash(arg) {\r\n    if (isZero(arg))\r\n        return 0;\r\n    if (typeof arg.valueOf === 'function' && arg.valueOf !== Object.prototype.valueOf) {\r\n        arg = arg.valueOf();\r\n        if (isZero(arg))\r\n            return 0;\r\n    }\r\n    switch (typeof arg) {\r\n        case 'number': return _hashNumber(arg);\r\n        case 'string': return _hashString(arg);\r\n        case 'function': return _hashMiscRef(arg);\r\n        case 'object': return _hashObject(arg);\r\n        case 'boolean': return arg === true ? 1 : 0;\r\n        default: return 0;\r\n    }\r\n}\r\nfunction _hashArray(arr) {\r\n    var h = 6151;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        h ^= _combineHash(_hashNumber(i), _hash(arr[i]));\r\n    }\r\n    return h;\r\n}\r\nfunction _combineHash(a, b) {\r\n    return (a * 53) ^ b;\r\n}\r\nfunction _hashObject(value) {\r\n    var h = CACHE.get(value);\r\n    if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(h))\r\n        return h;\r\n    if (Array.isArray(value)) {\r\n        h = _hashArray(value);\r\n    }\r\n    else if (isHashable(value)) {\r\n        h = value['@@hash']();\r\n    }\r\n    else if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_1__[\"isIterable\"])(value)) {\r\n        h = _hashIterator(value[Symbol.iterator]());\r\n    }\r\n    else if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_1__[\"isPlain\"])(value)) {\r\n        h = _hashPlainObject(value);\r\n    }\r\n    else {\r\n        h = randomInt();\r\n    }\r\n    if (!Object(_Persistent__WEBPACK_IMPORTED_MODULE_0__[\"isPersistent\"])(value) || Object(_Persistent__WEBPACK_IMPORTED_MODULE_0__[\"isImmutable\"])(value)) {\r\n        CACHE.set(value, h);\r\n    }\r\n    return h;\r\n}\r\nfunction _hashMiscRef(o) {\r\n    var h = CACHE.get(o);\r\n    if (Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(h))\r\n        return h;\r\n    h = randomInt();\r\n    CACHE.set(o, h);\r\n    return h;\r\n}\r\nfunction _hashIterator(it) {\r\n    var h = 6151;\r\n    var current;\r\n    while (!(current = it.next()).done) {\r\n        h = _combineHash(h, hash(current.value));\r\n    }\r\n    return h;\r\n}\r\nfunction _hashPlainObject(o) {\r\n    CACHE.set(o, randomInt());\r\n    var keys = Object.keys(o);\r\n    var h = 12289;\r\n    for (var i = 0; i < keys.length; i++) {\r\n        h = _combineHash(h, _hashString(keys[i]));\r\n        h = _combineHash(h, hash(o[keys[i]]));\r\n    }\r\n    return h;\r\n}\r\nfunction _hashNumber(n) {\r\n    if (n !== n || n === Infinity)\r\n        return 0;\r\n    var h = n | 0;\r\n    if (h !== n)\r\n        h ^= n * 0xFFFFFFFF;\r\n    while (n > 0xFFFFFFFF)\r\n        h ^= (n /= 0xFFFFFFFF);\r\n    return n;\r\n}\r\nfunction _hashString(str) {\r\n    var h = 5381, i = str.length;\r\n    while (i)\r\n        h = (h * 33) ^ str.charCodeAt(--i);\r\n    return h;\r\n}\r\nfunction opt(n) {\r\n    return (n & 0xbfffffff) | ((n >>> 1) & 0x40000000);\r\n}\r\n//# sourceMappingURL=Hashable.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/Hashable.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/Persistent.js":
/*!********************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/Persistent.js ***!
  \********************************************************************/
/*! exports provided: MutationContext, clone, isPersistent, immutable, commitContext, mutable, selectContext, getMutationContext, isMutationContext, isMutable, isImmutable, isMutableContext, isImmutableContext, areContextsRelated, hasRelatedContext, getSubordinateContext, asSubordinateContext, isPrimaryContext, isSubordinateContext, isRelatedContext, modify, commit, modifyAsSubordinate, modifyAsEqual, modifyProperty, withMutability, ensureContext, update */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MutationContext\", function() { return MutationContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return clone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPersistent\", function() { return isPersistent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"immutable\", function() { return immutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commitContext\", function() { return commitContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mutable\", function() { return mutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectContext\", function() { return selectContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMutationContext\", function() { return getMutationContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMutationContext\", function() { return isMutationContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMutable\", function() { return isMutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isImmutable\", function() { return isImmutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMutableContext\", function() { return isMutableContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isImmutableContext\", function() { return isImmutableContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"areContextsRelated\", function() { return areContextsRelated; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasRelatedContext\", function() { return hasRelatedContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSubordinateContext\", function() { return getSubordinateContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asSubordinateContext\", function() { return asSubordinateContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPrimaryContext\", function() { return isPrimaryContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSubordinateContext\", function() { return isSubordinateContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRelatedContext\", function() { return isRelatedContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modify\", function() { return modify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commit\", function() { return commit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyAsSubordinate\", function() { return modifyAsSubordinate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyAsEqual\", function() { return modifyAsEqual; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyProperty\", function() { return modifyProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMutability\", function() { return withMutability; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ensureContext\", function() { return ensureContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony import */ var _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @frptools/corelib */ \"./node_modules/@frptools/corelib/lib/es2015/index.js\");\n\r\n/**\r\n * A mutation context stores contextual information with respect to the temporary mutability of a\r\n * persistent object and zero or more other persistent objects (of the same or differing types) with\r\n * which it is associated. Once a mutation context has been frozen, it cannot be unfrozen; the\r\n * associated persistent objects must first be cloned with new mutation contexts. Committing a\r\n * mutation context is an in-place operation; given that it indicates that mutability is permitted,\r\n * the committing of the context (and all associated persistent objects) is therefore the final\r\n * mutable operation performed against those objects.\r\n *\r\n * @export\r\n * @class MutationContext\r\n */\r\nclass MutationContext {\r\n    constructor(token, scope) {\r\n        this.token = token;\r\n        this.scope = scope;\r\n    }\r\n}\r\n/**\r\n * Performs a shallow clone of a persistent structure. It is up to the API that provides structural\r\n * manipulation operations on the input type to ensure that, before applying mutations, any relevant\r\n * internal substructures are cloned when their associated mutation contexts do not match that of\r\n * their owner.\r\n *\r\n * @export\r\n * @template T The type of the persistent structure\r\n * @param {T} value The structure to clone\r\n * @param {MutationContext|boolean} mutable The mutation context to be associated with the cloned\r\n *   structure, or a boolean value to indicate whether or not to associate the cloned structure with\r\n *   a new mutable context. If omitted, the existing mutation context is shadowed.\r\n * @returns {T} A cloned instance of a persistent structure\r\n */\r\nfunction clone(value, mutability) {\r\n    return value['@@clone'](selectContext(mutability));\r\n}\r\nfunction isPersistent(value) {\r\n    return '@@mctx' in value;\r\n}\r\n/**\r\n * Returns the default frozen mutation context for use with new immutable objects. This function\r\n * should only be used when constructing the first version of a new persistent object. Any\r\n * subsequent copies of that object should use `doneMutating()` and related functions.\r\n *\r\n * @export\r\n * @returns {MutationContext} The default frozen mutation context\r\n */\r\nfunction immutable() {\r\n    return FROZEN;\r\n}\r\n/**\r\n * Makes a mutable context immutable, along with all associated subordinate contexts. If the input\r\n * argument is itself a subordinate context, this function does nothing.\r\n *\r\n * @export\r\n * @param {MutationContext} mctx\r\n */\r\nfunction commitContext(mctx) {\r\n    if (isPrimaryContext(mctx))\r\n        close(mctx);\r\n}\r\n/**\r\n * Returns a new mutable context to be associated with, and owned by, a persistent object. This\r\n * function should only be used when constructing the first version of a new persistent object. Any\r\n * subsequent updates to that object should use `asMutable()` and related functions.\r\n *\r\n * @export\r\n * @returns {MutationContext}\r\n */\r\nfunction mutable() {\r\n    return new MutationContext([true], 0);\r\n}\r\n/** Returns a mutation context that matches the mutability characteristics of the supplied argument.\r\n * If no argument is supplied, an immutable context is returned. If the argument is another mutable\r\n * object, the returned context will be a mutable subordinate to that context, or a direct reference\r\n * to that context if it is already subordinate to some other mutable context.\r\n *\r\n * @export\r\n * @returns {MutationContext}\r\n */\r\nfunction selectContext(mutability) {\r\n    return mutability === void 0 ? FROZEN\r\n        : _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isBoolean\"](mutability) ? mutability ? mutable() : FROZEN\r\n            : isMutationContext(mutability) ? mutability\r\n                : getSubordinateContext(mutability);\r\n}\r\nfunction getMutationContext(value) {\r\n    return value['@@mctx'];\r\n}\r\nfunction isMutationContext(value) {\r\n    return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"](value) && value instanceof MutationContext;\r\n}\r\n/**\r\n * Tests whether the value is currently in a mutable state, with changes able to be applied directly\r\n * to the value, rather than needing to clone the value first.\r\n *\r\n * @export\r\n * @param {Persistent} value A value to test for mutability\r\n * @returns {boolean} true if the value may be mutated directly, otherwise false\r\n */\r\nfunction isMutable(value) {\r\n    return isMutableContext(getMutationContext(value));\r\n}\r\n/**\r\n * Tests whether the value is currently in an immutable state, requiring a clone to be created if\r\n * mutations are desired.\r\n *\r\n * @export\r\n * @param {Persistent} value A value to be tested for immutability\r\n * @returns {boolean} true if direct mutations to the value or its contents are forbidden, otherwise false\r\n */\r\nfunction isImmutable(value) {\r\n    return !isMutable(value);\r\n}\r\nfunction isMutableContext(mctx) {\r\n    return mctx.token[0];\r\n}\r\nfunction isImmutableContext(mctx) {\r\n    return !isMutableContext(mctx);\r\n}\r\n/**\r\n * Tests whether two values are currently part of the same active batch of uncommitted mutations,\r\n * whereby committing the mutation context of the value where it originated will cause all other\r\n * structures that share the same mutation context to become immutable also.\r\n *\r\n * After a shared context is committed, this function can be used to lazily apply changes to data\r\n * structures that are private and internal to an outer data structure. An example is `Slot` objects\r\n * contained within the `List` data structure. Those objects are never accessed via the `List`\r\n * structure's public API, but are often the target of latebound changes applied well after a\r\n * mutation context has been committed. By checking if they shared the same context as their parent,\r\n * it can be determined whether they need to be cloned and replaced, or if they can be mutated in\r\n * place so as to apply any pending changes before their internal data is queried as part of a call\r\n * being made against the outer structure.\r\n *\r\n * @export\r\n * @param {Persistent} a A value to compare with `b`\r\n * @param {Persistent} b A value to compare with `a`\r\n * @returns {boolean} true if both values are associated with the same active mutation context, otherwise false\r\n */\r\nfunction areContextsRelated(a, b) {\r\n    // var ta = token(a);\r\n    // var tb = token(b);\r\n    // return ta === tb || (!ta[0] && !tb[0]);\r\n    return token(a) === token(b);\r\n}\r\nfunction hasRelatedContext(mctx, value) {\r\n    return mctx.token === token(value);\r\n}\r\n/**\r\n * Returns a mutation context that is subordinate to that of the object it was created for. The\r\n * returned mutation context matches the mutability of the one from which it is being cloned.\r\n *\r\n * @export\r\n * @param {Persistent} value\r\n * @returns {MutationContext}\r\n */\r\nfunction getSubordinateContext(value) {\r\n    return asSubordinateContext(getMutationContext(value));\r\n}\r\n/**\r\n * Returns a mutation context that is subordinate to the input context. The returned context cannot\r\n * be used to complete a batch of mutations, but objects to which it is attached will automatically\r\n * become immutable when the original (non-subordinate) context is frozen. If the input context is\r\n * already subordinate to another, it can be safely shared among multiple host objects, and is\r\n * therefore returned as-is, rather than being cloned. Mutation contexts do not retain any\r\n * hierarchy beyond being subordinate to the originating/owning context, hence the lack of\r\n * subsequent cloning. This also reduces allocations by enabling reference sharing.\r\n *\r\n * @export\r\n * @param {MutationContext} mctx A mutation context for which a subordinate context is required\r\n * @returns {MutationContext} A subordinate mutation context\r\n */\r\nfunction asSubordinateContext(mctx) {\r\n    return mctx.scope >= 0 ? new MutationContext(mctx.token, -1) : mctx;\r\n}\r\nfunction isPrimaryContext(mctx) {\r\n    return mctx.scope >= 0;\r\n}\r\nfunction isSubordinateContext(mctx) {\r\n    return mctx.scope === -1;\r\n}\r\nfunction isRelatedContext(a, b) {\r\n    return a.token === b.token;\r\n}\r\nfunction modify(value) {\r\n    var mc = getMutationContext(value);\r\n    return isMutableContext(mc)\r\n        ? isSubordinateContext(mc)\r\n            ? value\r\n            : (incScope(mc), value)\r\n        : clone(value, mutable());\r\n}\r\nfunction commit(value) {\r\n    var mc = getMutationContext(value);\r\n    return isPrimaryContext(mc) && (mc.scope === 0 ? close(mc) : decScope(mc)), value;\r\n}\r\n/** Returns the second argument as a mutable subordinate of the first argument. If the first argument is already\r\n * subordinate to an existing mutation context, the subordinate context reference is shared as-is. Committing the\r\n * primary context's modifications (via commit(), passing in the context owner) has the side effect of ending\r\n * modifications on any mutable objects whose mutation context is subordinate to the primary context. Committing\r\n * modifications directly on a subordinate object has no effect; that object will remain mutable until commit() is\r\n * called on the context owner (i.e. the object for which the mutable context was originally created).\r\n*/\r\nfunction modifyAsSubordinate(context, value) {\r\n    const mctxChild = getMutationContext(value);\r\n    const mctxParent = isMutationContext(context) ? context : getMutationContext(context);\r\n    return isMutableContext(mctxParent)\r\n        ? isRelatedContext(mctxChild, mctxParent) && isSubordinateContext(mctxChild)\r\n            ? value\r\n            : clone(value, asSubordinateContext(mctxParent))\r\n        : _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwArgumentError\"]('context', 'The first argument must refer to a mutable object or mutation context');\r\n}\r\n/** Returns the second argument as a mutable equal of the first argument (as context owner if the first argument is the\r\n * context owner or is immutable, or as subordinate if the first argument also has a subordinate context) */\r\nfunction modifyAsEqual(context, value) {\r\n    const mcChild = getMutationContext(value);\r\n    const mcParent = isMutationContext(context) ? context : getMutationContext(context);\r\n    return isMutableContext(mcParent)\r\n        ? isRelatedContext(mcChild, mcParent) && (isSubordinateContext(mcParent) || isPrimaryContext(mcChild))\r\n            ? value\r\n            : clone(value, mcParent)\r\n        : _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwArgumentError\"]('context', 'The first argument must refer to a mutable object or mutation context');\r\n}\r\n/**\r\n * Ensures that the specified child property is a mutable member of the same batch that is currently active for its\r\n * parent. If the child is already part of the same mutation batch, it is returned as-is. If not, it is cloned as a\r\n * subordinate of the parent's mutation batch, reassigned to the parent and then returned.\r\n *\r\n * @export\r\n * @template T The type of the parent\r\n * @template P The child property key\r\n * @template R The type of the child\r\n * @param {T} owner The parent containing the child object to be modified\r\n * @param {P} child The property name of the child object to be modified\r\n * @returns {T[P]} A reference to the child object, ready for mutation\r\n */\r\nfunction modifyProperty(parent, name) {\r\n    if (isImmutable(parent))\r\n        return _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"throwInvalidOperation\"]('Cannot modify properties of an immutable object');\r\n    let child = parent[name];\r\n    if (isRelatedContext(getMutationContext(child), getMutationContext(parent)))\r\n        return child;\r\n    parent[name] = child = clone(child, parent);\r\n    return child;\r\n}\r\n/**\r\n * Returns a version of the input value that matches the mutability specified by the first argument. If the first\r\n * argument is a mutable object, the returned value will be cloned into the same mutation batch with a mutable context\r\n * that is subordinate to the batch owner.\r\n *\r\n * @export\r\n * @template T The type of the persistent value to apply the specified mutability argument to\r\n * @param {(PreferredContext|undefined)} mutability The desired mutability of the return value\r\n * @param {T} value A value to align with the desired mutability\r\n * @returns {T} A reference to, or clone of, the `value` argument\r\n */\r\nfunction withMutability(mutability, value) {\r\n    let mctx;\r\n    if (mutability === void 0) {\r\n        mctx = FROZEN;\r\n    }\r\n    else if (_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isBoolean\"](mutability)) {\r\n        if (mutability === isMutable(value))\r\n            return value;\r\n        mctx = mutability ? mutable() : FROZEN;\r\n    }\r\n    else if (isMutationContext(mutability)) {\r\n        if (isRelatedContext(mutability, getMutationContext(value)))\r\n            return value;\r\n        mctx = mutability;\r\n    }\r\n    else {\r\n        if (areContextsRelated(mutability, value))\r\n            return value;\r\n        mctx = getSubordinateContext(mutability);\r\n    }\r\n    value = value['@@clone'](mctx);\r\n    return value;\r\n}\r\n/**\r\n * Returns a version of the `value` argument that is guaranteed to have the specified mutation\r\n * context instance. The `value` argument is cloned only if its mutation context does not match the\r\n * `mctx` argument. Note that the exact `mctx` reference is checked; this function does not check if\r\n * the contexts are related, or whether or not they're mutable, it simply ensures that the returned\r\n * value uses the referenced mutation context instance.\r\n *\r\n * @export\r\n * @template T The type of the persistent structure\r\n * @param {MutationContext} mctx The desired mutation context\r\n * @param {T} value the value to which the specified mutation context should be attached\r\n * @returns {T} A reference to the `value` argument if it already has the specified context, or the\r\n *   `value` argument cloned using the `mctx` argument otherwise.\r\n */\r\nfunction ensureContext(mctx, value) {\r\n    return getMutationContext(value) === mctx ? value : value['@@clone'](mctx);\r\n}\r\n/**\r\n * Allows batches of in-place mutations to be applied to a persistent object. When mutations are\r\n * completed, if the input value was already mutable, it is passed to the mutation function as-is,\r\n * and returned when the mutation function returns. If the input value was immutable, a mutable copy\r\n * is passed to the mutation function, and then frozen before being returned.\r\n *\r\n * @param mutate A function that is passed a mutable version of the input value\r\n * @param value An updated version of the input value\r\n */\r\nfunction update(mutate, value) {\r\n    value = modify(value);\r\n    mutate(value);\r\n    return commit(value);\r\n}\r\nfunction token(value) {\r\n    return getMutationContext(value).token;\r\n}\r\nfunction close(mctx) {\r\n    mctx.token[0] = false;\r\n}\r\nfunction incScope(mctx) {\r\n    mctx.scope++;\r\n}\r\nfunction decScope(mctx) {\r\n    mctx.scope--;\r\n}\r\nconst FROZEN = Object.freeze(new MutationContext([false], -1));\r\n//# sourceMappingURL=Persistent.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/Persistent.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/Unwrappable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/Unwrappable.js ***!
  \*********************************************************************/
/*! exports provided: isUnwrappable, isRecursiveUnwrappable, unwrap, unwrapKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUnwrappable\", function() { return isUnwrappable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRecursiveUnwrappable\", function() { return isRecursiveUnwrappable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrap\", function() { return unwrap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unwrapKey\", function() { return unwrapKey; });\n/* harmony import */ var _frptools_corelib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @frptools/corelib */ \"./node_modules/@frptools/corelib/lib/es2015/index.js\");\n/* harmony import */ var _Persistent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Persistent */ \"./node_modules/@frptools/structural/lib/es2015/Persistent.js\");\n\r\n\r\nfunction isUnwrappable(value) {\r\n    return '@@unwrap' in value;\r\n}\r\nfunction isRecursiveUnwrappable(value) {\r\n    return '@@unwrapInto' in value;\r\n}\r\nconst CIRCULARS = new WeakMap();\r\nfunction unwrap(source, force = false) {\r\n    if (!Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(source)) {\r\n        return source;\r\n    }\r\n    if (Array.isArray(source)) {\r\n        return source.map(value => unwrap(value));\r\n    }\r\n    if (!isUnwrappable(source)) {\r\n        if (Object(_Persistent__WEBPACK_IMPORTED_MODULE_1__[\"isPersistent\"])(source) || force) {\r\n            source = new Unwrapper(source);\r\n        }\r\n        else {\r\n            return source;\r\n        }\r\n    }\r\n    if (CIRCULARS.has(source)) {\r\n        return CIRCULARS.get(source);\r\n    }\r\n    var value;\r\n    if (isRecursiveUnwrappable(source)) {\r\n        var target = source['@@createUnwrapTarget']();\r\n        CIRCULARS.set(source, target);\r\n        value = source['@@unwrapInto'](target);\r\n        CIRCULARS.delete(source);\r\n    }\r\n    else {\r\n        value = source['@@unwrap']();\r\n    }\r\n    return value;\r\n}\r\nclass Unwrapper {\r\n    constructor(source) {\r\n        this.source = source;\r\n    }\r\n    ['@@unwrap']() {\r\n        return this.source;\r\n    }\r\n    ['@@unwrapInto'](target) {\r\n        const keys = Object.getOwnPropertyNames(this.source);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            if (key.startsWith('@@') || key.startsWith('_'))\r\n                continue;\r\n            target[key] = unwrap(this.source[key]);\r\n        }\r\n        return target;\r\n    }\r\n    ['@@createUnwrapTarget']() {\r\n        return {};\r\n    }\r\n}\r\nfunction unwrapKey(key) {\r\n    const value = unwrap(key);\r\n    return Object(_frptools_corelib__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(value)\r\n        ? JSON.stringify(value)\r\n        : value;\r\n}\r\n//# sourceMappingURL=Unwrappable.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/Unwrappable.js?");

/***/ }),

/***/ "./node_modules/@frptools/structural/lib/es2015/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@frptools/structural/lib/es2015/index.js ***!
  \***************************************************************/
/*! exports provided: isComparable, compare, isEquatable, isEqual, isHashable, hash, hashArray, hashArgs, combineHash, hashObject, hashMiscRef, hashIterator, hashPlainObject, hashNumber, hashString, MutationContext, clone, isPersistent, immutable, commitContext, mutable, selectContext, getMutationContext, isMutationContext, isMutable, isImmutable, isMutableContext, isImmutableContext, areContextsRelated, hasRelatedContext, getSubordinateContext, asSubordinateContext, isPrimaryContext, isSubordinateContext, isRelatedContext, modify, commit, modifyAsSubordinate, modifyAsEqual, modifyProperty, withMutability, ensureContext, update, isUnwrappable, isRecursiveUnwrappable, unwrap, unwrapKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Comparable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Comparable */ \"./node_modules/@frptools/structural/lib/es2015/Comparable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isComparable\", function() { return _Comparable__WEBPACK_IMPORTED_MODULE_0__[\"isComparable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return _Comparable__WEBPACK_IMPORTED_MODULE_0__[\"compare\"]; });\n\n/* harmony import */ var _Equatable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Equatable */ \"./node_modules/@frptools/structural/lib/es2015/Equatable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEquatable\", function() { return _Equatable__WEBPACK_IMPORTED_MODULE_1__[\"isEquatable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return _Equatable__WEBPACK_IMPORTED_MODULE_1__[\"isEqual\"]; });\n\n/* harmony import */ var _Hashable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hashable */ \"./node_modules/@frptools/structural/lib/es2015/Hashable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isHashable\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"isHashable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hash\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hash\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashArray\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashArray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashArgs\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashArgs\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"combineHash\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"combineHash\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashObject\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashMiscRef\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashMiscRef\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashIterator\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashIterator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashPlainObject\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashPlainObject\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashNumber\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashNumber\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hashString\", function() { return _Hashable__WEBPACK_IMPORTED_MODULE_2__[\"hashString\"]; });\n\n/* harmony import */ var _Persistent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Persistent */ \"./node_modules/@frptools/structural/lib/es2015/Persistent.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MutationContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"MutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clone\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"clone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPersistent\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isPersistent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"immutable\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"immutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"commitContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"commitContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"mutable\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"mutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"selectContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"selectContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getMutationContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"getMutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutationContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isMutationContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutable\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isMutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isImmutable\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isImmutable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isMutableContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isMutableContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isImmutableContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isImmutableContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"areContextsRelated\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"areContextsRelated\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hasRelatedContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"hasRelatedContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getSubordinateContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"getSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"asSubordinateContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"asSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isPrimaryContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isPrimaryContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isSubordinateContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isSubordinateContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRelatedContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"isRelatedContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modify\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"modify\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"commit\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"commit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyAsSubordinate\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"modifyAsSubordinate\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyAsEqual\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"modifyAsEqual\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyProperty\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"modifyProperty\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"withMutability\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"withMutability\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ensureContext\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"ensureContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return _Persistent__WEBPACK_IMPORTED_MODULE_3__[\"update\"]; });\n\n/* harmony import */ var _Unwrappable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Unwrappable */ \"./node_modules/@frptools/structural/lib/es2015/Unwrappable.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isUnwrappable\", function() { return _Unwrappable__WEBPACK_IMPORTED_MODULE_4__[\"isUnwrappable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRecursiveUnwrappable\", function() { return _Unwrappable__WEBPACK_IMPORTED_MODULE_4__[\"isRecursiveUnwrappable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unwrap\", function() { return _Unwrappable__WEBPACK_IMPORTED_MODULE_4__[\"unwrap\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"unwrapKey\", function() { return _Unwrappable__WEBPACK_IMPORTED_MODULE_4__[\"unwrapKey\"]; });\n\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/@frptools/structural/lib/es2015/index.js?");

/***/ }),

/***/ "./node_modules/assert/assert.js":
/*!***************************************!*\
  !*** ./node_modules/assert/assert.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = __webpack_require__(/*! util/ */ \"./node_modules/util/util.js\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/assert/assert.js?");

/***/ }),

/***/ "./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nmodule.exports = function getTimezoneOffsetInMilliseconds (dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset\n}\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_days/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/add_days/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_days/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_hours/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/add_hours/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMilliseconds = __webpack_require__(/*! ../add_milliseconds/index.js */ \"./node_modules/date-fns/add_milliseconds/index.js\")\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nfunction addHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR)\n}\n\nmodule.exports = addHours\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_hours/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_iso_years/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/add_iso_years/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\nvar setISOYear = __webpack_require__(/*! ../set_iso_year/index.js */ \"./node_modules/date-fns/set_iso_year/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nfunction addISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return setISOYear(dirtyDate, getISOYear(dirtyDate) + amount)\n}\n\nmodule.exports = addISOYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_iso_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_milliseconds/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/add_milliseconds/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_milliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_minutes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/add_minutes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMilliseconds = __webpack_require__(/*! ../add_milliseconds/index.js */ \"./node_modules/date-fns/add_milliseconds/index.js\")\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nfunction addMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE)\n}\n\nmodule.exports = addMinutes\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_minutes/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_months/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/add_months/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar getDaysInMonth = __webpack_require__(/*! ../get_days_in_month/index.js */ \"./node_modules/date-fns/get_days_in_month/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_months/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_quarters/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/add_quarters/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMonths = __webpack_require__(/*! ../add_months/index.js */ \"./node_modules/date-fns/add_months/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nfunction addQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var months = amount * 3\n  return addMonths(dirtyDate, months)\n}\n\nmodule.exports = addQuarters\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_quarters/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_seconds/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/add_seconds/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMilliseconds = __webpack_require__(/*! ../add_milliseconds/index.js */ \"./node_modules/date-fns/add_milliseconds/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * 1000)\n}\n\nmodule.exports = addSeconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_seconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_weeks/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/add_weeks/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addDays = __webpack_require__(/*! ../add_days/index.js */ \"./node_modules/date-fns/add_days/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var days = amount * 7\n  return addDays(dirtyDate, days)\n}\n\nmodule.exports = addWeeks\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_weeks/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/add_years/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/add_years/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMonths = __webpack_require__(/*! ../add_months/index.js */ \"./node_modules/date-fns/add_months/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nfunction addYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, amount * 12)\n}\n\nmodule.exports = addYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/add_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/are_ranges_overlapping/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/date-fns/are_ranges_overlapping/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Range Helpers\n * @summary Is the given date range overlapping with another date range?\n *\n * @description\n * Is the given date range overlapping with another date range?\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Boolean} whether the date ranges are overlapping\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> false\n */\nfunction areRangesOverlapping (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n}\n\nmodule.exports = areRangesOverlapping\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/are_ranges_overlapping/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/closest_index_to/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/closest_index_to/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate, index) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = index\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestIndexTo\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/closest_index_to/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/closest_to/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/closest_to/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nfunction closestTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = currentDate\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestTo\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/closest_to/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/compare_asc/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/compare_asc/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/compare_asc/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/compare_desc/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/compare_desc/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/compare_desc/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_days/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_days/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_days/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_iso_weeks/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_iso_weeks/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nfunction differenceInCalendarISOWeeks (dirtyDateLeft, dirtyDateRight) {\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft)\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight)\n\n  var timestampLeft = startOfISOWeekLeft.getTime() -\n    startOfISOWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfISOWeekRight.getTime() -\n    startOfISOWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarISOWeeks\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_iso_weeks/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_iso_years/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_iso_years/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nfunction differenceInCalendarISOYears (dirtyDateLeft, dirtyDateRight) {\n  return getISOYear(dirtyDateLeft) - getISOYear(dirtyDateRight)\n}\n\nmodule.exports = differenceInCalendarISOYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_iso_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_months/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_months/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_months/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_quarters/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_quarters/index.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getQuarter = __webpack_require__(/*! ../get_quarter/index.js */ \"./node_modules/date-fns/get_quarter/index.js\")\nvar parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nfunction differenceInCalendarQuarters (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight)\n\n  return yearDiff * 4 + quarterDiff\n}\n\nmodule.exports = differenceInCalendarQuarters\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_quarters/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_weeks/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_weeks/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfWeek = __webpack_require__(/*! ../start_of_week/index.js */ \"./node_modules/date-fns/start_of_week/index.js\")\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   {weekStartsOn: 1}\n * )\n * //=> 2\n */\nfunction differenceInCalendarWeeks (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  var timestampLeft = startOfWeekLeft.getTime() -\n    startOfWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfWeekRight.getTime() -\n    startOfWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarWeeks\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_weeks/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_years/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_years/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInCalendarYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  return dateLeft.getFullYear() - dateRight.getFullYear()\n}\n\nmodule.exports = differenceInCalendarYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_days/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/difference_in_days/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInCalendarDays = __webpack_require__(/*! ../difference_in_calendar_days/index.js */ \"./node_modules/date-fns/difference_in_calendar_days/index.js\")\nvar compareAsc = __webpack_require__(/*! ../compare_asc/index.js */ \"./node_modules/date-fns/compare_asc/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_days/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_hours/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_hours/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var differenceInMilliseconds = __webpack_require__(/*! ../difference_in_milliseconds/index.js */ \"./node_modules/date-fns/difference_in_milliseconds/index.js\")\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nfunction differenceInHours (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInHours\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_hours/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_iso_years/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_iso_years/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInCalendarISOYears = __webpack_require__(/*! ../difference_in_calendar_iso_years/index.js */ \"./node_modules/date-fns/difference_in_calendar_iso_years/index.js\")\nvar compareAsc = __webpack_require__(/*! ../compare_asc/index.js */ \"./node_modules/date-fns/compare_asc/index.js\")\nvar subISOYears = __webpack_require__(/*! ../sub_iso_years/index.js */ \"./node_modules/date-fns/sub_iso_years/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\n  dateLeft = subISOYears(dateLeft, sign * difference)\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastISOYearNotFull)\n}\n\nmodule.exports = differenceInISOYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_iso_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_milliseconds/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_milliseconds/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_milliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_minutes/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_minutes/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var differenceInMilliseconds = __webpack_require__(/*! ../difference_in_milliseconds/index.js */ \"./node_modules/date-fns/difference_in_milliseconds/index.js\")\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\nfunction differenceInMinutes (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInMinutes\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_minutes/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_months/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_months/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInCalendarMonths = __webpack_require__(/*! ../difference_in_calendar_months/index.js */ \"./node_modules/date-fns/difference_in_calendar_months/index.js\")\nvar compareAsc = __webpack_require__(/*! ../compare_asc/index.js */ \"./node_modules/date-fns/compare_asc/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_months/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_quarters/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_quarters/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var differenceInMonths = __webpack_require__(/*! ../difference_in_months/index.js */ \"./node_modules/date-fns/difference_in_months/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInQuarters (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInQuarters\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_quarters/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_seconds/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_seconds/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var differenceInMilliseconds = __webpack_require__(/*! ../difference_in_milliseconds/index.js */ \"./node_modules/date-fns/difference_in_milliseconds/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_seconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_weeks/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_weeks/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var differenceInDays = __webpack_require__(/*! ../difference_in_days/index.js */ \"./node_modules/date-fns/difference_in_days/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 2\n */\nfunction differenceInWeeks (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInWeeks\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_weeks/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_years/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_years/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInCalendarYears = __webpack_require__(/*! ../difference_in_calendar_years/index.js */ \"./node_modules/date-fns/difference_in_calendar_years/index.js\")\nvar compareAsc = __webpack_require__(/*! ../compare_asc/index.js */ \"./node_modules/date-fns/compare_asc/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 1\n */\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastYearNotFull)\n}\n\nmodule.exports = differenceInYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/distance_in_words/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/distance_in_words/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var compareDesc = __webpack_require__(/*! ../compare_desc/index.js */ \"./node_modules/date-fns/compare_desc/index.js\")\nvar parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInSeconds = __webpack_require__(/*! ../difference_in_seconds/index.js */ \"./node_modules/date-fns/difference_in_seconds/index.js\")\nvar differenceInMonths = __webpack_require__(/*! ../difference_in_months/index.js */ \"./node_modules/date-fns/difference_in_months/index.js\")\nvar enLocale = __webpack_require__(/*! ../locale/en/index.js */ \"./node_modules/date-fns/locale/en/index.js\")\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/distance_in_words/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/distance_in_words_strict/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/distance_in_words_strict/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var compareDesc = __webpack_require__(/*! ../compare_desc/index.js */ \"./node_modules/date-fns/compare_desc/index.js\")\nvar parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar differenceInSeconds = __webpack_require__(/*! ../difference_in_seconds/index.js */ \"./node_modules/date-fns/difference_in_seconds/index.js\")\nvar enLocale = __webpack_require__(/*! ../locale/en/index.js */ \"./node_modules/date-fns/locale/en/index.js\")\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_YEAR = 525600\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWordsStrict(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {unit: 'm'}\n * )\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 28 January 2015, in months, rounded up?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 28),\n *   new Date(2015, 0, 1),\n *   {unit: 'M', partialMethod: 'ceil'}\n * )\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsStrict(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var unit\n  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = mathPartial(seconds / 60) - offset\n  var hours, days, months, years\n\n  if (options.unit) {\n    unit = String(options.unit)\n  } else {\n    if (minutes < 1) {\n      unit = 's'\n    } else if (minutes < 60) {\n      unit = 'm'\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'h'\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'd'\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'M'\n    } else {\n      unit = 'Y'\n    }\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 's') {\n    return localize('xSeconds', seconds, localizeOptions)\n\n  // 1 up to 60 mins\n  } else if (unit === 'm') {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 1 up to 24 hours\n  } else if (unit === 'h') {\n    hours = mathPartial(minutes / 60)\n    return localize('xHours', hours, localizeOptions)\n\n  // 1 up to 30 days\n  } else if (unit === 'd') {\n    days = mathPartial(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 up to 12 months\n  } else if (unit === 'M') {\n    months = mathPartial(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', months, localizeOptions)\n\n  // 1 year up to max Date\n  } else if (unit === 'Y') {\n    years = mathPartial(minutes / MINUTES_IN_YEAR)\n    return localize('xYears', years, localizeOptions)\n  }\n\n  throw new Error('Unknown unit: ' + unit)\n}\n\nmodule.exports = distanceInWordsStrict\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/distance_in_words_strict/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/distance_in_words_to_now/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/distance_in_words_to_now/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var distanceInWords = __webpack_require__(/*! ../distance_in_words/index.js */ \"./node_modules/date-fns/distance_in_words/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/distance_in_words_to_now/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/each_day/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/each_day/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/each_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_day/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/end_of_day/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nfunction endOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_hour/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/end_of_hour/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nfunction endOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfHour\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_hour/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_iso_week/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/end_of_iso_week/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var endOfWeek = __webpack_require__(/*! ../end_of_week/index.js */ \"./node_modules/date-fns/end_of_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfISOWeek (dirtyDate) {\n  return endOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = endOfISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_iso_year/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/end_of_iso_year/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear)\n  date.setMilliseconds(date.getMilliseconds() - 1)\n  return date\n}\n\nmodule.exports = endOfISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_minute/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/end_of_minute/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nfunction endOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(59, 999)\n  return date\n}\n\nmodule.exports = endOfMinute\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_minute/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_month/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/end_of_month/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_quarter/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/end_of_quarter/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_second/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/end_of_second/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nfunction endOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(999)\n  return date\n}\n\nmodule.exports = endOfSecond\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_second/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_today/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/end_of_today/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var endOfDay = __webpack_require__(/*! ../end_of_day/index.js */ \"./node_modules/date-fns/end_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Return the end of today.\n *\n * @description\n * Return the end of today.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday () {\n  return endOfDay(new Date())\n}\n\nmodule.exports = endOfToday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_today/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_tomorrow/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/end_of_tomorrow/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n *\n * @description\n * Return the end of tomorrow.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nfunction endOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfTomorrow\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_tomorrow/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_week/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/end_of_week/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setDate(date.getDate() + diff)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_year/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/end_of_year/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nfunction endOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/end_of_yesterday/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/end_of_yesterday/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Day Helpers\n * @summary Return the end of yesterday.\n *\n * @description\n * Return the end of yesterday.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYesterday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/end_of_yesterday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/format/index.js":
/*!***********************************************!*\
  !*** ./node_modules/date-fns/format/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getDayOfYear = __webpack_require__(/*! ../get_day_of_year/index.js */ \"./node_modules/date-fns/get_day_of_year/index.js\")\nvar getISOWeek = __webpack_require__(/*! ../get_iso_week/index.js */ \"./node_modules/date-fns/get_iso_week/index.js\")\nvar getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\nvar parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar isValid = __webpack_require__(/*! ../is_valid/index.js */ \"./node_modules/date-fns/is_valid/index.js\")\nvar enLocale = __webpack_require__(/*! ../locale/en/index.js */ \"./node_modules/date-fns/locale/en/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/format/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_date/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/get_date/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate (dirtyDate) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = date.getDate()\n  return dayOfMonth\n}\n\nmodule.exports = getDate\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_date/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_day/index.js":
/*!************************************************!*\
  !*** ./node_modules/date-fns/get_day/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_day_of_year/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/get_day_of_year/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar startOfYear = __webpack_require__(/*! ../start_of_year/index.js */ \"./node_modules/date-fns/start_of_year/index.js\")\nvar differenceInCalendarDays = __webpack_require__(/*! ../difference_in_calendar_days/index.js */ \"./node_modules/date-fns/difference_in_calendar_days/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_day_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_days_in_month/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/get_days_in_month/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_days_in_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_days_in_year/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/get_days_in_year/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isLeapYear = __webpack_require__(/*! ../is_leap_year/index.js */ \"./node_modules/date-fns/is_leap_year/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear (dirtyDate) {\n  return isLeapYear(dirtyDate) ? 366 : 365\n}\n\nmodule.exports = getDaysInYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_days_in_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_hours/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/get_hours/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nfunction getHours (dirtyDate) {\n  var date = parse(dirtyDate)\n  var hours = date.getHours()\n  return hours\n}\n\nmodule.exports = getHours\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_hours/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_day/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/get_iso_day/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n\n  if (day === 0) {\n    day = 7\n  }\n\n  return day\n}\n\nmodule.exports = getISODay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_week/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/get_iso_week/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\nvar startOfISOYear = __webpack_require__(/*! ../start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\")\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_weeks_in_year/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/get_iso_weeks_in_year/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfISOYear = __webpack_require__(/*! ../start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\")\nvar addWeeks = __webpack_require__(/*! ../add_weeks/index.js */ \"./node_modules/date-fns/add_weeks/index.js\")\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_weeks_in_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/get_iso_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_milliseconds/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/get_milliseconds/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nfunction getMilliseconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var milliseconds = date.getMilliseconds()\n  return milliseconds\n}\n\nmodule.exports = getMilliseconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_milliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_minutes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/get_minutes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nfunction getMinutes (dirtyDate) {\n  var date = parse(dirtyDate)\n  var minutes = date.getMinutes()\n  return minutes\n}\n\nmodule.exports = getMinutes\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_minutes/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_month/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/get_month/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_overlapping_days_in_ranges/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/date-fns/get_overlapping_days_in_ranges/index.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @category Range Helpers\n * @summary Get the number of days that overlap in two date ranges\n *\n * @description\n * Get the number of days that overlap in two date ranges\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Number} the number of days that overlap in two date ranges\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges adds 1 for each started overlapping day:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping date ranges returns 0:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> 0\n */\nfunction getOverlappingDaysInRanges (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  var isOverlapping = initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n\n  if (!isOverlapping) {\n    return 0\n  }\n\n  var overlapStartDate = comparedStartTime < initialStartTime\n    ? initialStartTime\n    : comparedStartTime\n\n  var overlapEndDate = comparedEndTime > initialEndTime\n    ? initialEndTime\n    : comparedEndTime\n\n  var differenceInMs = overlapEndDate - overlapStartDate\n\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = getOverlappingDaysInRanges\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_overlapping_days_in_ranges/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_quarter/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/get_quarter/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nfunction getQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var quarter = Math.floor(date.getMonth() / 3) + 1\n  return quarter\n}\n\nmodule.exports = getQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_seconds/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/get_seconds/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the seconds\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nfunction getSeconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var seconds = date.getSeconds()\n  return seconds\n}\n\nmodule.exports = getSeconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_seconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_time/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/get_time/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_time/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_year/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/get_year/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the year\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nfunction getYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year\n}\n\nmodule.exports = getYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/index.js":
/*!****************************************!*\
  !*** ./node_modules/date-fns/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  addDays: __webpack_require__(/*! ./add_days/index.js */ \"./node_modules/date-fns/add_days/index.js\"),\n  addHours: __webpack_require__(/*! ./add_hours/index.js */ \"./node_modules/date-fns/add_hours/index.js\"),\n  addISOYears: __webpack_require__(/*! ./add_iso_years/index.js */ \"./node_modules/date-fns/add_iso_years/index.js\"),\n  addMilliseconds: __webpack_require__(/*! ./add_milliseconds/index.js */ \"./node_modules/date-fns/add_milliseconds/index.js\"),\n  addMinutes: __webpack_require__(/*! ./add_minutes/index.js */ \"./node_modules/date-fns/add_minutes/index.js\"),\n  addMonths: __webpack_require__(/*! ./add_months/index.js */ \"./node_modules/date-fns/add_months/index.js\"),\n  addQuarters: __webpack_require__(/*! ./add_quarters/index.js */ \"./node_modules/date-fns/add_quarters/index.js\"),\n  addSeconds: __webpack_require__(/*! ./add_seconds/index.js */ \"./node_modules/date-fns/add_seconds/index.js\"),\n  addWeeks: __webpack_require__(/*! ./add_weeks/index.js */ \"./node_modules/date-fns/add_weeks/index.js\"),\n  addYears: __webpack_require__(/*! ./add_years/index.js */ \"./node_modules/date-fns/add_years/index.js\"),\n  areRangesOverlapping: __webpack_require__(/*! ./are_ranges_overlapping/index.js */ \"./node_modules/date-fns/are_ranges_overlapping/index.js\"),\n  closestIndexTo: __webpack_require__(/*! ./closest_index_to/index.js */ \"./node_modules/date-fns/closest_index_to/index.js\"),\n  closestTo: __webpack_require__(/*! ./closest_to/index.js */ \"./node_modules/date-fns/closest_to/index.js\"),\n  compareAsc: __webpack_require__(/*! ./compare_asc/index.js */ \"./node_modules/date-fns/compare_asc/index.js\"),\n  compareDesc: __webpack_require__(/*! ./compare_desc/index.js */ \"./node_modules/date-fns/compare_desc/index.js\"),\n  differenceInCalendarDays: __webpack_require__(/*! ./difference_in_calendar_days/index.js */ \"./node_modules/date-fns/difference_in_calendar_days/index.js\"),\n  differenceInCalendarISOWeeks: __webpack_require__(/*! ./difference_in_calendar_iso_weeks/index.js */ \"./node_modules/date-fns/difference_in_calendar_iso_weeks/index.js\"),\n  differenceInCalendarISOYears: __webpack_require__(/*! ./difference_in_calendar_iso_years/index.js */ \"./node_modules/date-fns/difference_in_calendar_iso_years/index.js\"),\n  differenceInCalendarMonths: __webpack_require__(/*! ./difference_in_calendar_months/index.js */ \"./node_modules/date-fns/difference_in_calendar_months/index.js\"),\n  differenceInCalendarQuarters: __webpack_require__(/*! ./difference_in_calendar_quarters/index.js */ \"./node_modules/date-fns/difference_in_calendar_quarters/index.js\"),\n  differenceInCalendarWeeks: __webpack_require__(/*! ./difference_in_calendar_weeks/index.js */ \"./node_modules/date-fns/difference_in_calendar_weeks/index.js\"),\n  differenceInCalendarYears: __webpack_require__(/*! ./difference_in_calendar_years/index.js */ \"./node_modules/date-fns/difference_in_calendar_years/index.js\"),\n  differenceInDays: __webpack_require__(/*! ./difference_in_days/index.js */ \"./node_modules/date-fns/difference_in_days/index.js\"),\n  differenceInHours: __webpack_require__(/*! ./difference_in_hours/index.js */ \"./node_modules/date-fns/difference_in_hours/index.js\"),\n  differenceInISOYears: __webpack_require__(/*! ./difference_in_iso_years/index.js */ \"./node_modules/date-fns/difference_in_iso_years/index.js\"),\n  differenceInMilliseconds: __webpack_require__(/*! ./difference_in_milliseconds/index.js */ \"./node_modules/date-fns/difference_in_milliseconds/index.js\"),\n  differenceInMinutes: __webpack_require__(/*! ./difference_in_minutes/index.js */ \"./node_modules/date-fns/difference_in_minutes/index.js\"),\n  differenceInMonths: __webpack_require__(/*! ./difference_in_months/index.js */ \"./node_modules/date-fns/difference_in_months/index.js\"),\n  differenceInQuarters: __webpack_require__(/*! ./difference_in_quarters/index.js */ \"./node_modules/date-fns/difference_in_quarters/index.js\"),\n  differenceInSeconds: __webpack_require__(/*! ./difference_in_seconds/index.js */ \"./node_modules/date-fns/difference_in_seconds/index.js\"),\n  differenceInWeeks: __webpack_require__(/*! ./difference_in_weeks/index.js */ \"./node_modules/date-fns/difference_in_weeks/index.js\"),\n  differenceInYears: __webpack_require__(/*! ./difference_in_years/index.js */ \"./node_modules/date-fns/difference_in_years/index.js\"),\n  distanceInWords: __webpack_require__(/*! ./distance_in_words/index.js */ \"./node_modules/date-fns/distance_in_words/index.js\"),\n  distanceInWordsStrict: __webpack_require__(/*! ./distance_in_words_strict/index.js */ \"./node_modules/date-fns/distance_in_words_strict/index.js\"),\n  distanceInWordsToNow: __webpack_require__(/*! ./distance_in_words_to_now/index.js */ \"./node_modules/date-fns/distance_in_words_to_now/index.js\"),\n  eachDay: __webpack_require__(/*! ./each_day/index.js */ \"./node_modules/date-fns/each_day/index.js\"),\n  endOfDay: __webpack_require__(/*! ./end_of_day/index.js */ \"./node_modules/date-fns/end_of_day/index.js\"),\n  endOfHour: __webpack_require__(/*! ./end_of_hour/index.js */ \"./node_modules/date-fns/end_of_hour/index.js\"),\n  endOfISOWeek: __webpack_require__(/*! ./end_of_iso_week/index.js */ \"./node_modules/date-fns/end_of_iso_week/index.js\"),\n  endOfISOYear: __webpack_require__(/*! ./end_of_iso_year/index.js */ \"./node_modules/date-fns/end_of_iso_year/index.js\"),\n  endOfMinute: __webpack_require__(/*! ./end_of_minute/index.js */ \"./node_modules/date-fns/end_of_minute/index.js\"),\n  endOfMonth: __webpack_require__(/*! ./end_of_month/index.js */ \"./node_modules/date-fns/end_of_month/index.js\"),\n  endOfQuarter: __webpack_require__(/*! ./end_of_quarter/index.js */ \"./node_modules/date-fns/end_of_quarter/index.js\"),\n  endOfSecond: __webpack_require__(/*! ./end_of_second/index.js */ \"./node_modules/date-fns/end_of_second/index.js\"),\n  endOfToday: __webpack_require__(/*! ./end_of_today/index.js */ \"./node_modules/date-fns/end_of_today/index.js\"),\n  endOfTomorrow: __webpack_require__(/*! ./end_of_tomorrow/index.js */ \"./node_modules/date-fns/end_of_tomorrow/index.js\"),\n  endOfWeek: __webpack_require__(/*! ./end_of_week/index.js */ \"./node_modules/date-fns/end_of_week/index.js\"),\n  endOfYear: __webpack_require__(/*! ./end_of_year/index.js */ \"./node_modules/date-fns/end_of_year/index.js\"),\n  endOfYesterday: __webpack_require__(/*! ./end_of_yesterday/index.js */ \"./node_modules/date-fns/end_of_yesterday/index.js\"),\n  format: __webpack_require__(/*! ./format/index.js */ \"./node_modules/date-fns/format/index.js\"),\n  getDate: __webpack_require__(/*! ./get_date/index.js */ \"./node_modules/date-fns/get_date/index.js\"),\n  getDay: __webpack_require__(/*! ./get_day/index.js */ \"./node_modules/date-fns/get_day/index.js\"),\n  getDayOfYear: __webpack_require__(/*! ./get_day_of_year/index.js */ \"./node_modules/date-fns/get_day_of_year/index.js\"),\n  getDaysInMonth: __webpack_require__(/*! ./get_days_in_month/index.js */ \"./node_modules/date-fns/get_days_in_month/index.js\"),\n  getDaysInYear: __webpack_require__(/*! ./get_days_in_year/index.js */ \"./node_modules/date-fns/get_days_in_year/index.js\"),\n  getHours: __webpack_require__(/*! ./get_hours/index.js */ \"./node_modules/date-fns/get_hours/index.js\"),\n  getISODay: __webpack_require__(/*! ./get_iso_day/index.js */ \"./node_modules/date-fns/get_iso_day/index.js\"),\n  getISOWeek: __webpack_require__(/*! ./get_iso_week/index.js */ \"./node_modules/date-fns/get_iso_week/index.js\"),\n  getISOWeeksInYear: __webpack_require__(/*! ./get_iso_weeks_in_year/index.js */ \"./node_modules/date-fns/get_iso_weeks_in_year/index.js\"),\n  getISOYear: __webpack_require__(/*! ./get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\"),\n  getMilliseconds: __webpack_require__(/*! ./get_milliseconds/index.js */ \"./node_modules/date-fns/get_milliseconds/index.js\"),\n  getMinutes: __webpack_require__(/*! ./get_minutes/index.js */ \"./node_modules/date-fns/get_minutes/index.js\"),\n  getMonth: __webpack_require__(/*! ./get_month/index.js */ \"./node_modules/date-fns/get_month/index.js\"),\n  getOverlappingDaysInRanges: __webpack_require__(/*! ./get_overlapping_days_in_ranges/index.js */ \"./node_modules/date-fns/get_overlapping_days_in_ranges/index.js\"),\n  getQuarter: __webpack_require__(/*! ./get_quarter/index.js */ \"./node_modules/date-fns/get_quarter/index.js\"),\n  getSeconds: __webpack_require__(/*! ./get_seconds/index.js */ \"./node_modules/date-fns/get_seconds/index.js\"),\n  getTime: __webpack_require__(/*! ./get_time/index.js */ \"./node_modules/date-fns/get_time/index.js\"),\n  getYear: __webpack_require__(/*! ./get_year/index.js */ \"./node_modules/date-fns/get_year/index.js\"),\n  isAfter: __webpack_require__(/*! ./is_after/index.js */ \"./node_modules/date-fns/is_after/index.js\"),\n  isBefore: __webpack_require__(/*! ./is_before/index.js */ \"./node_modules/date-fns/is_before/index.js\"),\n  isDate: __webpack_require__(/*! ./is_date/index.js */ \"./node_modules/date-fns/is_date/index.js\"),\n  isEqual: __webpack_require__(/*! ./is_equal/index.js */ \"./node_modules/date-fns/is_equal/index.js\"),\n  isFirstDayOfMonth: __webpack_require__(/*! ./is_first_day_of_month/index.js */ \"./node_modules/date-fns/is_first_day_of_month/index.js\"),\n  isFriday: __webpack_require__(/*! ./is_friday/index.js */ \"./node_modules/date-fns/is_friday/index.js\"),\n  isFuture: __webpack_require__(/*! ./is_future/index.js */ \"./node_modules/date-fns/is_future/index.js\"),\n  isLastDayOfMonth: __webpack_require__(/*! ./is_last_day_of_month/index.js */ \"./node_modules/date-fns/is_last_day_of_month/index.js\"),\n  isLeapYear: __webpack_require__(/*! ./is_leap_year/index.js */ \"./node_modules/date-fns/is_leap_year/index.js\"),\n  isMonday: __webpack_require__(/*! ./is_monday/index.js */ \"./node_modules/date-fns/is_monday/index.js\"),\n  isPast: __webpack_require__(/*! ./is_past/index.js */ \"./node_modules/date-fns/is_past/index.js\"),\n  isSameDay: __webpack_require__(/*! ./is_same_day/index.js */ \"./node_modules/date-fns/is_same_day/index.js\"),\n  isSameHour: __webpack_require__(/*! ./is_same_hour/index.js */ \"./node_modules/date-fns/is_same_hour/index.js\"),\n  isSameISOWeek: __webpack_require__(/*! ./is_same_iso_week/index.js */ \"./node_modules/date-fns/is_same_iso_week/index.js\"),\n  isSameISOYear: __webpack_require__(/*! ./is_same_iso_year/index.js */ \"./node_modules/date-fns/is_same_iso_year/index.js\"),\n  isSameMinute: __webpack_require__(/*! ./is_same_minute/index.js */ \"./node_modules/date-fns/is_same_minute/index.js\"),\n  isSameMonth: __webpack_require__(/*! ./is_same_month/index.js */ \"./node_modules/date-fns/is_same_month/index.js\"),\n  isSameQuarter: __webpack_require__(/*! ./is_same_quarter/index.js */ \"./node_modules/date-fns/is_same_quarter/index.js\"),\n  isSameSecond: __webpack_require__(/*! ./is_same_second/index.js */ \"./node_modules/date-fns/is_same_second/index.js\"),\n  isSameWeek: __webpack_require__(/*! ./is_same_week/index.js */ \"./node_modules/date-fns/is_same_week/index.js\"),\n  isSameYear: __webpack_require__(/*! ./is_same_year/index.js */ \"./node_modules/date-fns/is_same_year/index.js\"),\n  isSaturday: __webpack_require__(/*! ./is_saturday/index.js */ \"./node_modules/date-fns/is_saturday/index.js\"),\n  isSunday: __webpack_require__(/*! ./is_sunday/index.js */ \"./node_modules/date-fns/is_sunday/index.js\"),\n  isThisHour: __webpack_require__(/*! ./is_this_hour/index.js */ \"./node_modules/date-fns/is_this_hour/index.js\"),\n  isThisISOWeek: __webpack_require__(/*! ./is_this_iso_week/index.js */ \"./node_modules/date-fns/is_this_iso_week/index.js\"),\n  isThisISOYear: __webpack_require__(/*! ./is_this_iso_year/index.js */ \"./node_modules/date-fns/is_this_iso_year/index.js\"),\n  isThisMinute: __webpack_require__(/*! ./is_this_minute/index.js */ \"./node_modules/date-fns/is_this_minute/index.js\"),\n  isThisMonth: __webpack_require__(/*! ./is_this_month/index.js */ \"./node_modules/date-fns/is_this_month/index.js\"),\n  isThisQuarter: __webpack_require__(/*! ./is_this_quarter/index.js */ \"./node_modules/date-fns/is_this_quarter/index.js\"),\n  isThisSecond: __webpack_require__(/*! ./is_this_second/index.js */ \"./node_modules/date-fns/is_this_second/index.js\"),\n  isThisWeek: __webpack_require__(/*! ./is_this_week/index.js */ \"./node_modules/date-fns/is_this_week/index.js\"),\n  isThisYear: __webpack_require__(/*! ./is_this_year/index.js */ \"./node_modules/date-fns/is_this_year/index.js\"),\n  isThursday: __webpack_require__(/*! ./is_thursday/index.js */ \"./node_modules/date-fns/is_thursday/index.js\"),\n  isToday: __webpack_require__(/*! ./is_today/index.js */ \"./node_modules/date-fns/is_today/index.js\"),\n  isTomorrow: __webpack_require__(/*! ./is_tomorrow/index.js */ \"./node_modules/date-fns/is_tomorrow/index.js\"),\n  isTuesday: __webpack_require__(/*! ./is_tuesday/index.js */ \"./node_modules/date-fns/is_tuesday/index.js\"),\n  isValid: __webpack_require__(/*! ./is_valid/index.js */ \"./node_modules/date-fns/is_valid/index.js\"),\n  isWednesday: __webpack_require__(/*! ./is_wednesday/index.js */ \"./node_modules/date-fns/is_wednesday/index.js\"),\n  isWeekend: __webpack_require__(/*! ./is_weekend/index.js */ \"./node_modules/date-fns/is_weekend/index.js\"),\n  isWithinRange: __webpack_require__(/*! ./is_within_range/index.js */ \"./node_modules/date-fns/is_within_range/index.js\"),\n  isYesterday: __webpack_require__(/*! ./is_yesterday/index.js */ \"./node_modules/date-fns/is_yesterday/index.js\"),\n  lastDayOfISOWeek: __webpack_require__(/*! ./last_day_of_iso_week/index.js */ \"./node_modules/date-fns/last_day_of_iso_week/index.js\"),\n  lastDayOfISOYear: __webpack_require__(/*! ./last_day_of_iso_year/index.js */ \"./node_modules/date-fns/last_day_of_iso_year/index.js\"),\n  lastDayOfMonth: __webpack_require__(/*! ./last_day_of_month/index.js */ \"./node_modules/date-fns/last_day_of_month/index.js\"),\n  lastDayOfQuarter: __webpack_require__(/*! ./last_day_of_quarter/index.js */ \"./node_modules/date-fns/last_day_of_quarter/index.js\"),\n  lastDayOfWeek: __webpack_require__(/*! ./last_day_of_week/index.js */ \"./node_modules/date-fns/last_day_of_week/index.js\"),\n  lastDayOfYear: __webpack_require__(/*! ./last_day_of_year/index.js */ \"./node_modules/date-fns/last_day_of_year/index.js\"),\n  max: __webpack_require__(/*! ./max/index.js */ \"./node_modules/date-fns/max/index.js\"),\n  min: __webpack_require__(/*! ./min/index.js */ \"./node_modules/date-fns/min/index.js\"),\n  parse: __webpack_require__(/*! ./parse/index.js */ \"./node_modules/date-fns/parse/index.js\"),\n  setDate: __webpack_require__(/*! ./set_date/index.js */ \"./node_modules/date-fns/set_date/index.js\"),\n  setDay: __webpack_require__(/*! ./set_day/index.js */ \"./node_modules/date-fns/set_day/index.js\"),\n  setDayOfYear: __webpack_require__(/*! ./set_day_of_year/index.js */ \"./node_modules/date-fns/set_day_of_year/index.js\"),\n  setHours: __webpack_require__(/*! ./set_hours/index.js */ \"./node_modules/date-fns/set_hours/index.js\"),\n  setISODay: __webpack_require__(/*! ./set_iso_day/index.js */ \"./node_modules/date-fns/set_iso_day/index.js\"),\n  setISOWeek: __webpack_require__(/*! ./set_iso_week/index.js */ \"./node_modules/date-fns/set_iso_week/index.js\"),\n  setISOYear: __webpack_require__(/*! ./set_iso_year/index.js */ \"./node_modules/date-fns/set_iso_year/index.js\"),\n  setMilliseconds: __webpack_require__(/*! ./set_milliseconds/index.js */ \"./node_modules/date-fns/set_milliseconds/index.js\"),\n  setMinutes: __webpack_require__(/*! ./set_minutes/index.js */ \"./node_modules/date-fns/set_minutes/index.js\"),\n  setMonth: __webpack_require__(/*! ./set_month/index.js */ \"./node_modules/date-fns/set_month/index.js\"),\n  setQuarter: __webpack_require__(/*! ./set_quarter/index.js */ \"./node_modules/date-fns/set_quarter/index.js\"),\n  setSeconds: __webpack_require__(/*! ./set_seconds/index.js */ \"./node_modules/date-fns/set_seconds/index.js\"),\n  setYear: __webpack_require__(/*! ./set_year/index.js */ \"./node_modules/date-fns/set_year/index.js\"),\n  startOfDay: __webpack_require__(/*! ./start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\"),\n  startOfHour: __webpack_require__(/*! ./start_of_hour/index.js */ \"./node_modules/date-fns/start_of_hour/index.js\"),\n  startOfISOWeek: __webpack_require__(/*! ./start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\"),\n  startOfISOYear: __webpack_require__(/*! ./start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\"),\n  startOfMinute: __webpack_require__(/*! ./start_of_minute/index.js */ \"./node_modules/date-fns/start_of_minute/index.js\"),\n  startOfMonth: __webpack_require__(/*! ./start_of_month/index.js */ \"./node_modules/date-fns/start_of_month/index.js\"),\n  startOfQuarter: __webpack_require__(/*! ./start_of_quarter/index.js */ \"./node_modules/date-fns/start_of_quarter/index.js\"),\n  startOfSecond: __webpack_require__(/*! ./start_of_second/index.js */ \"./node_modules/date-fns/start_of_second/index.js\"),\n  startOfToday: __webpack_require__(/*! ./start_of_today/index.js */ \"./node_modules/date-fns/start_of_today/index.js\"),\n  startOfTomorrow: __webpack_require__(/*! ./start_of_tomorrow/index.js */ \"./node_modules/date-fns/start_of_tomorrow/index.js\"),\n  startOfWeek: __webpack_require__(/*! ./start_of_week/index.js */ \"./node_modules/date-fns/start_of_week/index.js\"),\n  startOfYear: __webpack_require__(/*! ./start_of_year/index.js */ \"./node_modules/date-fns/start_of_year/index.js\"),\n  startOfYesterday: __webpack_require__(/*! ./start_of_yesterday/index.js */ \"./node_modules/date-fns/start_of_yesterday/index.js\"),\n  subDays: __webpack_require__(/*! ./sub_days/index.js */ \"./node_modules/date-fns/sub_days/index.js\"),\n  subHours: __webpack_require__(/*! ./sub_hours/index.js */ \"./node_modules/date-fns/sub_hours/index.js\"),\n  subISOYears: __webpack_require__(/*! ./sub_iso_years/index.js */ \"./node_modules/date-fns/sub_iso_years/index.js\"),\n  subMilliseconds: __webpack_require__(/*! ./sub_milliseconds/index.js */ \"./node_modules/date-fns/sub_milliseconds/index.js\"),\n  subMinutes: __webpack_require__(/*! ./sub_minutes/index.js */ \"./node_modules/date-fns/sub_minutes/index.js\"),\n  subMonths: __webpack_require__(/*! ./sub_months/index.js */ \"./node_modules/date-fns/sub_months/index.js\"),\n  subQuarters: __webpack_require__(/*! ./sub_quarters/index.js */ \"./node_modules/date-fns/sub_quarters/index.js\"),\n  subSeconds: __webpack_require__(/*! ./sub_seconds/index.js */ \"./node_modules/date-fns/sub_seconds/index.js\"),\n  subWeeks: __webpack_require__(/*! ./sub_weeks/index.js */ \"./node_modules/date-fns/sub_weeks/index.js\"),\n  subYears: __webpack_require__(/*! ./sub_years/index.js */ \"./node_modules/date-fns/sub_years/index.js\")\n}\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_after/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/is_after/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() > dateToCompare.getTime()\n}\n\nmodule.exports = isAfter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_after/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_before/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/is_before/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_before/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_date/index.js":
/*!************************************************!*\
  !*** ./node_modules/date-fns/is_date/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_date/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_equal/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/is_equal/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual (dirtyLeftDate, dirtyRightDate) {\n  var dateLeft = parse(dirtyLeftDate)\n  var dateRight = parse(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\nmodule.exports = isEqual\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_equal/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_first_day_of_month/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/is_first_day_of_month/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nfunction isFirstDayOfMonth (dirtyDate) {\n  return parse(dirtyDate).getDate() === 1\n}\n\nmodule.exports = isFirstDayOfMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_first_day_of_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_friday/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/is_friday/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nfunction isFriday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 5\n}\n\nmodule.exports = isFriday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_friday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_future/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/is_future/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the future?\n *\n * @description\n * Is the given date in the future?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture (dirtyDate) {\n  return parse(dirtyDate).getTime() > new Date().getTime()\n}\n\nmodule.exports = isFuture\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_future/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_last_day_of_month/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/date-fns/is_last_day_of_month/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar endOfDay = __webpack_require__(/*! ../end_of_day/index.js */ \"./node_modules/date-fns/end_of_day/index.js\")\nvar endOfMonth = __webpack_require__(/*! ../end_of_month/index.js */ \"./node_modules/date-fns/end_of_month/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nfunction isLastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  return endOfDay(date).getTime() === endOfMonth(date).getTime()\n}\n\nmodule.exports = isLastDayOfMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_last_day_of_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_leap_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_leap_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nfunction isLeapYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0\n}\n\nmodule.exports = isLeapYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_leap_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_monday/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/is_monday/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isMonday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 1\n}\n\nmodule.exports = isMonday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_monday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_past/index.js":
/*!************************************************!*\
  !*** ./node_modules/date-fns/is_past/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_past/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_day/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/is_same_day/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_hour/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_same_hour/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfHour = __webpack_require__(/*! ../start_of_hour/index.js */ \"./node_modules/date-fns/start_of_hour/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 6, 30)\n * )\n * //=> true\n */\nfunction isSameHour (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft)\n  var dateRightStartOfHour = startOfHour(dirtyDateRight)\n\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()\n}\n\nmodule.exports = isSameHour\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_hour/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_iso_week/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/is_same_iso_week/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameWeek = __webpack_require__(/*! ../is_same_week/index.js */ \"./node_modules/date-fns/is_same_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 8, 7)\n * )\n * //=> true\n */\nfunction isSameISOWeek (dirtyDateLeft, dirtyDateRight) {\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {weekStartsOn: 1})\n}\n\nmodule.exports = isSameISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_iso_year/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/is_same_iso_year/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfISOYear = __webpack_require__(/*! ../start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOYear(\n *   new Date(2003, 11, 29),\n *   new Date(2005, 0, 2)\n * )\n * //=> true\n */\nfunction isSameISOYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfYear = startOfISOYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n\nmodule.exports = isSameISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_minute/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/is_same_minute/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfMinute = __webpack_require__(/*! ../start_of_minute/index.js */ \"./node_modules/date-fns/start_of_minute/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\nfunction isSameMinute (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft)\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight)\n\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()\n}\n\nmodule.exports = isSameMinute\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_minute/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_month/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/is_same_month/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_quarter/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/is_same_quarter/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfQuarter = __webpack_require__(/*! ../start_of_quarter/index.js */ \"./node_modules/date-fns/start_of_quarter/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(\n *   new Date(2014, 0, 1),\n *   new Date(2014, 2, 8)\n * )\n * //=> true\n */\nfunction isSameQuarter (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft)\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight)\n\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime()\n}\n\nmodule.exports = isSameQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_second/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/is_same_second/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfSecond = __webpack_require__(/*! ../start_of_second/index.js */ \"./node_modules/date-fns/start_of_second/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\nfunction isSameSecond (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft)\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight)\n\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()\n}\n\nmodule.exports = isSameSecond\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_second/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_week/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_same_week/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfWeek = __webpack_require__(/*! ../start_of_week/index.js */ \"./node_modules/date-fns/start_of_week/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4)\n * )\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4),\n *   {weekStartsOn: 1}\n * )\n * //=> false\n */\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\n}\n\nmodule.exports = isSameWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_same_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_same_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear()\n}\n\nmodule.exports = isSameYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_same_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_saturday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/is_saturday/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nfunction isSaturday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 6\n}\n\nmodule.exports = isSaturday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_saturday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_sunday/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/is_sunday/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nfunction isSunday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 0\n}\n\nmodule.exports = isSunday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_sunday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_hour/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_this_hour/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameHour = __webpack_require__(/*! ../is_same_hour/index.js */ \"./node_modules/date-fns/is_same_hour/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nfunction isThisHour (dirtyDate) {\n  return isSameHour(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisHour\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_hour/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_iso_week/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/is_this_iso_week/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameISOWeek = __webpack_require__(/*! ../is_same_iso_week/index.js */ \"./node_modules/date-fns/is_same_iso_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isThisISOWeek (dirtyDate) {\n  return isSameISOWeek(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_iso_year/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/is_this_iso_year/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameISOYear = __webpack_require__(/*! ../is_same_iso_year/index.js */ \"./node_modules/date-fns/is_same_iso_year/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Is the given date in the same ISO week-numbering year as the current date?\n *\n * @description\n * Is the given date in the same ISO week-numbering year as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week-numbering year\n *\n * @example\n * // If today is 25 September 2014,\n * // is 30 December 2013 in this ISO week-numbering year?\n * var result = isThisISOYear(new Date(2013, 11, 30))\n * //=> true\n */\nfunction isThisISOYear (dirtyDate) {\n  return isSameISOYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_minute/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/is_this_minute/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameMinute = __webpack_require__(/*! ../is_same_minute/index.js */ \"./node_modules/date-fns/is_same_minute/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nfunction isThisMinute (dirtyDate) {\n  return isSameMinute(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMinute\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_minute/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_month/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/is_this_month/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameMonth = __webpack_require__(/*! ../is_same_month/index.js */ \"./node_modules/date-fns/is_same_month/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nfunction isThisMonth (dirtyDate) {\n  return isSameMonth(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_quarter/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/is_this_quarter/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameQuarter = __webpack_require__(/*! ../is_same_quarter/index.js */ \"./node_modules/date-fns/is_same_quarter/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisQuarter (dirtyDate) {\n  return isSameQuarter(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_second/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/is_this_second/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameSecond = __webpack_require__(/*! ../is_same_second/index.js */ \"./node_modules/date-fns/is_same_second/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nfunction isThisSecond (dirtyDate) {\n  return isSameSecond(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisSecond\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_second/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_week/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_this_week/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameWeek = __webpack_require__(/*! ../is_same_week/index.js */ \"./node_modules/date-fns/is_same_week/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), {weekStartsOn: 1})\n * //=> false\n */\nfunction isThisWeek (dirtyDate, dirtyOptions) {\n  return isSameWeek(new Date(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = isThisWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_this_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_this_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSameYear = __webpack_require__(/*! ../is_same_year/index.js */ \"./node_modules/date-fns/is_same_year/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisYear (dirtyDate) {\n  return isSameYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_this_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_thursday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/is_thursday/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nfunction isThursday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 4\n}\n\nmodule.exports = isThursday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_thursday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_today/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/is_today/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_today/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_tomorrow/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/is_tomorrow/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow (dirtyDate) {\n  var tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(tomorrow).getTime()\n}\n\nmodule.exports = isTomorrow\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_tomorrow/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_tuesday/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/is_tuesday/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nfunction isTuesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 2\n}\n\nmodule.exports = isTuesday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_tuesday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_valid/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/is_valid/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isDate = __webpack_require__(/*! ../is_date/index.js */ \"./node_modules/date-fns/is_date/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_valid/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_wednesday/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_wednesday/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nfunction isWednesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 3\n}\n\nmodule.exports = isWednesday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_wednesday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_weekend/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/is_weekend/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nfunction isWeekend (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day === 0 || day === 6\n}\n\nmodule.exports = isWeekend\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_weekend/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_within_range/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/is_within_range/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Range Helpers\n * @summary Is the given date within the range?\n *\n * @description\n * Is the given date within the range?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Date|String|Number} startDate - the start of range\n * @param {Date|String|Number} endDate - the end of range\n * @returns {Boolean} the date is within the range\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // For the date within the range:\n * isWithinRange(\n *   new Date(2014, 0, 3), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> true\n *\n * @example\n * // For the date outside of the range:\n * isWithinRange(\n *   new Date(2014, 0, 10), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> false\n */\nfunction isWithinRange (dirtyDate, dirtyStartDate, dirtyEndDate) {\n  var time = parse(dirtyDate).getTime()\n  var startTime = parse(dirtyStartDate).getTime()\n  var endTime = parse(dirtyEndDate).getTime()\n\n  if (startTime > endTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return time >= startTime && time <= endTime\n}\n\nmodule.exports = isWithinRange\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_within_range/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_yesterday/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/is_yesterday/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Is the given date yesterday?\n *\n * @description\n * Is the given date yesterday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday (dirtyDate) {\n  var yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(yesterday).getTime()\n}\n\nmodule.exports = isYesterday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_yesterday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_iso_week/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_iso_week/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var lastDayOfWeek = __webpack_require__(/*! ../last_day_of_week/index.js */ \"./node_modules/date-fns/last_day_of_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfISOWeek (dirtyDate) {\n  return lastDayOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = lastDayOfISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_iso_year/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_iso_year/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year + 1, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  date.setDate(date.getDate() - 1)\n  return date\n}\n\nmodule.exports = lastDayOfISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_month/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_month/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_quarter/index.js":
/*!************************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_quarter/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a quarter\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_week/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_week/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setHours(0, 0, 0, 0)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = lastDayOfWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/last_day_of_year/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/last_day_of_year/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a year\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nfunction lastDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/last_day_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/build_format_locale/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/date-fns/locale/en/build_format_locale/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var buildFormattingTokensRegExp = __webpack_require__(/*! ../../_lib/build_formatting_tokens_reg_exp/index.js */ \"./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js\")\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/build_format_locale/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/locale/en/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var buildDistanceInWordsLocale = __webpack_require__(/*! ./build_distance_in_words_locale/index.js */ \"./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js\")\nvar buildFormatLocale = __webpack_require__(/*! ./build_format_locale/index.js */ \"./node_modules/date-fns/locale/en/build_format_locale/index.js\")\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/max/index.js":
/*!********************************************!*\
  !*** ./node_modules/date-fns/max/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/max/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/min/index.js":
/*!********************************************!*\
  !*** ./node_modules/date-fns/min/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/min/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/parse/index.js":
/*!**********************************************!*\
  !*** ./node_modules/date-fns/parse/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getTimezoneOffsetInMilliseconds = __webpack_require__(/*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */ \"./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js\")\nvar isDate = __webpack_require__(/*! ../is_date/index.js */ \"./node_modules/date-fns/is_date/index.js\")\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/parse/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_date/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/set_date/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month setted\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction setDate (dirtyDate, dirtyDayOfMonth) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = Number(dirtyDayOfMonth)\n  date.setDate(dayOfMonth)\n  return date\n}\n\nmodule.exports = setDate\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_date/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_day/index.js":
/*!************************************************!*\
  !*** ./node_modules/date-fns/set_day/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar addDays = __webpack_require__(/*! ../add_days/index.js */ \"./node_modules/date-fns/add_days/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_day_of_year/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/set_day_of_year/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year setted\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nfunction setDayOfYear (dirtyDate, dirtyDayOfYear) {\n  var date = parse(dirtyDate)\n  var dayOfYear = Number(dirtyDayOfYear)\n  date.setMonth(0)\n  date.setDate(dayOfYear)\n  return date\n}\n\nmodule.exports = setDayOfYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_day_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_hours/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/set_hours/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours setted\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nfunction setHours (dirtyDate, dirtyHours) {\n  var date = parse(dirtyDate)\n  var hours = Number(dirtyHours)\n  date.setHours(hours)\n  return date\n}\n\nmodule.exports = setHours\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_hours/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_iso_day/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/set_iso_day/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar addDays = __webpack_require__(/*! ../add_days/index.js */ \"./node_modules/date-fns/add_days/index.js\")\nvar getISODay = __webpack_require__(/*! ../get_iso_day/index.js */ \"./node_modules/date-fns/get_iso_day/index.js\")\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setISODay (dirtyDate, dirtyDay) {\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = getISODay(date)\n  var diff = day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setISODay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_iso_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_iso_week/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/set_iso_week/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar getISOWeek = __webpack_require__(/*! ../get_iso_week/index.js */ \"./node_modules/date-fns/get_iso_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week setted\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nfunction setISOWeek (dirtyDate, dirtyISOWeek) {\n  var date = parse(dirtyDate)\n  var isoWeek = Number(dirtyISOWeek)\n  var diff = getISOWeek(date) - isoWeek\n  date.setDate(date.getDate() - diff * 7)\n  return date\n}\n\nmodule.exports = setISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_iso_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/set_iso_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar startOfISOYear = __webpack_require__(/*! ../start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\")\nvar differenceInCalendarDays = __webpack_require__(/*! ../difference_in_calendar_days/index.js */ \"./node_modules/date-fns/difference_in_calendar_days/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year setted\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOYear (dirtyDate, dirtyISOYear) {\n  var date = parse(dirtyDate)\n  var isoYear = Number(dirtyISOYear)\n  var diff = differenceInCalendarDays(date, startOfISOYear(date))\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(isoYear, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  date = startOfISOYear(fourthOfJanuary)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = setISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_milliseconds/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/set_milliseconds/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds setted\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nfunction setMilliseconds (dirtyDate, dirtyMilliseconds) {\n  var date = parse(dirtyDate)\n  var milliseconds = Number(dirtyMilliseconds)\n  date.setMilliseconds(milliseconds)\n  return date\n}\n\nmodule.exports = setMilliseconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_milliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_minutes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/set_minutes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes setted\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nfunction setMinutes (dirtyDate, dirtyMinutes) {\n  var date = parse(dirtyDate)\n  var minutes = Number(dirtyMinutes)\n  date.setMinutes(minutes)\n  return date\n}\n\nmodule.exports = setMinutes\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_minutes/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_month/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/set_month/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar getDaysInMonth = __webpack_require__(/*! ../get_days_in_month/index.js */ \"./node_modules/date-fns/get_days_in_month/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month setted\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth (dirtyDate, dirtyMonth) {\n  var date = parse(dirtyDate)\n  var month = Number(dirtyMonth)\n  var year = date.getFullYear()\n  var day = date.getDate()\n\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(year, month, 15)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth))\n  return date\n}\n\nmodule.exports = setMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_quarter/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/set_quarter/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\nvar setMonth = __webpack_require__(/*! ../set_month/index.js */ \"./node_modules/date-fns/set_month/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter setted\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nfunction setQuarter (dirtyDate, dirtyQuarter) {\n  var date = parse(dirtyDate)\n  var quarter = Number(dirtyQuarter)\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1\n  var diff = quarter - oldQuarter\n  return setMonth(date, date.getMonth() + diff * 3)\n}\n\nmodule.exports = setQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_seconds/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/set_seconds/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds setted\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nfunction setSeconds (dirtyDate, dirtySeconds) {\n  var date = parse(dirtyDate)\n  var seconds = Number(dirtySeconds)\n  date.setSeconds(seconds)\n  return date\n}\n\nmodule.exports = setSeconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_seconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/set_year/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/set_year/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year setted\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear (dirtyDate, dirtyYear) {\n  var date = parse(dirtyDate)\n  var year = Number(dirtyYear)\n  date.setFullYear(year)\n  return date\n}\n\nmodule.exports = setYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/set_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_day/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/start_of_day/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_hour/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/start_of_hour/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nfunction startOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfHour\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_hour/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_iso_week/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/start_of_iso_week/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfWeek = __webpack_require__(/*! ../start_of_week/index.js */ \"./node_modules/date-fns/start_of_week/index.js\")\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_iso_year/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/start_of_iso_year/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\")\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_minute/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/start_of_minute/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nfunction startOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(0, 0)\n  return date\n}\n\nmodule.exports = startOfMinute\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_minute/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_month/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/start_of_month/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_month/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_quarter/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/start_of_quarter/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nfunction startOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3\n  date.setMonth(month, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfQuarter\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_quarter/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_second/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/start_of_second/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nfunction startOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(0)\n  return date\n}\n\nmodule.exports = startOfSecond\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_second/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_today/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/start_of_today/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_today/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_tomorrow/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/start_of_tomorrow/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n *\n * @description\n * Return the start of tomorrow.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nfunction startOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfTomorrow\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_tomorrow/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_week/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/start_of_week/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_year/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/start_of_year/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_yesterday/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/start_of_yesterday/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Day Helpers\n * @summary Return the start of yesterday.\n *\n * @description\n * Return the start of yesterday.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nfunction startOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYesterday\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_yesterday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_days/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/sub_days/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addDays = __webpack_require__(/*! ../add_days/index.js */ \"./node_modules/date-fns/add_days/index.js\")\n\n/**\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nfunction subDays (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addDays(dirtyDate, -amount)\n}\n\nmodule.exports = subDays\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_days/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_hours/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/sub_hours/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addHours = __webpack_require__(/*! ../add_hours/index.js */ \"./node_modules/date-fns/add_hours/index.js\")\n\n/**\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nfunction subHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addHours(dirtyDate, -amount)\n}\n\nmodule.exports = subHours\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_hours/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_iso_years/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/sub_iso_years/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addISOYears = __webpack_require__(/*! ../add_iso_years/index.js */ \"./node_modules/date-fns/add_iso_years/index.js\")\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nfunction subISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addISOYears(dirtyDate, -amount)\n}\n\nmodule.exports = subISOYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_iso_years/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_milliseconds/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/date-fns/sub_milliseconds/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMilliseconds = __webpack_require__(/*! ../add_milliseconds/index.js */ \"./node_modules/date-fns/add_milliseconds/index.js\")\n\n/**\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n\nmodule.exports = subMilliseconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_milliseconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_minutes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/sub_minutes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMinutes = __webpack_require__(/*! ../add_minutes/index.js */ \"./node_modules/date-fns/add_minutes/index.js\")\n\n/**\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the mintues subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nfunction subMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMinutes(dirtyDate, -amount)\n}\n\nmodule.exports = subMinutes\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_minutes/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_months/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/sub_months/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addMonths = __webpack_require__(/*! ../add_months/index.js */ \"./node_modules/date-fns/add_months/index.js\")\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_months/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_quarters/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/sub_quarters/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addQuarters = __webpack_require__(/*! ../add_quarters/index.js */ \"./node_modules/date-fns/add_quarters/index.js\")\n\n/**\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nfunction subQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addQuarters(dirtyDate, -amount)\n}\n\nmodule.exports = subQuarters\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_quarters/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_seconds/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/sub_seconds/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addSeconds = __webpack_require__(/*! ../add_seconds/index.js */ \"./node_modules/date-fns/add_seconds/index.js\")\n\n/**\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nfunction subSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addSeconds(dirtyDate, -amount)\n}\n\nmodule.exports = subSeconds\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_seconds/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_weeks/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/sub_weeks/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addWeeks = __webpack_require__(/*! ../add_weeks/index.js */ \"./node_modules/date-fns/add_weeks/index.js\")\n\n/**\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nfunction subWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addWeeks(dirtyDate, -amount)\n}\n\nmodule.exports = subWeeks\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_weeks/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/sub_years/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/sub_years/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var addYears = __webpack_require__(/*! ../add_years/index.js */ \"./node_modules/date-fns/add_years/index.js\")\n\n/**\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nfunction subYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addYears(dirtyDate, -amount)\n}\n\nmodule.exports = subYears\n\n\n//# sourceURL=webpack:///./node_modules/date-fns/sub_years/index.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.11';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports =  true && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else {}\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/lodash/lodash.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/regexp-i18n/dist/Constants.js":
/*!****************************************************!*\
  !*** ./node_modules/regexp-i18n/dist/Constants.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Constants.ts\n *\n * Copyright (c) Microsoft Corporation 2018. All rights reserved.\n *\n * Unicode range constants.\n * Generated code. Do not modify!\n * To regenerate - update java code in ./tools folder and run ./tools/symbols-range.sh\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable:max-line-length\nexports.default = {\n    LETTERS_ASTRAL: \"A-Za-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08E9\\u08F0-\\u08FE\\u0900-\\u093B\\u093D-\\u094C\\u094E-\\u0950\\u0955-\\u0963\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CC\\u09CE\\u09D7\\u09DC-\\u09DD\\u09DF-\\u09E3\\u09F0-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A3E-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D-\\u0B44\\u0B47-\\u0B48\\u0B4B-\\u0B4C\\u0B56-\\u0B57\\u0B5C-\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82-\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD0\\u0BD7\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55-\\u0C56\\u0C58-\\u0C59\\u0C60-\\u0C63\\u0C82-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCC\\u0CD5-\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1-\\u0CF2\\u0D02-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D7A-\\u0D7F\\u0D82-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1036\\u1038\\u103B-\\u103F\\u1050-\\u1062\\u1065-\\u1068\\u106E-\\u1086\\u108E\\u109C-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772-\\u1773\\u1780-\\u17B3\\u17B6-\\u17C8\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BA9\\u1BAC-\\u1BAF\\u1BBA-\\u1BE5\\u1BE7-\\u1BF1\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA697\\uA69F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uD800\\uDC00-\\uD800\\uDC0B\\uD800\\uDC0D-\\uD800\\uDC26\\uD800\\uDC28-\\uD800\\uDC3A\\uD800\\uDC3C-\\uD800\\uDC3D\\uD800\\uDC3F-\\uD800\\uDC4D\\uD800\\uDC50-\\uD800\\uDC5D\\uD800\\uDC80-\\uD800\\uDCFA\\uD800\\uDD40-\\uD800\\uDD74\\uD800\\uDE80-\\uD800\\uDE9C\\uD800\\uDEA0-\\uD800\\uDED0\\uD800\\uDF00-\\uD800\\uDF1E\\uD800\\uDF30-\\uD800\\uDF4A\\uD800\\uDF80-\\uD800\\uDF9D\\uD800\\uDFA0-\\uD800\\uDFC3\\uD800\\uDFC8-\\uD800\\uDFCF\\uD800\\uDFD1-\\uD800\\uDFD5\\uD801\\uDC00-\\uD801\\uDC9D\\uD802\\uDC00-\\uD802\\uDC05\\uD802\\uDC08\\uD802\\uDC0A-\\uD802\\uDC35\\uD802\\uDC37-\\uD802\\uDC38\\uD802\\uDC3C\\uD802\\uDC3F-\\uD802\\uDC55\\uD802\\uDD00-\\uD802\\uDD15\\uD802\\uDD20-\\uD802\\uDD39\\uD802\\uDD80-\\uD802\\uDDB7\\uD802\\uDDBE-\\uD802\\uDDBF\\uD802\\uDE00-\\uD802\\uDE03\\uD802\\uDE05-\\uD802\\uDE06\\uD802\\uDE0C-\\uD802\\uDE13\\uD802\\uDE15-\\uD802\\uDE17\\uD802\\uDE19-\\uD802\\uDE33\\uD802\\uDE60-\\uD802\\uDE7C\\uD802\\uDF00-\\uD802\\uDF35\\uD802\\uDF40-\\uD802\\uDF55\\uD802\\uDF60-\\uD802\\uDF72\\uD803\\uDC00-\\uD803\\uDC48\\uD804\\uDC00-\\uD804\\uDC45\\uD804\\uDC82-\\uD804\\uDCB8\\uD804\\uDCD0-\\uD804\\uDCE8\\uD804\\uDD00-\\uD804\\uDD32\\uD804\\uDD80-\\uD804\\uDDBF\\uD804\\uDDC1-\\uD804\\uDDC4\\uD805\\uDE80-\\uD805\\uDEB5\\uD808\\uDC00-\\uD808\\uDF6E\\uD809\\uDC00-\\uD809\\uDC62\\uD80C\\uDC00-\\uD80D\\uDC2E\\uD81A\\uDC00-\\uD81A\\uDE38\\uD81B\\uDF00-\\uD81B\\uDF44\\uD81B\\uDF50-\\uD81B\\uDF7E\\uD81B\\uDF93-\\uD81B\\uDF9F\\uD82C\\uDC00-\\uD82C\\uDC01\\uD835\\uDC00-\\uD835\\uDC54\\uD835\\uDC56-\\uD835\\uDC9C\\uD835\\uDC9E-\\uD835\\uDC9F\\uD835\\uDCA2\\uD835\\uDCA5-\\uD835\\uDCA6\\uD835\\uDCA9-\\uD835\\uDCAC\\uD835\\uDCAE-\\uD835\\uDCB9\\uD835\\uDCBB\\uD835\\uDCBD-\\uD835\\uDCC3\\uD835\\uDCC5-\\uD835\\uDD05\\uD835\\uDD07-\\uD835\\uDD0A\\uD835\\uDD0D-\\uD835\\uDD14\\uD835\\uDD16-\\uD835\\uDD1C\\uD835\\uDD1E-\\uD835\\uDD39\\uD835\\uDD3B-\\uD835\\uDD3E\\uD835\\uDD40-\\uD835\\uDD44\\uD835\\uDD46\\uD835\\uDD4A-\\uD835\\uDD50\\uD835\\uDD52-\\uD835\\uDEA5\\uD835\\uDEA8-\\uD835\\uDEC0\\uD835\\uDEC2-\\uD835\\uDEDA\\uD835\\uDEDC-\\uD835\\uDEFA\\uD835\\uDEFC-\\uD835\\uDF14\\uD835\\uDF16-\\uD835\\uDF34\\uD835\\uDF36-\\uD835\\uDF4E\\uD835\\uDF50-\\uD835\\uDF6E\\uD835\\uDF70-\\uD835\\uDF88\\uD835\\uDF8A-\\uD835\\uDFA8\\uD835\\uDFAA-\\uD835\\uDFC2\\uD835\\uDFC4-\\uD835\\uDFCB\\uD83B\\uDE00-\\uD83B\\uDE03\\uD83B\\uDE05-\\uD83B\\uDE1F\\uD83B\\uDE21-\\uD83B\\uDE22\\uD83B\\uDE24\\uD83B\\uDE27\\uD83B\\uDE29-\\uD83B\\uDE32\\uD83B\\uDE34-\\uD83B\\uDE37\\uD83B\\uDE39\\uD83B\\uDE3B\\uD83B\\uDE42\\uD83B\\uDE47\\uD83B\\uDE49\\uD83B\\uDE4B\\uD83B\\uDE4D-\\uD83B\\uDE4F\\uD83B\\uDE51-\\uD83B\\uDE52\\uD83B\\uDE54\\uD83B\\uDE57\\uD83B\\uDE59\\uD83B\\uDE5B\\uD83B\\uDE5D\\uD83B\\uDE5F\\uD83B\\uDE61-\\uD83B\\uDE62\\uD83B\\uDE64\\uD83B\\uDE67-\\uD83B\\uDE6A\\uD83B\\uDE6C-\\uD83B\\uDE72\\uD83B\\uDE74-\\uD83B\\uDE77\\uD83B\\uDE79-\\uD83B\\uDE7C\\uD83B\\uDE7E\\uD83B\\uDE80-\\uD83B\\uDE89\\uD83B\\uDE8B-\\uD83B\\uDE9B\\uD83B\\uDEA1-\\uD83B\\uDEA3\\uD83B\\uDEA5-\\uD83B\\uDEA9\\uD83B\\uDEAB-\\uD83B\\uDEBB\\uD840\\uDC00-\\uD869\\uDED6\\uD869\\uDF00-\\uD86D\\uDF34\\uD86D\\uDF40-\\uD86E\\uDC1D\\uD87E\\uDC00-\\uD87E\\uDE1D\",\n    IGNORABLE_SYMBOLS_ASTRAL: \"\\0-\\b\\u000E-\\u001B-\\u009F\\u00AD\\u0600-\\u0604\\u06DD\\u070F\\u200B-\\u200C\\u200E-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u206A-\\u206F\\uFEFF\\uFFF9-\\uFFFB\\uD804\\uDCBD\\uD834\\uDD73-\\uD834\\uDD7A\\uDB40\\uDC01\\uDB40\\uDC20-\\uDB40\\uDC7F\",\n    DIACRITICS_ASTRAL: '\\u093c\\u094d\\u0951-\\u0954\\u09bc\\u09cd\\u0b3c\\u0b4d\\u0bcd\\u0cbc\\u0ccd\\u0d4d\\u0f0b\\u1037\\u1039-\\u103a\\u1063-\\u1064\\u1069-\\u106d\\u1087-\\u108d\\u108f\\u109a-\\u109b\\u17b4-\\u17b5\\u17c9-\\u17d3\\u17dd\\u1baa-\\u1bab\\u1be6\\u1bf2-\\u1bf3',\n    DIGITS_ASTRAL: \"0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\\uD801\\uDCA0-\\uD801\\uDCA9\\uD804\\uDC66-\\uD804\\uDC6F\\uD804\\uDCF0-\\uD804\\uDCF9\\uD804\\uDD36-\\uD804\\uDD3F\\uD804\\uDDD0-\\uD804\\uDDD9\\uD805\\uDEC0-\\uD805\\uDEC9\\uD835\\uDFCE-\\uD835\\uDFFF\",\n    LETTERS_AND_DIACRITICS_ASTRAL: \"A-Za-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u065F\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08E9\\u08F0-\\u08FE\\u0900-\\u0963\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC-\\u09DD\\u09DF-\\u09E3\\u09F0-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A3E-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A70-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B5C-\\u0B5D\\u0B5F-\\u0B63\\u0B71\\u0B82-\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55-\\u0C56\\u0C58-\\u0C59\\u0C60-\\u0C63\\u0C82-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CF1-\\u0CF2\\u0D02-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D7A-\\u0D7F\\u0D82-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0EDC-\\u0EDF\\u0F00\\u0F0B\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u103F\\u1050-\\u108F\\u109A-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772-\\u1773\\u1780-\\u17D3\\u17D7\\u17DC-\\u17DD\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u1938\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B80-\\u1BAF\\u1BBA-\\u1BF3\\u1C00-\\u1C35\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA697\\uA69F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uD800\\uDC00-\\uD800\\uDC0B\\uD800\\uDC0D-\\uD800\\uDC26\\uD800\\uDC28-\\uD800\\uDC3A\\uD800\\uDC3C-\\uD800\\uDC3D\\uD800\\uDC3F-\\uD800\\uDC4D\\uD800\\uDC50-\\uD800\\uDC5D\\uD800\\uDC80-\\uD800\\uDCFA\\uD800\\uDD40-\\uD800\\uDD74\\uD800\\uDE80-\\uD800\\uDE9C\\uD800\\uDEA0-\\uD800\\uDED0\\uD800\\uDF00-\\uD800\\uDF1E\\uD800\\uDF30-\\uD800\\uDF4A\\uD800\\uDF80-\\uD800\\uDF9D\\uD800\\uDFA0-\\uD800\\uDFC3\\uD800\\uDFC8-\\uD800\\uDFCF\\uD800\\uDFD1-\\uD800\\uDFD5\\uD801\\uDC00-\\uD801\\uDC9D\\uD802\\uDC00-\\uD802\\uDC05\\uD802\\uDC08\\uD802\\uDC0A-\\uD802\\uDC35\\uD802\\uDC37-\\uD802\\uDC38\\uD802\\uDC3C\\uD802\\uDC3F-\\uD802\\uDC55\\uD802\\uDD00-\\uD802\\uDD15\\uD802\\uDD20-\\uD802\\uDD39\\uD802\\uDD80-\\uD802\\uDDB7\\uD802\\uDDBE-\\uD802\\uDDBF\\uD802\\uDE00-\\uD802\\uDE03\\uD802\\uDE05-\\uD802\\uDE06\\uD802\\uDE0C-\\uD802\\uDE13\\uD802\\uDE15-\\uD802\\uDE17\\uD802\\uDE19-\\uD802\\uDE33\\uD802\\uDE60-\\uD802\\uDE7C\\uD802\\uDF00-\\uD802\\uDF35\\uD802\\uDF40-\\uD802\\uDF55\\uD802\\uDF60-\\uD802\\uDF72\\uD803\\uDC00-\\uD803\\uDC48\\uD804\\uDC00-\\uD804\\uDC45\\uD804\\uDC82-\\uD804\\uDCB8\\uD804\\uDCD0-\\uD804\\uDCE8\\uD804\\uDD00-\\uD804\\uDD32\\uD804\\uDD80-\\uD804\\uDDBF\\uD804\\uDDC1-\\uD804\\uDDC4\\uD805\\uDE80-\\uD805\\uDEB5\\uD808\\uDC00-\\uD808\\uDF6E\\uD809\\uDC00-\\uD809\\uDC62\\uD80C\\uDC00-\\uD80D\\uDC2E\\uD81A\\uDC00-\\uD81A\\uDE38\\uD81B\\uDF00-\\uD81B\\uDF44\\uD81B\\uDF50-\\uD81B\\uDF7E\\uD81B\\uDF93-\\uD81B\\uDF9F\\uD82C\\uDC00-\\uD82C\\uDC01\\uD835\\uDC00-\\uD835\\uDC54\\uD835\\uDC56-\\uD835\\uDC9C\\uD835\\uDC9E-\\uD835\\uDC9F\\uD835\\uDCA2\\uD835\\uDCA5-\\uD835\\uDCA6\\uD835\\uDCA9-\\uD835\\uDCAC\\uD835\\uDCAE-\\uD835\\uDCB9\\uD835\\uDCBB\\uD835\\uDCBD-\\uD835\\uDCC3\\uD835\\uDCC5-\\uD835\\uDD05\\uD835\\uDD07-\\uD835\\uDD0A\\uD835\\uDD0D-\\uD835\\uDD14\\uD835\\uDD16-\\uD835\\uDD1C\\uD835\\uDD1E-\\uD835\\uDD39\\uD835\\uDD3B-\\uD835\\uDD3E\\uD835\\uDD40-\\uD835\\uDD44\\uD835\\uDD46\\uD835\\uDD4A-\\uD835\\uDD50\\uD835\\uDD52-\\uD835\\uDEA5\\uD835\\uDEA8-\\uD835\\uDEC0\\uD835\\uDEC2-\\uD835\\uDEDA\\uD835\\uDEDC-\\uD835\\uDEFA\\uD835\\uDEFC-\\uD835\\uDF14\\uD835\\uDF16-\\uD835\\uDF34\\uD835\\uDF36-\\uD835\\uDF4E\\uD835\\uDF50-\\uD835\\uDF6E\\uD835\\uDF70-\\uD835\\uDF88\\uD835\\uDF8A-\\uD835\\uDFA8\\uD835\\uDFAA-\\uD835\\uDFC2\\uD835\\uDFC4-\\uD835\\uDFCB\\uD83B\\uDE00-\\uD83B\\uDE03\\uD83B\\uDE05-\\uD83B\\uDE1F\\uD83B\\uDE21-\\uD83B\\uDE22\\uD83B\\uDE24\\uD83B\\uDE27\\uD83B\\uDE29-\\uD83B\\uDE32\\uD83B\\uDE34-\\uD83B\\uDE37\\uD83B\\uDE39\\uD83B\\uDE3B\\uD83B\\uDE42\\uD83B\\uDE47\\uD83B\\uDE49\\uD83B\\uDE4B\\uD83B\\uDE4D-\\uD83B\\uDE4F\\uD83B\\uDE51-\\uD83B\\uDE52\\uD83B\\uDE54\\uD83B\\uDE57\\uD83B\\uDE59\\uD83B\\uDE5B\\uD83B\\uDE5D\\uD83B\\uDE5F\\uD83B\\uDE61-\\uD83B\\uDE62\\uD83B\\uDE64\\uD83B\\uDE67-\\uD83B\\uDE6A\\uD83B\\uDE6C-\\uD83B\\uDE72\\uD83B\\uDE74-\\uD83B\\uDE77\\uD83B\\uDE79-\\uD83B\\uDE7C\\uD83B\\uDE7E\\uD83B\\uDE80-\\uD83B\\uDE89\\uD83B\\uDE8B-\\uD83B\\uDE9B\\uD83B\\uDEA1-\\uD83B\\uDEA3\\uD83B\\uDEA5-\\uD83B\\uDEA9\\uD83B\\uDEAB-\\uD83B\\uDEBB\\uD840\\uDC00-\\uD869\\uDED6\\uD869\\uDF00-\\uD86D\\uDF34\\uD86D\\uDF40-\\uD86E\\uDC1D\\uD87E\\uDC00-\\uD87E\\uDE1D\",\n    LETTERS_DIGITS_AND_DIACRITICS_ASTRAL: \"0-9A-Za-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05B0-\\u05BD\\u05BF\\u05C1-\\u05C2\\u05C4-\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0657\\u0659-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06E1-\\u06E8\\u06ED-\\u06FC\\u06FF\\u0710-\\u073F\\u074D-\\u07B1\\u07C0-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0800-\\u0817\\u081A-\\u082C\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08E9\\u08F0-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7-\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC-\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A3E-\\u0A42\\u0A47-\\u0A48\\u0A4B-\\u0A4C\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACC\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47-\\u0B48\\u0B4B-\\u0B4D\\u0B56-\\u0B57\\u0B5C-\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82-\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4C\\u0C55-\\u0C56\\u0C58-\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5-\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1-\\u0CF2\\u0D02-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82-\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2-\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E46\\u0E4D\\u0E50-\\u0E59\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F0B\\u0F20-\\u0F29\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F81\\u0F88-\\u0F97\\u0F99-\\u0FBC\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772-\\u1773\\u1780-\\u17D3\\u17D7\\u17DC-\\u17DD\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u1938\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A61-\\u1A74\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B33\\u1B35-\\u1B43\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B80-\\u1BF3\\u1C00-\\u1C35\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5-\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u24B6-\\u24E9\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA674-\\uA67B\\uA67F-\\uA697\\uA69F-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA827\\uA840-\\uA873\\uA880-\\uA8C3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA900-\\uA92A\\uA930-\\uA952\\uA960-\\uA97C\\uA980-\\uA9B2\\uA9B4-\\uA9BF\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAABE\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF5\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\\uD800\\uDC00-\\uD800\\uDC0B\\uD800\\uDC0D-\\uD800\\uDC26\\uD800\\uDC28-\\uD800\\uDC3A\\uD800\\uDC3C-\\uD800\\uDC3D\\uD800\\uDC3F-\\uD800\\uDC4D\\uD800\\uDC50-\\uD800\\uDC5D\\uD800\\uDC80-\\uD800\\uDCFA\\uD800\\uDD40-\\uD800\\uDD74\\uD800\\uDE80-\\uD800\\uDE9C\\uD800\\uDEA0-\\uD800\\uDED0\\uD800\\uDF00-\\uD800\\uDF1E\\uD800\\uDF30-\\uD800\\uDF4A\\uD800\\uDF80-\\uD800\\uDF9D\\uD800\\uDFA0-\\uD800\\uDFC3\\uD800\\uDFC8-\\uD800\\uDFCF\\uD800\\uDFD1-\\uD800\\uDFD5\\uD801\\uDC00-\\uD801\\uDC9D\\uD801\\uDCA0-\\uD801\\uDCA9\\uD802\\uDC00-\\uD802\\uDC05\\uD802\\uDC08\\uD802\\uDC0A-\\uD802\\uDC35\\uD802\\uDC37-\\uD802\\uDC38\\uD802\\uDC3C\\uD802\\uDC3F-\\uD802\\uDC55\\uD802\\uDD00-\\uD802\\uDD15\\uD802\\uDD20-\\uD802\\uDD39\\uD802\\uDD80-\\uD802\\uDDB7\\uD802\\uDDBE-\\uD802\\uDDBF\\uD802\\uDE00-\\uD802\\uDE03\\uD802\\uDE05-\\uD802\\uDE06\\uD802\\uDE0C-\\uD802\\uDE13\\uD802\\uDE15-\\uD802\\uDE17\\uD802\\uDE19-\\uD802\\uDE33\\uD802\\uDE60-\\uD802\\uDE7C\\uD802\\uDF00-\\uD802\\uDF35\\uD802\\uDF40-\\uD802\\uDF55\\uD802\\uDF60-\\uD802\\uDF72\\uD803\\uDC00-\\uD803\\uDC48\\uD804\\uDC00-\\uD804\\uDC45\\uD804\\uDC66-\\uD804\\uDC6F\\uD804\\uDC82-\\uD804\\uDCB8\\uD804\\uDCD0-\\uD804\\uDCE8\\uD804\\uDCF0-\\uD804\\uDCF9\\uD804\\uDD00-\\uD804\\uDD32\\uD804\\uDD36-\\uD804\\uDD3F\\uD804\\uDD80-\\uD804\\uDDBF\\uD804\\uDDC1-\\uD804\\uDDC4\\uD804\\uDDD0-\\uD804\\uDDD9\\uD805\\uDE80-\\uD805\\uDEB5\\uD805\\uDEC0-\\uD805\\uDEC9\\uD808\\uDC00-\\uD808\\uDF6E\\uD809\\uDC00-\\uD809\\uDC62\\uD80C\\uDC00-\\uD80D\\uDC2E\\uD81A\\uDC00-\\uD81A\\uDE38\\uD81B\\uDF00-\\uD81B\\uDF44\\uD81B\\uDF50-\\uD81B\\uDF7E\\uD81B\\uDF93-\\uD81B\\uDF9F\\uD82C\\uDC00-\\uD82C\\uDC01\\uD835\\uDC00-\\uD835\\uDC54\\uD835\\uDC56-\\uD835\\uDC9C\\uD835\\uDC9E-\\uD835\\uDC9F\\uD835\\uDCA2\\uD835\\uDCA5-\\uD835\\uDCA6\\uD835\\uDCA9-\\uD835\\uDCAC\\uD835\\uDCAE-\\uD835\\uDCB9\\uD835\\uDCBB\\uD835\\uDCBD-\\uD835\\uDCC3\\uD835\\uDCC5-\\uD835\\uDD05\\uD835\\uDD07-\\uD835\\uDD0A\\uD835\\uDD0D-\\uD835\\uDD14\\uD835\\uDD16-\\uD835\\uDD1C\\uD835\\uDD1E-\\uD835\\uDD39\\uD835\\uDD3B-\\uD835\\uDD3E\\uD835\\uDD40-\\uD835\\uDD44\\uD835\\uDD46\\uD835\\uDD4A-\\uD835\\uDD50\\uD835\\uDD52-\\uD835\\uDEA5\\uD835\\uDEA8-\\uD835\\uDEC0\\uD835\\uDEC2-\\uD835\\uDEDA\\uD835\\uDEDC-\\uD835\\uDEFA\\uD835\\uDEFC-\\uD835\\uDF14\\uD835\\uDF16-\\uD835\\uDF34\\uD835\\uDF36-\\uD835\\uDF4E\\uD835\\uDF50-\\uD835\\uDF6E\\uD835\\uDF70-\\uD835\\uDF88\\uD835\\uDF8A-\\uD835\\uDFA8\\uD835\\uDFAA-\\uD835\\uDFC2\\uD835\\uDFC4-\\uD835\\uDFCB\\uD835\\uDFCE-\\uD835\\uDFFF\\uD83B\\uDE00-\\uD83B\\uDE03\\uD83B\\uDE05-\\uD83B\\uDE1F\\uD83B\\uDE21-\\uD83B\\uDE22\\uD83B\\uDE24\\uD83B\\uDE27\\uD83B\\uDE29-\\uD83B\\uDE32\\uD83B\\uDE34-\\uD83B\\uDE37\\uD83B\\uDE39\\uD83B\\uDE3B\\uD83B\\uDE42\\uD83B\\uDE47\\uD83B\\uDE49\\uD83B\\uDE4B\\uD83B\\uDE4D-\\uD83B\\uDE4F\\uD83B\\uDE51-\\uD83B\\uDE52\\uD83B\\uDE54\\uD83B\\uDE57\\uD83B\\uDE59\\uD83B\\uDE5B\\uD83B\\uDE5D\\uD83B\\uDE5F\\uD83B\\uDE61-\\uD83B\\uDE62\\uD83B\\uDE64\\uD83B\\uDE67-\\uD83B\\uDE6A\\uD83B\\uDE6C-\\uD83B\\uDE72\\uD83B\\uDE74-\\uD83B\\uDE77\\uD83B\\uDE79-\\uD83B\\uDE7C\\uD83B\\uDE7E\\uD83B\\uDE80-\\uD83B\\uDE89\\uD83B\\uDE8B-\\uD83B\\uDE9B\\uD83B\\uDEA1-\\uD83B\\uDEA3\\uD83B\\uDEA5-\\uD83B\\uDEA9\\uD83B\\uDEAB-\\uD83B\\uDEBB\\uD840\\uDC00-\\uD869\\uDED6\\uD869\\uDF00-\\uD86D\\uDF34\\uD86D\\uDF40-\\uD86E\\uDC1D\\uD87E\\uDC00-\\uD87E\\uDE1D\",\n    LETTERS_ASTRAL_RANGE: [[65, 90], [97, 122], [170, 170], [181, 181], [186, 186], [192, 214], [216, 246], [248, 705], [710, 721], [736, 740], [748, 748], [750, 750], [837, 837], [880, 884], [886, 887], [890, 893], [902, 902], [904, 906], [908, 908], [910, 929], [931, 1013], [1015, 1153], [1162, 1319], [1329, 1366], [1369, 1369], [1377, 1415], [1456, 1469], [1471, 1471], [1473, 1474], [1476, 1477], [1479, 1479], [1488, 1514], [1520, 1522], [1552, 1562], [1568, 1623], [1625, 1631], [1646, 1747], [1749, 1756], [1761, 1768], [1773, 1775], [1786, 1788], [1791, 1791], [1808, 1855], [1869, 1969], [1994, 2026], [2036, 2037], [2042, 2042], [2048, 2071], [2074, 2092], [2112, 2136], [2208, 2208], [2210, 2220], [2276, 2281], [2288, 2302], [2304, 2363], [2365, 2380], [2382, 2384], [2389, 2403], [2417, 2423], [2425, 2431], [2433, 2435], [2437, 2444], [2447, 2448], [2451, 2472], [2474, 2480], [2482, 2482], [2486, 2489], [2493, 2500], [2503, 2504], [2507, 2508], [2510, 2510], [2519, 2519], [2524, 2525], [2527, 2531], [2544, 2545], [2561, 2563], [2565, 2570], [2575, 2576], [2579, 2600], [2602, 2608], [2610, 2611], [2613, 2614], [2616, 2617], [2622, 2626], [2631, 2632], [2635, 2636], [2641, 2641], [2649, 2652], [2654, 2654], [2672, 2677], [2689, 2691], [2693, 2701], [2703, 2705], [2707, 2728], [2730, 2736], [2738, 2739], [2741, 2745], [2749, 2757], [2759, 2761], [2763, 2764], [2768, 2768], [2784, 2787], [2817, 2819], [2821, 2828], [2831, 2832], [2835, 2856], [2858, 2864], [2866, 2867], [2869, 2873], [2877, 2884], [2887, 2888], [2891, 2892], [2902, 2903], [2908, 2909], [2911, 2915], [2929, 2929], [2946, 2947], [2949, 2954], [2958, 2960], [2962, 2965], [2969, 2970], [2972, 2972], [2974, 2975], [2979, 2980], [2984, 2986], [2990, 3001], [3006, 3010], [3014, 3016], [3018, 3020], [3024, 3024], [3031, 3031], [3073, 3075], [3077, 3084], [3086, 3088], [3090, 3112], [3114, 3123], [3125, 3129], [3133, 3140], [3142, 3144], [3146, 3148], [3157, 3158], [3160, 3161], [3168, 3171], [3202, 3203], [3205, 3212], [3214, 3216], [3218, 3240], [3242, 3251], [3253, 3257], [3261, 3268], [3270, 3272], [3274, 3276], [3285, 3286], [3294, 3294], [3296, 3299], [3313, 3314], [3330, 3331], [3333, 3340], [3342, 3344], [3346, 3386], [3389, 3396], [3398, 3400], [3402, 3404], [3406, 3406], [3415, 3415], [3424, 3427], [3450, 3455], [3458, 3459], [3461, 3478], [3482, 3505], [3507, 3515], [3517, 3517], [3520, 3526], [3535, 3540], [3542, 3542], [3544, 3551], [3570, 3571], [3585, 3642], [3648, 3654], [3661, 3661], [3713, 3714], [3716, 3716], [3719, 3720], [3722, 3722], [3725, 3725], [3732, 3735], [3737, 3743], [3745, 3747], [3749, 3749], [3751, 3751], [3754, 3755], [3757, 3769], [3771, 3773], [3776, 3780], [3782, 3782], [3789, 3789], [3804, 3807], [3840, 3840], [3904, 3911], [3913, 3948], [3953, 3969], [3976, 3991], [3993, 4028], [4096, 4150], [4152, 4152], [4155, 4159], [4176, 4194], [4197, 4200], [4206, 4230], [4238, 4238], [4252, 4253], [4256, 4293], [4295, 4295], [4301, 4301], [4304, 4346], [4348, 4680], [4682, 4685], [4688, 4694], [4696, 4696], [4698, 4701], [4704, 4744], [4746, 4749], [4752, 4784], [4786, 4789], [4792, 4798], [4800, 4800], [4802, 4805], [4808, 4822], [4824, 4880], [4882, 4885], [4888, 4954], [4959, 4959], [4992, 5007], [5024, 5108], [5121, 5740], [5743, 5759], [5761, 5786], [5792, 5866], [5870, 5872], [5888, 5900], [5902, 5907], [5920, 5939], [5952, 5971], [5984, 5996], [5998, 6000], [6002, 6003], [6016, 6067], [6070, 6088], [6103, 6103], [6108, 6108], [6176, 6263], [6272, 6314], [6320, 6389], [6400, 6428], [6432, 6443], [6448, 6456], [6480, 6509], [6512, 6516], [6528, 6571], [6576, 6601], [6656, 6683], [6688, 6750], [6753, 6772], [6823, 6823], [6912, 6963], [6965, 6979], [6981, 6987], [7040, 7081], [7084, 7087], [7098, 7141], [7143, 7153], [7168, 7221], [7245, 7247], [7258, 7293], [7401, 7404], [7406, 7411], [7413, 7414], [7424, 7615], [7680, 7957], [7960, 7965], [7968, 8005], [8008, 8013], [8016, 8023], [8025, 8025], [8027, 8027], [8029, 8029], [8031, 8061], [8064, 8116], [8118, 8124], [8126, 8126], [8130, 8132], [8134, 8140], [8144, 8147], [8150, 8155], [8160, 8172], [8178, 8180], [8182, 8188], [8305, 8305], [8319, 8319], [8336, 8348], [8450, 8450], [8455, 8455], [8458, 8467], [8469, 8469], [8473, 8477], [8484, 8484], [8486, 8486], [8488, 8488], [8490, 8493], [8495, 8505], [8508, 8511], [8517, 8521], [8526, 8526], [8544, 8584], [9398, 9449], [11264, 11310], [11312, 11358], [11360, 11492], [11499, 11502], [11506, 11507], [11520, 11557], [11559, 11559], [11565, 11565], [11568, 11623], [11631, 11631], [11648, 11670], [11680, 11686], [11688, 11694], [11696, 11702], [11704, 11710], [11712, 11718], [11720, 11726], [11728, 11734], [11736, 11742], [11744, 11775], [11823, 11823], [12293, 12295], [12321, 12329], [12337, 12341], [12344, 12348], [12353, 12438], [12445, 12447], [12449, 12538], [12540, 12543], [12549, 12589], [12593, 12686], [12704, 12730], [12784, 12799], [13312, 19893], [19968, 40908], [40960, 42124], [42192, 42237], [42240, 42508], [42512, 42527], [42538, 42539], [42560, 42606], [42612, 42619], [42623, 42647], [42655, 42735], [42775, 42783], [42786, 42888], [42891, 42894], [42896, 42899], [42912, 42922], [43000, 43009], [43011, 43013], [43015, 43018], [43020, 43047], [43072, 43123], [43136, 43203], [43250, 43255], [43259, 43259], [43274, 43306], [43312, 43346], [43360, 43388], [43392, 43442], [43444, 43455], [43471, 43471], [43520, 43574], [43584, 43597], [43616, 43638], [43642, 43642], [43648, 43710], [43712, 43712], [43714, 43714], [43739, 43741], [43744, 43759], [43762, 43765], [43777, 43782], [43785, 43790], [43793, 43798], [43808, 43814], [43816, 43822], [43968, 44010], [44032, 55203], [55216, 55238], [55243, 55291], [63744, 64109], [64112, 64217], [64256, 64262], [64275, 64279], [64285, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64433], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65019], [65136, 65140], [65142, 65276], [65313, 65338], [65345, 65370], [65382, 65470], [65474, 65479], [65482, 65487], [65490, 65495], [65498, 65500], [65536, 65547], [65549, 65574], [65576, 65594], [65596, 65597], [65599, 65613], [65616, 65629], [65664, 65786], [65856, 65908], [66176, 66204], [66208, 66256], [66304, 66334], [66352, 66378], [66432, 66461], [66464, 66499], [66504, 66511], [66513, 66517], [66560, 66717], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67840, 67861], [67872, 67897], [67968, 68023], [68030, 68031], [68096, 68099], [68101, 68102], [68108, 68115], [68117, 68119], [68121, 68147], [68192, 68220], [68352, 68405], [68416, 68437], [68448, 68466], [68608, 68680], [69632, 69701], [69762, 69816], [69840, 69864], [69888, 69938], [70016, 70079], [70081, 70084], [71296, 71349], [73728, 74606], [74752, 74850], [77824, 78894], [92160, 92728], [93952, 94020], [94032, 94078], [94099, 94111], [110592, 110593], [119808, 119892], [119894, 119964], [119966, 119967], [119970, 119970], [119973, 119974], [119977, 119980], [119982, 119993], [119995, 119995], [119997, 120003], [120005, 120069], [120071, 120074], [120077, 120084], [120086, 120092], [120094, 120121], [120123, 120126], [120128, 120132], [120134, 120134], [120138, 120144], [120146, 120485], [120488, 120512], [120514, 120538], [120540, 120570], [120572, 120596], [120598, 120628], [120630, 120654], [120656, 120686], [120688, 120712], [120714, 120744], [120746, 120770], [120772, 120779], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [131072, 173782], [173824, 177972], [177984, 178205], [194560, 195101]],\n    IGNORABLE_SYMBOLS_ASTRAL_RANGE: [[0, 8], [14, 27], [127, 159], [173, 173], [1536, 1540], [1757, 1757], [1807, 1807], [8203, 8204], [8206, 8207], [8234, 8238], [8288, 8292], [8298, 8303], [65279, 65279], [65529, 65531], [69821, 69821], [119155, 119162], [917505, 917505], [917536, 917631]],\n    DIACRITICS_ASTRAL_RANGE: [[2364, 2364], [2381, 2381], [2385, 2388], [2492, 2492], [2509, 2509], [2876, 2876], [2893, 2893], [3021, 3021], [3260, 3260], [3277, 3277], [3405, 3405], [3851, 3851], [4151, 4151], [4153, 4154], [4195, 4196], [4201, 4205], [4231, 4237], [4239, 4239], [4250, 4251], [6068, 6069], [6089, 6099], [6109, 6109], [7082, 7083], [7142, 7142], [7154, 7155]],\n    DIGITS_ASTRAL_RANGE: [[48, 57], [1632, 1641], [1776, 1785], [1984, 1993], [2406, 2415], [2534, 2543], [2662, 2671], [2790, 2799], [2918, 2927], [3046, 3055], [3174, 3183], [3302, 3311], [3430, 3439], [3664, 3673], [3792, 3801], [3872, 3881], [4160, 4169], [4240, 4249], [6112, 6121], [6160, 6169], [6470, 6479], [6608, 6617], [6784, 6793], [6800, 6809], [6992, 7001], [7088, 7097], [7232, 7241], [7248, 7257], [42528, 42537], [43216, 43225], [43264, 43273], [43472, 43481], [43600, 43609], [44016, 44025], [65296, 65305], [66720, 66729], [69734, 69743], [69872, 69881], [69942, 69951], [70096, 70105], [71360, 71369], [120782, 120831]],\n    LETTERS_AND_DIACRITICS_ASTRAL_RANGE: [[65, 90], [97, 122], [170, 170], [181, 181], [186, 186], [192, 214], [216, 246], [248, 705], [710, 721], [736, 740], [748, 748], [750, 750], [837, 837], [880, 884], [886, 887], [890, 893], [902, 902], [904, 906], [908, 908], [910, 929], [931, 1013], [1015, 1153], [1162, 1319], [1329, 1366], [1369, 1369], [1377, 1415], [1456, 1469], [1471, 1471], [1473, 1474], [1476, 1477], [1479, 1479], [1488, 1514], [1520, 1522], [1552, 1562], [1568, 1623], [1625, 1631], [1646, 1747], [1749, 1756], [1761, 1768], [1773, 1775], [1786, 1788], [1791, 1791], [1808, 1855], [1869, 1969], [1994, 2026], [2036, 2037], [2042, 2042], [2048, 2071], [2074, 2092], [2112, 2136], [2208, 2208], [2210, 2220], [2276, 2281], [2288, 2302], [2304, 2403], [2417, 2423], [2425, 2431], [2433, 2435], [2437, 2444], [2447, 2448], [2451, 2472], [2474, 2480], [2482, 2482], [2486, 2489], [2492, 2500], [2503, 2504], [2507, 2510], [2519, 2519], [2524, 2525], [2527, 2531], [2544, 2545], [2561, 2563], [2565, 2570], [2575, 2576], [2579, 2600], [2602, 2608], [2610, 2611], [2613, 2614], [2616, 2617], [2622, 2626], [2631, 2632], [2635, 2636], [2641, 2641], [2649, 2652], [2654, 2654], [2672, 2677], [2689, 2691], [2693, 2701], [2703, 2705], [2707, 2728], [2730, 2736], [2738, 2739], [2741, 2745], [2749, 2757], [2759, 2761], [2763, 2764], [2768, 2768], [2784, 2787], [2817, 2819], [2821, 2828], [2831, 2832], [2835, 2856], [2858, 2864], [2866, 2867], [2869, 2873], [2876, 2884], [2887, 2888], [2891, 2893], [2902, 2903], [2908, 2909], [2911, 2915], [2929, 2929], [2946, 2947], [2949, 2954], [2958, 2960], [2962, 2965], [2969, 2970], [2972, 2972], [2974, 2975], [2979, 2980], [2984, 2986], [2990, 3001], [3006, 3010], [3014, 3016], [3018, 3021], [3024, 3024], [3031, 3031], [3073, 3075], [3077, 3084], [3086, 3088], [3090, 3112], [3114, 3123], [3125, 3129], [3133, 3140], [3142, 3144], [3146, 3148], [3157, 3158], [3160, 3161], [3168, 3171], [3202, 3203], [3205, 3212], [3214, 3216], [3218, 3240], [3242, 3251], [3253, 3257], [3260, 3268], [3270, 3272], [3274, 3277], [3285, 3286], [3294, 3294], [3296, 3299], [3313, 3314], [3330, 3331], [3333, 3340], [3342, 3344], [3346, 3386], [3389, 3396], [3398, 3400], [3402, 3406], [3415, 3415], [3424, 3427], [3450, 3455], [3458, 3459], [3461, 3478], [3482, 3505], [3507, 3515], [3517, 3517], [3520, 3526], [3535, 3540], [3542, 3542], [3544, 3551], [3570, 3571], [3585, 3642], [3648, 3654], [3661, 3661], [3713, 3714], [3716, 3716], [3719, 3720], [3722, 3722], [3725, 3725], [3732, 3735], [3737, 3743], [3745, 3747], [3749, 3749], [3751, 3751], [3754, 3755], [3757, 3769], [3771, 3773], [3776, 3780], [3782, 3782], [3789, 3789], [3804, 3807], [3840, 3840], [3851, 3851], [3904, 3911], [3913, 3948], [3953, 3969], [3976, 3991], [3993, 4028], [4096, 4159], [4176, 4239], [4250, 4253], [4256, 4293], [4295, 4295], [4301, 4301], [4304, 4346], [4348, 4680], [4682, 4685], [4688, 4694], [4696, 4696], [4698, 4701], [4704, 4744], [4746, 4749], [4752, 4784], [4786, 4789], [4792, 4798], [4800, 4800], [4802, 4805], [4808, 4822], [4824, 4880], [4882, 4885], [4888, 4954], [4959, 4959], [4992, 5007], [5024, 5108], [5121, 5740], [5743, 5759], [5761, 5786], [5792, 5866], [5870, 5872], [5888, 5900], [5902, 5907], [5920, 5939], [5952, 5971], [5984, 5996], [5998, 6000], [6002, 6003], [6016, 6099], [6103, 6103], [6108, 6109], [6176, 6263], [6272, 6314], [6320, 6389], [6400, 6428], [6432, 6443], [6448, 6456], [6480, 6509], [6512, 6516], [6528, 6571], [6576, 6601], [6656, 6683], [6688, 6750], [6753, 6772], [6823, 6823], [6912, 6963], [6965, 6979], [6981, 6987], [7040, 7087], [7098, 7155], [7168, 7221], [7245, 7247], [7258, 7293], [7401, 7404], [7406, 7411], [7413, 7414], [7424, 7615], [7680, 7957], [7960, 7965], [7968, 8005], [8008, 8013], [8016, 8023], [8025, 8025], [8027, 8027], [8029, 8029], [8031, 8061], [8064, 8116], [8118, 8124], [8126, 8126], [8130, 8132], [8134, 8140], [8144, 8147], [8150, 8155], [8160, 8172], [8178, 8180], [8182, 8188], [8305, 8305], [8319, 8319], [8336, 8348], [8450, 8450], [8455, 8455], [8458, 8467], [8469, 8469], [8473, 8477], [8484, 8484], [8486, 8486], [8488, 8488], [8490, 8493], [8495, 8505], [8508, 8511], [8517, 8521], [8526, 8526], [8544, 8584], [9398, 9449], [11264, 11310], [11312, 11358], [11360, 11492], [11499, 11502], [11506, 11507], [11520, 11557], [11559, 11559], [11565, 11565], [11568, 11623], [11631, 11631], [11648, 11670], [11680, 11686], [11688, 11694], [11696, 11702], [11704, 11710], [11712, 11718], [11720, 11726], [11728, 11734], [11736, 11742], [11744, 11775], [11823, 11823], [12293, 12295], [12321, 12329], [12337, 12341], [12344, 12348], [12353, 12438], [12445, 12447], [12449, 12538], [12540, 12543], [12549, 12589], [12593, 12686], [12704, 12730], [12784, 12799], [13312, 19893], [19968, 40908], [40960, 42124], [42192, 42237], [42240, 42508], [42512, 42527], [42538, 42539], [42560, 42606], [42612, 42619], [42623, 42647], [42655, 42735], [42775, 42783], [42786, 42888], [42891, 42894], [42896, 42899], [42912, 42922], [43000, 43009], [43011, 43013], [43015, 43018], [43020, 43047], [43072, 43123], [43136, 43203], [43250, 43255], [43259, 43259], [43274, 43306], [43312, 43346], [43360, 43388], [43392, 43442], [43444, 43455], [43471, 43471], [43520, 43574], [43584, 43597], [43616, 43638], [43642, 43642], [43648, 43710], [43712, 43712], [43714, 43714], [43739, 43741], [43744, 43759], [43762, 43765], [43777, 43782], [43785, 43790], [43793, 43798], [43808, 43814], [43816, 43822], [43968, 44010], [44032, 55203], [55216, 55238], [55243, 55291], [63744, 64109], [64112, 64217], [64256, 64262], [64275, 64279], [64285, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64433], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65019], [65136, 65140], [65142, 65276], [65313, 65338], [65345, 65370], [65382, 65470], [65474, 65479], [65482, 65487], [65490, 65495], [65498, 65500], [65536, 65547], [65549, 65574], [65576, 65594], [65596, 65597], [65599, 65613], [65616, 65629], [65664, 65786], [65856, 65908], [66176, 66204], [66208, 66256], [66304, 66334], [66352, 66378], [66432, 66461], [66464, 66499], [66504, 66511], [66513, 66517], [66560, 66717], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67840, 67861], [67872, 67897], [67968, 68023], [68030, 68031], [68096, 68099], [68101, 68102], [68108, 68115], [68117, 68119], [68121, 68147], [68192, 68220], [68352, 68405], [68416, 68437], [68448, 68466], [68608, 68680], [69632, 69701], [69762, 69816], [69840, 69864], [69888, 69938], [70016, 70079], [70081, 70084], [71296, 71349], [73728, 74606], [74752, 74850], [77824, 78894], [92160, 92728], [93952, 94020], [94032, 94078], [94099, 94111], [110592, 110593], [119808, 119892], [119894, 119964], [119966, 119967], [119970, 119970], [119973, 119974], [119977, 119980], [119982, 119993], [119995, 119995], [119997, 120003], [120005, 120069], [120071, 120074], [120077, 120084], [120086, 120092], [120094, 120121], [120123, 120126], [120128, 120132], [120134, 120134], [120138, 120144], [120146, 120485], [120488, 120512], [120514, 120538], [120540, 120570], [120572, 120596], [120598, 120628], [120630, 120654], [120656, 120686], [120688, 120712], [120714, 120744], [120746, 120770], [120772, 120779], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [131072, 173782], [173824, 177972], [177984, 178205], [194560, 195101]],\n    LETTERS_DIGITS_AND_DIACRITICS_ASTRAL_RANGE: [[48, 57], [65, 90], [97, 122], [170, 170], [181, 181], [186, 186], [192, 214], [216, 246], [248, 705], [710, 721], [736, 740], [748, 748], [750, 750], [837, 837], [880, 884], [886, 887], [890, 893], [902, 902], [904, 906], [908, 908], [910, 929], [931, 1013], [1015, 1153], [1162, 1319], [1329, 1366], [1369, 1369], [1377, 1415], [1456, 1469], [1471, 1471], [1473, 1474], [1476, 1477], [1479, 1479], [1488, 1514], [1520, 1522], [1552, 1562], [1568, 1623], [1625, 1641], [1646, 1747], [1749, 1756], [1761, 1768], [1773, 1788], [1791, 1791], [1808, 1855], [1869, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2071], [2074, 2092], [2112, 2136], [2208, 2208], [2210, 2220], [2276, 2281], [2288, 2302], [2304, 2403], [2406, 2415], [2417, 2423], [2425, 2431], [2433, 2435], [2437, 2444], [2447, 2448], [2451, 2472], [2474, 2480], [2482, 2482], [2486, 2489], [2492, 2500], [2503, 2504], [2507, 2510], [2519, 2519], [2524, 2525], [2527, 2531], [2534, 2545], [2561, 2563], [2565, 2570], [2575, 2576], [2579, 2600], [2602, 2608], [2610, 2611], [2613, 2614], [2616, 2617], [2622, 2626], [2631, 2632], [2635, 2636], [2641, 2641], [2649, 2652], [2654, 2654], [2662, 2677], [2689, 2691], [2693, 2701], [2703, 2705], [2707, 2728], [2730, 2736], [2738, 2739], [2741, 2745], [2749, 2757], [2759, 2761], [2763, 2764], [2768, 2768], [2784, 2787], [2790, 2799], [2817, 2819], [2821, 2828], [2831, 2832], [2835, 2856], [2858, 2864], [2866, 2867], [2869, 2873], [2876, 2884], [2887, 2888], [2891, 2893], [2902, 2903], [2908, 2909], [2911, 2915], [2918, 2927], [2929, 2929], [2946, 2947], [2949, 2954], [2958, 2960], [2962, 2965], [2969, 2970], [2972, 2972], [2974, 2975], [2979, 2980], [2984, 2986], [2990, 3001], [3006, 3010], [3014, 3016], [3018, 3021], [3024, 3024], [3031, 3031], [3046, 3055], [3073, 3075], [3077, 3084], [3086, 3088], [3090, 3112], [3114, 3123], [3125, 3129], [3133, 3140], [3142, 3144], [3146, 3148], [3157, 3158], [3160, 3161], [3168, 3171], [3174, 3183], [3202, 3203], [3205, 3212], [3214, 3216], [3218, 3240], [3242, 3251], [3253, 3257], [3260, 3268], [3270, 3272], [3274, 3277], [3285, 3286], [3294, 3294], [3296, 3299], [3302, 3311], [3313, 3314], [3330, 3331], [3333, 3340], [3342, 3344], [3346, 3386], [3389, 3396], [3398, 3400], [3402, 3406], [3415, 3415], [3424, 3427], [3430, 3439], [3450, 3455], [3458, 3459], [3461, 3478], [3482, 3505], [3507, 3515], [3517, 3517], [3520, 3526], [3535, 3540], [3542, 3542], [3544, 3551], [3570, 3571], [3585, 3642], [3648, 3654], [3661, 3661], [3664, 3673], [3713, 3714], [3716, 3716], [3719, 3720], [3722, 3722], [3725, 3725], [3732, 3735], [3737, 3743], [3745, 3747], [3749, 3749], [3751, 3751], [3754, 3755], [3757, 3769], [3771, 3773], [3776, 3780], [3782, 3782], [3789, 3789], [3792, 3801], [3804, 3807], [3840, 3840], [3851, 3851], [3872, 3881], [3904, 3911], [3913, 3948], [3953, 3969], [3976, 3991], [3993, 4028], [4096, 4169], [4176, 4253], [4256, 4293], [4295, 4295], [4301, 4301], [4304, 4346], [4348, 4680], [4682, 4685], [4688, 4694], [4696, 4696], [4698, 4701], [4704, 4744], [4746, 4749], [4752, 4784], [4786, 4789], [4792, 4798], [4800, 4800], [4802, 4805], [4808, 4822], [4824, 4880], [4882, 4885], [4888, 4954], [4959, 4959], [4992, 5007], [5024, 5108], [5121, 5740], [5743, 5759], [5761, 5786], [5792, 5866], [5870, 5872], [5888, 5900], [5902, 5907], [5920, 5939], [5952, 5971], [5984, 5996], [5998, 6000], [6002, 6003], [6016, 6099], [6103, 6103], [6108, 6109], [6112, 6121], [6160, 6169], [6176, 6263], [6272, 6314], [6320, 6389], [6400, 6428], [6432, 6443], [6448, 6456], [6470, 6509], [6512, 6516], [6528, 6571], [6576, 6601], [6608, 6617], [6656, 6683], [6688, 6750], [6753, 6772], [6784, 6793], [6800, 6809], [6823, 6823], [6912, 6963], [6965, 6979], [6981, 6987], [6992, 7001], [7040, 7155], [7168, 7221], [7232, 7241], [7245, 7293], [7401, 7404], [7406, 7411], [7413, 7414], [7424, 7615], [7680, 7957], [7960, 7965], [7968, 8005], [8008, 8013], [8016, 8023], [8025, 8025], [8027, 8027], [8029, 8029], [8031, 8061], [8064, 8116], [8118, 8124], [8126, 8126], [8130, 8132], [8134, 8140], [8144, 8147], [8150, 8155], [8160, 8172], [8178, 8180], [8182, 8188], [8305, 8305], [8319, 8319], [8336, 8348], [8450, 8450], [8455, 8455], [8458, 8467], [8469, 8469], [8473, 8477], [8484, 8484], [8486, 8486], [8488, 8488], [8490, 8493], [8495, 8505], [8508, 8511], [8517, 8521], [8526, 8526], [8544, 8584], [9398, 9449], [11264, 11310], [11312, 11358], [11360, 11492], [11499, 11502], [11506, 11507], [11520, 11557], [11559, 11559], [11565, 11565], [11568, 11623], [11631, 11631], [11648, 11670], [11680, 11686], [11688, 11694], [11696, 11702], [11704, 11710], [11712, 11718], [11720, 11726], [11728, 11734], [11736, 11742], [11744, 11775], [11823, 11823], [12293, 12295], [12321, 12329], [12337, 12341], [12344, 12348], [12353, 12438], [12445, 12447], [12449, 12538], [12540, 12543], [12549, 12589], [12593, 12686], [12704, 12730], [12784, 12799], [13312, 19893], [19968, 40908], [40960, 42124], [42192, 42237], [42240, 42508], [42512, 42539], [42560, 42606], [42612, 42619], [42623, 42647], [42655, 42735], [42775, 42783], [42786, 42888], [42891, 42894], [42896, 42899], [42912, 42922], [43000, 43009], [43011, 43013], [43015, 43018], [43020, 43047], [43072, 43123], [43136, 43203], [43216, 43225], [43250, 43255], [43259, 43259], [43264, 43306], [43312, 43346], [43360, 43388], [43392, 43442], [43444, 43455], [43471, 43481], [43520, 43574], [43584, 43597], [43600, 43609], [43616, 43638], [43642, 43642], [43648, 43710], [43712, 43712], [43714, 43714], [43739, 43741], [43744, 43759], [43762, 43765], [43777, 43782], [43785, 43790], [43793, 43798], [43808, 43814], [43816, 43822], [43968, 44010], [44016, 44025], [44032, 55203], [55216, 55238], [55243, 55291], [63744, 64109], [64112, 64217], [64256, 64262], [64275, 64279], [64285, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64433], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65019], [65136, 65140], [65142, 65276], [65296, 65305], [65313, 65338], [65345, 65370], [65382, 65470], [65474, 65479], [65482, 65487], [65490, 65495], [65498, 65500], [65536, 65547], [65549, 65574], [65576, 65594], [65596, 65597], [65599, 65613], [65616, 65629], [65664, 65786], [65856, 65908], [66176, 66204], [66208, 66256], [66304, 66334], [66352, 66378], [66432, 66461], [66464, 66499], [66504, 66511], [66513, 66517], [66560, 66717], [66720, 66729], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67840, 67861], [67872, 67897], [67968, 68023], [68030, 68031], [68096, 68099], [68101, 68102], [68108, 68115], [68117, 68119], [68121, 68147], [68192, 68220], [68352, 68405], [68416, 68437], [68448, 68466], [68608, 68680], [69632, 69701], [69734, 69743], [69762, 69816], [69840, 69864], [69872, 69881], [69888, 69938], [69942, 69951], [70016, 70079], [70081, 70084], [70096, 70105], [71296, 71349], [71360, 71369], [73728, 74606], [74752, 74850], [77824, 78894], [92160, 92728], [93952, 94020], [94032, 94078], [94099, 94111], [110592, 110593], [119808, 119892], [119894, 119964], [119966, 119967], [119970, 119970], [119973, 119974], [119977, 119980], [119982, 119993], [119995, 119995], [119997, 120003], [120005, 120069], [120071, 120074], [120077, 120084], [120086, 120092], [120094, 120121], [120123, 120126], [120128, 120132], [120134, 120134], [120138, 120144], [120146, 120485], [120488, 120512], [120514, 120538], [120540, 120570], [120572, 120596], [120598, 120628], [120630, 120654], [120656, 120686], [120688, 120712], [120714, 120744], [120746, 120770], [120772, 120779], [120782, 120831], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [131072, 173782], [173824, 177972], [177984, 178205], [194560, 195101]],\n    LETTERS: 'A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05b0-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0657\\u0659-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06e1-\\u06e8\\u06ed-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u073f\\u074d-\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0817\\u081a-\\u082c\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08e9\\u08f0-\\u08fe\\u0900-\\u093b\\u093d-\\u094c\\u094e-\\u0950\\u0955-\\u0963\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09cc\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09f0-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4c\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acc\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4c\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcc\\u0bd0\\u0bd7\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4c\\u0c55-\\u0c56\\u0c58-\\u0c59\\u0c60-\\u0c63\\u0c82-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccc\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1-\\u0cf2\\u0d02-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4c\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e46\\u0e4d\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f81\\u0f88-\\u0f97\\u0f99-\\u0fbc\\u1000-\\u1036\\u1038\\u103b-\\u103f\\u1050-\\u1062\\u1065-\\u1068\\u106e-\\u1086\\u108e\\u109c-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17b3\\u17b6-\\u17c8\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u1938\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a61-\\u1a74\\u1aa7\\u1b00-\\u1b33\\u1b35-\\u1b43\\u1b45-\\u1b4b\\u1b80-\\u1ba9\\u1bac-\\u1baf\\u1bba-\\u1be5\\u1be7-\\u1bf1\\u1c00-\\u1c35\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u24b6-\\u24e9\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua674-\\ua67b\\ua67f-\\ua697\\ua69f-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua827\\ua840-\\ua873\\ua880-\\ua8c3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua92a\\ua930-\\ua952\\ua960-\\ua97c\\ua980-\\ua9b2\\ua9b4-\\ua9bf\\ua9cf\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaabe\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf5\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc',\n    IGNORABLE_SYMBOLS: '\u0000-\b\u000e-\u001b-\\x9f\\xad\\u0600-\\u0604\\u06dd\\u070f\\u200b-\\u200c\\u200e-\\u200f\\u202a-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb',\n    DIACRITICS: '\\u093c\\u094d\\u0951-\\u0954\\u09bc\\u09cd\\u0b3c\\u0b4d\\u0bcd\\u0cbc\\u0ccd\\u0d4d\\u0f0b\\u1037\\u1039-\\u103a\\u1063-\\u1064\\u1069-\\u106d\\u1087-\\u108d\\u108f\\u109a-\\u109b\\u17b4-\\u17b5\\u17c9-\\u17d3\\u17dd\\u1baa-\\u1bab\\u1be6\\u1bf2-\\u1bf3',\n    DIGITS: '0-9\\u0660-\\u0669\\u06f0-\\u06f9\\u07c0-\\u07c9\\u0966-\\u096f\\u09e6-\\u09ef\\u0a66-\\u0a6f\\u0ae6-\\u0aef\\u0b66-\\u0b6f\\u0be6-\\u0bef\\u0c66-\\u0c6f\\u0ce6-\\u0cef\\u0d66-\\u0d6f\\u0e50-\\u0e59\\u0ed0-\\u0ed9\\u0f20-\\u0f29\\u1040-\\u1049\\u1090-\\u1099\\u17e0-\\u17e9\\u1810-\\u1819\\u1946-\\u194f\\u19d0-\\u19d9\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1b50-\\u1b59\\u1bb0-\\u1bb9\\u1c40-\\u1c49\\u1c50-\\u1c59\\ua620-\\ua629\\ua8d0-\\ua8d9\\ua900-\\ua909\\ua9d0-\\ua9d9\\uaa50-\\uaa59\\uabf0-\\uabf9\\uff10-\\uff19',\n    LETTERS_AND_DIACRITICS: 'A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05b0-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0657\\u0659-\\u065f\\u066e-\\u06d3\\u06d5-\\u06dc\\u06e1-\\u06e8\\u06ed-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710-\\u073f\\u074d-\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0817\\u081a-\\u082c\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08e9\\u08f0-\\u08fe\\u0900-\\u0963\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09f0-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4c\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a70-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acc\\u0ad0\\u0ae0-\\u0ae3\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4c\\u0c55-\\u0c56\\u0c58-\\u0c59\\u0c60-\\u0c63\\u0c82-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0cf1-\\u0cf2\\u0d02-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e46\\u0e4d\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ecd\\u0edc-\\u0edf\\u0f00\\u0f0b\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f81\\u0f88-\\u0f97\\u0f99-\\u0fbc\\u1000-\\u103f\\u1050-\\u108f\\u109a-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u1938\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a61-\\u1a74\\u1aa7\\u1b00-\\u1b33\\u1b35-\\u1b43\\u1b45-\\u1b4b\\u1b80-\\u1baf\\u1bba-\\u1bf3\\u1c00-\\u1c35\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u24b6-\\u24e9\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua674-\\ua67b\\ua67f-\\ua697\\ua69f-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua827\\ua840-\\ua873\\ua880-\\ua8c3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua92a\\ua930-\\ua952\\ua960-\\ua97c\\ua980-\\ua9b2\\ua9b4-\\ua9bf\\ua9cf\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaabe\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf5\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc',\n    LETTERS_DIGITS_AND_DIACRITICS: '0-9A-Za-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0345\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05b0-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0610-\\u061a\\u0620-\\u0657\\u0659-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06e1-\\u06e8\\u06ed-\\u06fc\\u06ff\\u0710-\\u073f\\u074d-\\u07b1\\u07c0-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0817\\u081a-\\u082c\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u08e4-\\u08e9\\u08f0-\\u08fe\\u0900-\\u0963\\u0966-\\u096f\\u0971-\\u0977\\u0979-\\u097f\\u0981-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4c\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acc\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4c\\u0c55-\\u0c56\\u0c58-\\u0c59\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c82-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d02-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d57\\u0d60-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e46\\u0e4d\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f0b\\u0f20-\\u0f29\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f81\\u0f88-\\u0f97\\u0f99-\\u0fbc\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135f\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1713\\u1720-\\u1733\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1920-\\u192b\\u1930-\\u1938\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a61-\\u1a74\\u1a80-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1b00-\\u1b33\\u1b35-\\u1b43\\u1b45-\\u1b4b\\u1b50-\\u1b59\\u1b80-\\u1bf3\\u1c00-\\u1c35\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u24b6-\\u24e9\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66e\\ua674-\\ua67b\\ua67f-\\ua697\\ua69f-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua827\\ua840-\\ua873\\ua880-\\ua8c3\\ua8d0-\\ua8d9\\ua8f2-\\ua8f7\\ua8fb\\ua900-\\ua92a\\ua930-\\ua952\\ua960-\\ua97c\\ua980-\\ua9b2\\ua9b4-\\ua9bf\\ua9cf-\\ua9d9\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaabe\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf5\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabea\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc',\n    CODE_POINT_LIMIT: [0, 1114111]\n};\n\n\n//# sourceURL=webpack:///./node_modules/regexp-i18n/dist/Constants.js?");

/***/ }),

/***/ "./node_modules/regexp-i18n/dist/Range.js":
/*!************************************************!*\
  !*** ./node_modules/regexp-i18n/dist/Range.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Range.ts\n * Author: Sergei Dryganets\n * Copyright: Microsoft 2018\n *\n * Class provide an abstraction for an integer range.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\nvar Range = /** @class */ (function () {\n    /**\n     *\n     * @param _limits inclusive limits. All numbers outside of it are nor in nor out of the range\n     * @param _range range inside of the limits. All ranges are inclusive.\n     */\n    function Range(_limits, _range, _inverted) {\n        if (_inverted === void 0) { _inverted = false; }\n        this._limits = _limits;\n        this._range = _range;\n        this._inverted = _inverted;\n        // blank\n    }\n    Range.prototype.in = function (val) {\n        if (!this._checkLimits(val)) {\n            return false;\n        }\n        else {\n            var result = false;\n            var index = _.sortedIndexBy(this._range, [val, val], function (item) { return item[1]; });\n            if (index !== this._range.length) {\n                var range = this._range[index];\n                result = _.inRange(val, range[0], range[1] + 1);\n            }\n            return this._inverted ? !result : result;\n        }\n    };\n    Range.prototype.out = function (val) {\n        return !this.in(val);\n    };\n    Range.prototype.invert = function () {\n        return new Range(this._limits, this._range, !this._inverted);\n    };\n    Range.prototype._checkLimits = function (val) {\n        return _.inRange(val, this._limits[0], this._limits[1] + 1);\n    };\n    return Range;\n}());\nexports.Range = Range;\n\n\n//# sourceURL=webpack:///./node_modules/regexp-i18n/dist/Range.js?");

/***/ }),

/***/ "./node_modules/regexp-i18n/dist/RegExpI18n.js":
/*!*****************************************************!*\
  !*** ./node_modules/regexp-i18n/dist/RegExpI18n.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n* RegExpI18n.ts\n*\n* Copyright (c) Microsoft Corporation 2018. All rights reserved.\n* Licensed under the MIT license\n*\n* I18N aware, reusable helper functions and constants for work with regular expressions and strings.\n*/\nvar Constants_1 = __webpack_require__(/*! ./Constants */ \"./node_modules/regexp-i18n/dist/Constants.js\");\nvar Range_1 = __webpack_require__(/*! ./Range */ \"./node_modules/regexp-i18n/dist/Range.js\");\nvar nativeUSupported = true;\ntry {\n    // tslint:disable-next-line:no-unused-expression\n    new RegExp('', 'u');\n}\ncatch (_a) {\n    nativeUSupported = false;\n}\nvar regexpCache = {};\nexports.Constants = {\n    LETTERS: nativeUSupported ? Constants_1.default.LETTERS_ASTRAL : Constants_1.default.LETTERS,\n    LETTERS_AND_DIACRITICS: nativeUSupported ? Constants_1.default.LETTERS_AND_DIACRITICS_ASTRAL : Constants_1.default.LETTERS_AND_DIACRITICS,\n    LETTERS_DIGITS_AND_DIACRITICS: nativeUSupported ? Constants_1.default.LETTERS_DIGITS_AND_DIACRITICS_ASTRAL : Constants_1.default.LETTERS_DIGITS_AND_DIACRITICS,\n    DIACRITICS: nativeUSupported ? Constants_1.default.DIACRITICS_ASTRAL : Constants_1.default.DIACRITICS,\n    DIGITS: nativeUSupported ? Constants_1.default.DIGITS_ASTRAL : Constants_1.default.DIGITS,\n    IGNORABLE_SYMBOLS: nativeUSupported ? Constants_1.default.IGNORABLE_SYMBOLS_ASTRAL : Constants_1.default.IGNORABLE_SYMBOLS,\n};\nexports.Ranges = {\n    LETTERS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.LETTERS_ASTRAL_RANGE),\n    LETTERS_AND_DIACRITICS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.LETTERS_AND_DIACRITICS_ASTRAL_RANGE),\n    LETTERS_DIGITS_AND_DIACRITICS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.LETTERS_DIGITS_AND_DIACRITICS_ASTRAL_RANGE),\n    DIACRITICS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.DIACRITICS_ASTRAL_RANGE),\n    DIGITS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.DIGITS_ASTRAL_RANGE),\n    IGNORABLE_SYMBOLS: new Range_1.Range(Constants_1.default.CODE_POINT_LIMIT, Constants_1.default.IGNORABLE_SYMBOLS_ASTRAL_RANGE),\n};\nexports.Patterns = {\n    // Strict letter pattern. Won't match outstanding diacritics\n    MATCH_LETTER: '[' + exports.Constants.LETTERS + ']' + '[' + exports.Constants.DIACRITICS + ']?',\n    MATCH_IGNORABLE_SYMBOLS: '[' + exports.Constants.IGNORABLE_SYMBOLS + ']',\n};\nfunction createRegExp(pattern, flags) {\n    var newFlags = flags ? flags : '';\n    if (nativeUSupported) {\n        if (newFlags.indexOf('u') === -1) {\n            newFlags += 'u';\n        }\n    }\n    return new RegExp(pattern, newFlags);\n}\nexports.createRegExp = createRegExp;\nfunction replaceNotMatching(pattern, replaceValue, text) {\n    var record = regexpCache[pattern];\n    if (!record) {\n        record = {\n            matchRegexp: createRegExp(pattern + '|.', 'g'),\n            validator: createRegExp(pattern)\n        };\n        regexpCache[pattern] = record;\n    }\n    return text.replace(record.matchRegexp, function (ch) {\n        return record.validator.test(ch) ? ch : replaceValue;\n    });\n}\nexports.replaceNotMatching = replaceNotMatching;\nvar MIN_SUPPLEMENTARY_CODE_POINT = 0x010000;\n/**\n * Trims the text from all codepoints out of given range.\n *\n * @param text\n * @param range\n */\nfunction trim(text, range) {\n    var firstOutOfRange = -1;\n    var lastOutOfRange = -1;\n    for (var offset = 0; offset < text.length;) {\n        var codePoint = text.charCodeAt(offset);\n        var outOfRange = range.out(codePoint);\n        var charCount = codePoint >= MIN_SUPPLEMENTARY_CODE_POINT ? 2 : 1;\n        if (firstOutOfRange === -1 && outOfRange) {\n            firstOutOfRange = offset;\n        }\n        if (outOfRange) {\n            lastOutOfRange = offset + charCount;\n        }\n        offset += charCount;\n    }\n    if (firstOutOfRange === -1 || lastOutOfRange === -1) {\n        return '';\n    }\n    else {\n        return text.substring(firstOutOfRange, lastOutOfRange);\n    }\n}\nexports.trim = trim;\n\n\n//# sourceURL=webpack:///./node_modules/regexp-i18n/dist/RegExpI18n.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack:///./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/FullTextSearchHelpers.ts":
/*!**************************************!*\
  !*** ./src/FullTextSearchHelpers.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n* FullTextSearchHelpers.ts\r\n* Author: David de Regt\r\n* Copyright: Microsoft 2017\r\n*\r\n* Reusable helper classes and functions for supporting Full Text Search.\r\n*/\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spread = (this && this.__spread) || function () {\r\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nvar regexp_i18n_1 = __webpack_require__(/*! regexp-i18n */ \"./node_modules/regexp-i18n/dist/RegExpI18n.js\");\r\nvar NoSqlProvider_1 = __webpack_require__(/*! ./NoSqlProvider */ \"./src/NoSqlProvider.ts\");\r\nvar NoSqlProviderUtils_1 = __webpack_require__(/*! ./NoSqlProviderUtils */ \"./src/NoSqlProviderUtils.ts\");\r\nvar _whitespaceRegexMatch = /\\S+/g;\r\n// Range which excludes all numbers and digits\r\nvar stripSpecialRange = regexp_i18n_1.Ranges.LETTERS_DIGITS_AND_DIACRITICS.invert();\r\nfunction sqlCompat(value) {\r\n    return regexp_i18n_1.trim(value, stripSpecialRange);\r\n}\r\nfunction breakAndNormalizeSearchPhrase(phrase) {\r\n    // Deburr and tolower before using words since words breaks on CaseChanges.\r\n    var wordInPhrase = lodash_1.words(lodash_1.deburr(phrase).toLowerCase(), _whitespaceRegexMatch);\r\n    // map(mapKeys is faster than uniq since it's just a pile of strings.\r\n    var uniqueWordas = lodash_1.map(lodash_1.mapKeys(wordInPhrase), function (_value, key) { return sqlCompat(key); });\r\n    return lodash_1.filter(uniqueWordas, function (word) { return !!lodash_1.trim(word); });\r\n}\r\nexports.breakAndNormalizeSearchPhrase = breakAndNormalizeSearchPhrase;\r\nfunction getFullTextIndexWordsForItem(keyPath, item) {\r\n    var rawString = NoSqlProviderUtils_1.getValueForSingleKeypath(item, keyPath);\r\n    return breakAndNormalizeSearchPhrase(rawString);\r\n}\r\nexports.getFullTextIndexWordsForItem = getFullTextIndexWordsForItem;\r\nvar DbIndexFTSFromRangeQueries = /** @class */ (function () {\r\n    function DbIndexFTSFromRangeQueries(_indexSchema, _primaryKeyPath) {\r\n        this._indexSchema = _indexSchema;\r\n        this._primaryKeyPath = _primaryKeyPath;\r\n        this._keyPath = this._indexSchema ? this._indexSchema.keyPath : this._primaryKeyPath;\r\n    }\r\n    DbIndexFTSFromRangeQueries.prototype.fullTextSearch = function (searchPhrase, resolution, limit) {\r\n        var _this = this;\r\n        if (resolution === void 0) { resolution = NoSqlProvider_1.FullTextTermResolution.And; }\r\n        if (!this._indexSchema || !this._indexSchema.fullText) {\r\n            return Promise.reject('fullTextSearch performed against non-fullText index!');\r\n        }\r\n        var terms = breakAndNormalizeSearchPhrase(searchPhrase);\r\n        if (terms.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        var promises = lodash_1.map(terms, function (term) {\r\n            var upperEnd = term.substr(0, term.length - 1) + String.fromCharCode(term.charCodeAt(term.length - 1) + 1);\r\n            return _this.getRange(term, upperEnd, false, true, false, limit);\r\n        });\r\n        return Promise.all(promises).then(function (results) {\r\n            var uniquers = lodash_1.attempt(function () {\r\n                return lodash_1.map(results, function (resultSet) { return lodash_1.keyBy(resultSet, function (item) {\r\n                    return NoSqlProviderUtils_1.getSerializedKeyForKeypath(item, _this._primaryKeyPath);\r\n                }); });\r\n            });\r\n            if (lodash_1.isError(uniquers)) {\r\n                return Promise.reject(uniquers);\r\n            }\r\n            if (resolution === NoSqlProvider_1.FullTextTermResolution.Or) {\r\n                var data = lodash_1.values(lodash_1.assign.apply(void 0, __spread([{}], uniquers)));\r\n                if (limit) {\r\n                    return lodash_1.take(data, limit);\r\n                }\r\n                return Promise.resolve(data);\r\n            }\r\n            if (resolution === NoSqlProvider_1.FullTextTermResolution.And) {\r\n                var _a = __read(uniquers), first = _a[0], others_1 = _a.slice(1);\r\n                var dic = lodash_1.pickBy(first, function (_value, key) { return lodash_1.every(others_1, function (set) { return key in set; }); });\r\n                var data = lodash_1.values(dic);\r\n                if (limit) {\r\n                    return lodash_1.take(data, limit);\r\n                }\r\n                return Promise.resolve(data);\r\n            }\r\n            return Promise.reject('Undefined full text term resolution type');\r\n        });\r\n    };\r\n    return DbIndexFTSFromRangeQueries;\r\n}());\r\nexports.DbIndexFTSFromRangeQueries = DbIndexFTSFromRangeQueries;\r\n\n\n//# sourceURL=webpack:///./src/FullTextSearchHelpers.ts?");

/***/ }),

/***/ "./src/InMemoryProvider.ts":
/*!*********************************!*\
  !*** ./src/InMemoryProvider.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * InMemoryProvider.ts\r\n * Author: David de Regt\r\n * Copyright: Microsoft 2015\r\n *\r\n * NoSqlProvider provider setup for a non-persisted in-memory database backing provider.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __values = (this && this.__values) || function (o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nvar FullTextSearchHelpers_1 = __webpack_require__(/*! ./FullTextSearchHelpers */ \"./src/FullTextSearchHelpers.ts\");\r\nvar NoSqlProvider_1 = __webpack_require__(/*! ./NoSqlProvider */ \"./src/NoSqlProvider.ts\");\r\nvar core_1 = __webpack_require__(/*! @collectable/core */ \"./node_modules/@collectable/core/lib/es2015/index.js\");\r\nvar NoSqlProviderUtils_1 = __webpack_require__(/*! ./NoSqlProviderUtils */ \"./src/NoSqlProviderUtils.ts\");\r\nvar TransactionLockHelper_1 = __webpack_require__(/*! ./TransactionLockHelper */ \"./src/TransactionLockHelper.ts\");\r\nvar red_black_tree_1 = __webpack_require__(/*! @collectable/red-black-tree */ \"./node_modules/@collectable/red-black-tree/lib/es2015/index.js\");\r\n// Very simple in-memory dbprov ider for handling IE inprivate windows (and unit tests, maybe?)\r\nvar InMemoryProvider = /** @class */ (function (_super) {\r\n    __extends(InMemoryProvider, _super);\r\n    function InMemoryProvider() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._stores = new Map();\r\n        return _this;\r\n    }\r\n    InMemoryProvider.prototype.open = function (dbName, schema, wipeIfExists, verbose) {\r\n        var _this = this;\r\n        _super.prototype.open.call(this, dbName, schema, wipeIfExists, verbose);\r\n        lodash_1.each(this._schema.stores, function (storeSchema) {\r\n            _this._stores.set(storeSchema.name, { schema: storeSchema, data: new Map(), indices: new Map() });\r\n        });\r\n        this._lockHelper = new TransactionLockHelper_1.TransactionLockHelper(schema, true);\r\n        return Promise.resolve(void 0);\r\n    };\r\n    InMemoryProvider.prototype._deleteDatabaseInternal = function () {\r\n        return Promise.resolve();\r\n    };\r\n    InMemoryProvider.prototype.openTransaction = function (storeNames, writeNeeded) {\r\n        var _this = this;\r\n        return this._lockHelper.openTransaction(storeNames, writeNeeded).then(function (token) {\r\n            return new InMemoryTransaction(_this, _this._lockHelper, token, writeNeeded);\r\n        });\r\n    };\r\n    InMemoryProvider.prototype.close = function () {\r\n        var _this = this;\r\n        return this._lockHelper.closeWhenPossible().then(function () {\r\n            _this._stores = new Map();\r\n        });\r\n    };\r\n    InMemoryProvider.prototype.internal_getStore = function (name) {\r\n        return this._stores.get(name);\r\n    };\r\n    return InMemoryProvider;\r\n}(NoSqlProvider_1.DbProvider));\r\nexports.InMemoryProvider = InMemoryProvider;\r\n// Notes: Doesn't limit the stores it can fetch to those in the stores it was \"created\" with, nor does it handle read-only transactions\r\nvar InMemoryTransaction = /** @class */ (function () {\r\n    function InMemoryTransaction(_prov, _lockHelper, _transToken, writeNeeded) {\r\n        var _this = this;\r\n        this._prov = _prov;\r\n        this._lockHelper = _lockHelper;\r\n        this._transToken = _transToken;\r\n        this._stores = new Map();\r\n        // Close the transaction on the next tick.  By definition, anything is completed synchronously here, so after an event tick\r\n        // goes by, there can't have been anything pending.\r\n        if (writeNeeded) {\r\n            this._openTimer = setTimeout(function () {\r\n                _this._openTimer = undefined;\r\n                _this._commitTransaction();\r\n                _this._lockHelper.transactionComplete(_this._transToken);\r\n            }, 0);\r\n        }\r\n        else {\r\n            this._openTimer = undefined;\r\n            this._commitTransaction();\r\n            this._lockHelper.transactionComplete(this._transToken);\r\n        }\r\n    }\r\n    InMemoryTransaction.prototype._commitTransaction = function () {\r\n        this._stores.forEach(function (store) {\r\n            store.internal_commitPendingData();\r\n        });\r\n    };\r\n    InMemoryTransaction.prototype.getCompletionPromise = function () {\r\n        return this._transToken.completionPromise;\r\n    };\r\n    InMemoryTransaction.prototype.abort = function () {\r\n        this._stores.forEach(function (store) {\r\n            store.internal_rollbackPendingData();\r\n        });\r\n        if (this._openTimer) {\r\n            clearTimeout(this._openTimer);\r\n            this._openTimer = undefined;\r\n        }\r\n        this._lockHelper.transactionFailed(this._transToken, 'InMemoryTransaction Aborted');\r\n    };\r\n    InMemoryTransaction.prototype.markCompleted = function () {\r\n        // noop\r\n    };\r\n    InMemoryTransaction.prototype.getStore = function (storeName) {\r\n        if (!lodash_1.includes(NoSqlProviderUtils_1.arrayify(this._transToken.storeNames), storeName)) {\r\n            throw new Error('Store not found in transaction-scoped store list: ' + storeName);\r\n        }\r\n        if (this._stores.has(storeName)) {\r\n            return this._stores.get(storeName);\r\n        }\r\n        var store = this._prov.internal_getStore(storeName);\r\n        if (!store) {\r\n            throw new Error('Store not found: ' + storeName);\r\n        }\r\n        var ims = new InMemoryStore(this, store);\r\n        this._stores.set(storeName, ims);\r\n        return ims;\r\n    };\r\n    InMemoryTransaction.prototype.internal_isOpen = function () {\r\n        return !!this._openTimer;\r\n    };\r\n    return InMemoryTransaction;\r\n}());\r\nvar InMemoryStore = /** @class */ (function () {\r\n    function InMemoryStore(_trans, storeInfo) {\r\n        this._trans = _trans;\r\n        this._storeSchema = storeInfo.schema;\r\n        this._committedStoreData = new Map(storeInfo.data);\r\n        this._indices = storeInfo.indices;\r\n        this._mergedData = storeInfo.data;\r\n    }\r\n    InMemoryStore.prototype.internal_commitPendingData = function () {\r\n        this._committedStoreData = new Map(this._mergedData);\r\n        // Indices were already updated, theres no need to update them now. \r\n    };\r\n    InMemoryStore.prototype.internal_rollbackPendingData = function () {\r\n        var _this = this;\r\n        this._mergedData.clear();\r\n        this._committedStoreData.forEach(function (val, key) {\r\n            _this._mergedData.set(key, val);\r\n        });\r\n        // Recreate all indexes on a roll back.\r\n        lodash_1.each(this._storeSchema.indexes, function (index) {\r\n            _this._indices.set(index.name, new InMemoryIndex(_this._mergedData, index, _this._storeSchema.primaryKeyPath));\r\n        });\r\n    };\r\n    InMemoryStore.prototype.get = function (key) {\r\n        var _this = this;\r\n        var joinedKey = lodash_1.attempt(function () {\r\n            return NoSqlProviderUtils_1.serializeKeyToString(key, _this._storeSchema.primaryKeyPath);\r\n        });\r\n        if (lodash_1.isError(joinedKey)) {\r\n            return Promise.reject(joinedKey);\r\n        }\r\n        return Promise.resolve(this._mergedData.get(joinedKey));\r\n    };\r\n    InMemoryStore.prototype.getMultiple = function (keyOrKeys) {\r\n        var _this = this;\r\n        var joinedKeys = lodash_1.attempt(function () {\r\n            return NoSqlProviderUtils_1.formListOfSerializedKeys(keyOrKeys, _this._storeSchema.primaryKeyPath);\r\n        });\r\n        if (lodash_1.isError(joinedKeys)) {\r\n            return Promise.reject(joinedKeys);\r\n        }\r\n        return Promise.resolve(lodash_1.compact(lodash_1.map(joinedKeys, function (key) { return _this._mergedData.get(key); })));\r\n    };\r\n    InMemoryStore.prototype.put = function (itemOrItems) {\r\n        var _this = this;\r\n        if (!this._trans.internal_isOpen()) {\r\n            return Promise.reject('InMemoryTransaction already closed');\r\n        }\r\n        var err = lodash_1.attempt(function () {\r\n            lodash_1.each(NoSqlProviderUtils_1.arrayify(itemOrItems), function (item) {\r\n                var e_1, _a;\r\n                var pk = NoSqlProviderUtils_1.getSerializedKeyForKeypath(item, _this._storeSchema.primaryKeyPath);\r\n                var existingItem = _this._mergedData.get(pk);\r\n                if (existingItem) {\r\n                    _this._removeFromIndices(pk, existingItem);\r\n                }\r\n                _this._mergedData.set(pk, item);\r\n                _this.openPrimaryKey().put(item);\r\n                if (_this._storeSchema.indexes) {\r\n                    try {\r\n                        for (var _b = __values(_this._storeSchema.indexes), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                            var index = _c.value;\r\n                            _this.openIndex(index.name).put(item);\r\n                        }\r\n                    }\r\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                    finally {\r\n                        try {\r\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                        }\r\n                        finally { if (e_1) throw e_1.error; }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        if (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        return Promise.resolve(void 0);\r\n    };\r\n    InMemoryStore.prototype.remove = function (keyOrKeys) {\r\n        var _this = this;\r\n        if (!this._trans.internal_isOpen()) {\r\n            return Promise.reject('InMemoryTransaction already closed');\r\n        }\r\n        var joinedKeys = lodash_1.attempt(function () {\r\n            return NoSqlProviderUtils_1.formListOfSerializedKeys(keyOrKeys, _this._storeSchema.primaryKeyPath);\r\n        });\r\n        if (lodash_1.isError(joinedKeys)) {\r\n            return Promise.reject(joinedKeys);\r\n        }\r\n        return this._removeInternal(joinedKeys);\r\n    };\r\n    InMemoryStore.prototype.removeRange = function (indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        if (!this._trans.internal_isOpen()) {\r\n            return Promise.reject('InMemoryTransaction already closed');\r\n        }\r\n        var index = lodash_1.attempt(function () {\r\n            return indexName ? _this.openIndex(indexName) : _this.openPrimaryKey();\r\n        });\r\n        if (!index || lodash_1.isError(index)) {\r\n            return Promise.reject('Index \"' + indexName + '\" not found');\r\n        }\r\n        return index.getKeysForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive).then(function (keys) {\r\n            return _this._removeInternal(keys);\r\n        });\r\n    };\r\n    InMemoryStore.prototype.openPrimaryKey = function () {\r\n        if (!this._indices.get('pk')) {\r\n            this._indices.set('pk', new InMemoryIndex(this._mergedData, undefined, this._storeSchema.primaryKeyPath));\r\n        }\r\n        var index = this._indices.get('pk');\r\n        index.internal_SetTransaction(this._trans);\r\n        return index;\r\n    };\r\n    InMemoryStore.prototype.openIndex = function (indexName) {\r\n        var indexSchema = lodash_1.find(this._storeSchema.indexes, function (idx) { return idx.name === indexName; });\r\n        if (!indexSchema) {\r\n            throw new Error('Index not found: ' + indexName);\r\n        }\r\n        if (!this._indices.has(indexSchema.name)) {\r\n            this._indices.set(indexSchema.name, new InMemoryIndex(this._mergedData, indexSchema, this._storeSchema.primaryKeyPath));\r\n        }\r\n        var index = this._indices.get(indexSchema.name);\r\n        index.internal_SetTransaction(this._trans);\r\n        return index;\r\n    };\r\n    InMemoryStore.prototype.clearAllData = function () {\r\n        var _this = this;\r\n        if (!this._trans.internal_isOpen()) {\r\n            return Promise.reject('InMemoryTransaction already closed');\r\n        }\r\n        this._mergedData = new Map();\r\n        lodash_1.each(this._storeSchema.indexes, function (index) {\r\n            _this._indices.set(index.name, new InMemoryIndex(_this._mergedData, index, _this._storeSchema.primaryKeyPath));\r\n        });\r\n        return Promise.resolve(void 0);\r\n    };\r\n    InMemoryStore.prototype._removeInternal = function (keys) {\r\n        var _this = this;\r\n        if (!this._trans.internal_isOpen()) {\r\n            return Promise.reject('InMemoryTransaction already closed');\r\n        }\r\n        lodash_1.each(keys, function (key) {\r\n            var existingItem = _this._mergedData.get(key);\r\n            _this._mergedData.delete(key);\r\n            if (existingItem) {\r\n                _this._removeFromIndices(key, existingItem);\r\n            }\r\n        });\r\n        return Promise.resolve(void 0);\r\n    };\r\n    InMemoryStore.prototype._removeFromIndices = function (key, item) {\r\n        var _this = this;\r\n        this.openPrimaryKey().remove(key);\r\n        lodash_1.each(this._storeSchema.indexes, function (index) {\r\n            var ind = _this.openIndex(index.name);\r\n            var keys = ind.internal_getKeysFromItem(item);\r\n            lodash_1.each(keys, function (key) { return ind.remove(key); });\r\n        });\r\n    };\r\n    return InMemoryStore;\r\n}());\r\n// Note: Currently maintains nothing interesting -- rebuilds the results every time from scratch.  Scales like crap.\r\nvar InMemoryIndex = /** @class */ (function (_super) {\r\n    __extends(InMemoryIndex, _super);\r\n    function InMemoryIndex(_mergedData, indexSchema, primaryKeyPath) {\r\n        var _this = _super.call(this, indexSchema, primaryKeyPath) || this;\r\n        _this._rbIndex = red_black_tree_1.empty(core_1.stringCompare, true);\r\n        _this.put(lodash_1.values(_mergedData), true);\r\n        return _this;\r\n    }\r\n    InMemoryIndex.prototype.internal_SetTransaction = function (trans) {\r\n        this._trans = trans;\r\n    };\r\n    InMemoryIndex.prototype.internal_getKeysFromItem = function (item) {\r\n        var _this = this;\r\n        var keys;\r\n        if (this._indexSchema && this._indexSchema.fullText) {\r\n            keys = lodash_1.map(FullTextSearchHelpers_1.getFullTextIndexWordsForItem(this._keyPath, item), function (val) {\r\n                return NoSqlProviderUtils_1.serializeKeyToString(val, _this._keyPath);\r\n            });\r\n        }\r\n        else if (this._indexSchema && this._indexSchema.multiEntry) {\r\n            // Have to extract the multiple entries into this alternate table...\r\n            var valsRaw = NoSqlProviderUtils_1.getValueForSingleKeypath(item, this._keyPath);\r\n            if (valsRaw) {\r\n                keys = lodash_1.map(NoSqlProviderUtils_1.arrayify(valsRaw), function (val) {\r\n                    return NoSqlProviderUtils_1.serializeKeyToString(val, _this._keyPath);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            keys = [NoSqlProviderUtils_1.getSerializedKeyForKeypath(item, this._keyPath)];\r\n        }\r\n        return keys;\r\n    };\r\n    // Warning: This function can throw, make sure to trap.\r\n    InMemoryIndex.prototype.put = function (itemOrItems, skipTransactionOnCreation) {\r\n        var _this = this;\r\n        if (!skipTransactionOnCreation && !this._trans.internal_isOpen()) {\r\n            throw new Error('InMemoryTransaction already closed');\r\n        }\r\n        var items = NoSqlProviderUtils_1.arrayify(itemOrItems);\r\n        // If it's not the PK index, re-pivot the data to be keyed off the key value built from the keypath\r\n        lodash_1.each(items, function (item) {\r\n            // Each item may be non-unique so store as an array of items for each key\r\n            var keys = _this.internal_getKeysFromItem(item);\r\n            lodash_1.each(keys, function (key) {\r\n                if (red_black_tree_1.has(key, _this._rbIndex)) {\r\n                    var existingItems = red_black_tree_1.get(key, _this._rbIndex);\r\n                    existingItems.push(item);\r\n                    red_black_tree_1.set(key, existingItems, _this._rbIndex);\r\n                }\r\n                else {\r\n                    red_black_tree_1.set(key, [item], _this._rbIndex);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    InMemoryIndex.prototype.getMultiple = function (keyOrKeys) {\r\n        var _this = this;\r\n        var e_2, _a;\r\n        var joinedKeys = lodash_1.attempt(function () {\r\n            return NoSqlProviderUtils_1.formListOfSerializedKeys(keyOrKeys, _this._keyPath);\r\n        });\r\n        if (lodash_1.isError(joinedKeys)) {\r\n            return Promise.reject(joinedKeys);\r\n        }\r\n        var values = [];\r\n        try {\r\n            for (var joinedKeys_1 = __values(joinedKeys), joinedKeys_1_1 = joinedKeys_1.next(); !joinedKeys_1_1.done; joinedKeys_1_1 = joinedKeys_1.next()) {\r\n                var key = joinedKeys_1_1.value;\r\n                values.push(red_black_tree_1.get(key, this._rbIndex));\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (joinedKeys_1_1 && !joinedKeys_1_1.done && (_a = joinedKeys_1.return)) _a.call(joinedKeys_1);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return Promise.resolve(lodash_1.compact(lodash_1.flatten(values)));\r\n    };\r\n    InMemoryIndex.prototype.remove = function (key, skipTransactionOnCreation) {\r\n        if (!skipTransactionOnCreation && !this._trans.internal_isOpen()) {\r\n            throw new Error('InMemoryTransaction already closed');\r\n        }\r\n        red_black_tree_1.remove(key, this._rbIndex);\r\n    };\r\n    InMemoryIndex.prototype.getAll = function (reverseOrSortOrder, limit, offset) {\r\n        var e_3, _a;\r\n        limit = limit ? limit : this._rbIndex._size;\r\n        offset = offset ? offset : 0;\r\n        var data = new Array(limit);\r\n        var reverse = (reverseOrSortOrder === true || reverseOrSortOrder === NoSqlProvider_1.QuerySortOrder.Reverse);\r\n        var iterator = red_black_tree_1.iterateFromIndex(reverse, offset, this._rbIndex);\r\n        var i = 0;\r\n        try {\r\n            for (var iterator_1 = __values(iterator), iterator_1_1 = iterator_1.next(); !iterator_1_1.done; iterator_1_1 = iterator_1.next()) {\r\n                var item = iterator_1_1.value;\r\n                data[i] = item.value[0];\r\n                i++;\r\n                if (i >= limit) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (iterator_1_1 && !iterator_1_1.done && (_a = iterator_1.return)) _a.call(iterator_1);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return Promise.resolve(data);\r\n    };\r\n    InMemoryIndex.prototype.getOnly = function (key, reverseOrSortOrder, limit, offset) {\r\n        return this.getRange(key, key, false, false, reverseOrSortOrder, limit, offset);\r\n    };\r\n    InMemoryIndex.prototype.getRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive, reverseOrSortOrder, limit, offset) {\r\n        var _this = this;\r\n        var values = lodash_1.attempt(function () {\r\n            var e_4, _a;\r\n            var reverse = reverseOrSortOrder === true || reverseOrSortOrder === NoSqlProvider_1.QuerySortOrder.Reverse;\r\n            limit = limit ? limit : _this._rbIndex._size;\r\n            offset = offset ? offset : 0;\r\n            var keyLow = NoSqlProviderUtils_1.serializeKeyToString(keyLowRange, _this._keyPath);\r\n            var keyHigh = NoSqlProviderUtils_1.serializeKeyToString(keyHighRange, _this._keyPath);\r\n            var iterator = reverse ? red_black_tree_1.iterateKeysFromLast(_this._rbIndex) : red_black_tree_1.iterateKeysFromFirst(_this._rbIndex);\r\n            var values = [];\r\n            try {\r\n                for (var iterator_2 = __values(iterator), iterator_2_1 = iterator_2.next(); !iterator_2_1.done; iterator_2_1 = iterator_2.next()) {\r\n                    var key = iterator_2_1.value;\r\n                    if ((key > keyLow || (key === keyLow && !lowRangeExclusive)) &&\r\n                        (key < keyHigh || (key === keyHigh && !highRangeExclusive))) {\r\n                        if (offset > 0) {\r\n                            offset--;\r\n                            continue;\r\n                        }\r\n                        if (values.length >= limit) {\r\n                            break;\r\n                        }\r\n                        values = values.concat(red_black_tree_1.get(key, _this._rbIndex));\r\n                    }\r\n                }\r\n            }\r\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n            finally {\r\n                try {\r\n                    if (iterator_2_1 && !iterator_2_1.done && (_a = iterator_2.return)) _a.call(iterator_2);\r\n                }\r\n                finally { if (e_4) throw e_4.error; }\r\n            }\r\n            return values;\r\n        });\r\n        if (lodash_1.isError(values)) {\r\n            return Promise.reject(values);\r\n        }\r\n        return Promise.resolve(values);\r\n    };\r\n    InMemoryIndex.prototype.getKeysForRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        var keys = lodash_1.attempt(function () {\r\n            return _this._getKeysForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n        if (lodash_1.isError(keys)) {\r\n            return Promise.reject(void 0);\r\n        }\r\n        return Promise.resolve(keys);\r\n    };\r\n    // Warning: This function can throw, make sure to trap.\r\n    InMemoryIndex.prototype._getKeysForRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var e_5, _a;\r\n        var keyLow = NoSqlProviderUtils_1.serializeKeyToString(keyLowRange, this._keyPath);\r\n        var keyHigh = NoSqlProviderUtils_1.serializeKeyToString(keyHighRange, this._keyPath);\r\n        var iterator = red_black_tree_1.iterateKeysFromFirst(this._rbIndex);\r\n        var keys = [];\r\n        try {\r\n            for (var iterator_3 = __values(iterator), iterator_3_1 = iterator_3.next(); !iterator_3_1.done; iterator_3_1 = iterator_3.next()) {\r\n                var key = iterator_3_1.value;\r\n                if ((key > keyLow || (key === keyLow && !lowRangeExclusive)) && (key < keyHigh || (key === keyHigh && !highRangeExclusive))) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (iterator_3_1 && !iterator_3_1.done && (_a = iterator_3.return)) _a.call(iterator_3);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return keys;\r\n    };\r\n    InMemoryIndex.prototype.countAll = function () {\r\n        return Promise.resolve(this._rbIndex._size);\r\n    };\r\n    InMemoryIndex.prototype.countOnly = function (key) {\r\n        return this.countRange(key, key, false, false);\r\n    };\r\n    InMemoryIndex.prototype.countRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        var keys = lodash_1.attempt(function () {\r\n            return _this._getKeysForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n        if (lodash_1.isError(keys)) {\r\n            return Promise.reject(keys);\r\n        }\r\n        return Promise.resolve(keys.length);\r\n    };\r\n    return InMemoryIndex;\r\n}(FullTextSearchHelpers_1.DbIndexFTSFromRangeQueries));\r\n\n\n//# sourceURL=webpack:///./src/InMemoryProvider.ts?");

/***/ }),

/***/ "./src/IndexedDbProvider.ts":
/*!**********************************!*\
  !*** ./src/IndexedDbProvider.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * IndexedDbProvider.ts\r\n * Author: David de Regt\r\n * Copyright: Microsoft 2015\r\n *\r\n * NoSqlProvider provider setup for IndexedDB, a web browser storage module.\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nvar FullTextSearchHelpers_1 = __webpack_require__(/*! ./FullTextSearchHelpers */ \"./src/FullTextSearchHelpers.ts\");\r\nvar NoSqlProvider_1 = __webpack_require__(/*! ./NoSqlProvider */ \"./src/NoSqlProvider.ts\");\r\nvar NoSqlProviderUtils_1 = __webpack_require__(/*! ./NoSqlProviderUtils */ \"./src/NoSqlProviderUtils.ts\");\r\nvar TransactionLockHelper_1 = __webpack_require__(/*! ./TransactionLockHelper */ \"./src/TransactionLockHelper.ts\");\r\nvar IndexPrefix = 'nsp_i_';\r\n// The DbProvider implementation for IndexedDB.  This one is fairly straightforward since the library's access patterns pretty\r\n// closely mirror IndexedDB's.  We mostly do a lot of wrapping of the APIs into JQuery promises and have some fancy footwork to\r\n// do semi-automatic schema upgrades.\r\nvar IndexedDbProvider = /** @class */ (function (_super) {\r\n    __extends(IndexedDbProvider, _super);\r\n    // By default, it uses the in-browser indexed db factory, but you can pass in an explicit factory.  Currently only used for unit tests.\r\n    function IndexedDbProvider(explicitDbFactory, explicitDbFactorySupportsCompoundKeys) {\r\n        var _this = _super.call(this) || this;\r\n        if (explicitDbFactory) {\r\n            _this._dbFactory = explicitDbFactory;\r\n            _this._fakeComplicatedKeys = !explicitDbFactorySupportsCompoundKeys;\r\n        }\r\n        else {\r\n            var win = _this.getWindow();\r\n            _this._dbFactory = win._indexedDB || win.indexedDB || win.mozIndexedDB || win.webkitIndexedDB || win.msIndexedDB;\r\n            if (typeof explicitDbFactorySupportsCompoundKeys !== 'undefined') {\r\n                _this._fakeComplicatedKeys = !explicitDbFactorySupportsCompoundKeys;\r\n            }\r\n            else {\r\n                // IE/Edge's IndexedDB implementation doesn't support compound keys, so we have to fake it by implementing them similar to\r\n                // how the WebSqlProvider does, by concatenating the values into another field which then gets its own index.\r\n                _this._fakeComplicatedKeys = NoSqlProviderUtils_1.isIE();\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets global window object - whether operating in worker or UI thread context.\r\n     * Adapted from: https://stackoverflow.com/questions/7931182/reliably-detect-if-the-script-is-executing-in-a-web-worker\r\n     */\r\n    IndexedDbProvider.prototype.getWindow = function () {\r\n        if (typeof window === 'object' && window.document) {\r\n            return window;\r\n        }\r\n        else if (self && self.document === undefined) {\r\n            return self;\r\n        }\r\n        throw new Error('Undefined context');\r\n    };\r\n    IndexedDbProvider.WrapRequest = function (req) {\r\n        return new Promise(function (resolve, reject) {\r\n            req.onsuccess = function ( /*ev*/) {\r\n                resolve(req.result);\r\n            };\r\n            req.onerror = function (ev) {\r\n                reject(ev);\r\n            };\r\n        });\r\n    };\r\n    IndexedDbProvider.prototype.open = function (dbName, schema, wipeIfExists, verbose) {\r\n        var _this = this;\r\n        // Note: DbProvider returns null instead of a promise that needs waiting for.\r\n        _super.prototype.open.call(this, dbName, schema, wipeIfExists, verbose);\r\n        if (!this._dbFactory) {\r\n            // Couldn't even find a supported indexeddb object on the browser...\r\n            return Promise.reject('No support for IndexedDB in this browser');\r\n        }\r\n        if (wipeIfExists) {\r\n            try {\r\n                this._dbFactory.deleteDatabase(dbName);\r\n            }\r\n            catch (e) {\r\n                // Don't care\r\n            }\r\n        }\r\n        this._lockHelper = new TransactionLockHelper_1.TransactionLockHelper(schema, true);\r\n        var dbOpen = this._dbFactory.open(dbName, schema.version);\r\n        var migrationPutters = [];\r\n        dbOpen.onupgradeneeded = function (event) {\r\n            var db = dbOpen.result;\r\n            var target = (event.currentTarget || event.target);\r\n            var trans = target.transaction;\r\n            if (!trans) {\r\n                throw new Error('onupgradeneeded: target is null!');\r\n            }\r\n            if (schema.lastUsableVersion && event.oldVersion < schema.lastUsableVersion) {\r\n                // Clear all stores if it's past the usable version\r\n                console.log('Old version detected (' + event.oldVersion + '), clearing all data');\r\n                lodash_1.each(db.objectStoreNames, function (name) {\r\n                    db.deleteObjectStore(name);\r\n                });\r\n            }\r\n            // Delete dead stores\r\n            lodash_1.each(db.objectStoreNames, function (storeName) {\r\n                if (!lodash_1.some(schema.stores, function (store) { return store.name === storeName; })) {\r\n                    db.deleteObjectStore(storeName);\r\n                }\r\n            });\r\n            // Create all stores\r\n            lodash_1.each(schema.stores, function (storeSchema) {\r\n                var store;\r\n                var storeExistedBefore = lodash_1.includes(db.objectStoreNames, storeSchema.name);\r\n                if (!storeExistedBefore) { // store doesn't exist yet\r\n                    var primaryKeyPath = storeSchema.primaryKeyPath;\r\n                    if (_this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(primaryKeyPath)) {\r\n                        // Going to have to hack the compound primary key index into a column, so here it is.\r\n                        primaryKeyPath = 'nsp_pk';\r\n                    }\r\n                    // Any is to fix a lib.d.ts issue in TS 2.0.3 - it doesn't realize that keypaths can be compound for some reason...\r\n                    store = db.createObjectStore(storeSchema.name, { keyPath: primaryKeyPath });\r\n                }\r\n                else { // store exists, might need to update indexes and migrate the data\r\n                    store = trans.objectStore(storeSchema.name);\r\n                    // Check for any indexes no longer in the schema or have been changed\r\n                    lodash_1.each(store.indexNames, function (indexName) {\r\n                        var index = store.index(indexName);\r\n                        var nuke = false;\r\n                        var indexSchema = lodash_1.find(storeSchema.indexes, function (idx) { return idx.name === indexName; });\r\n                        if (!indexSchema || !lodash_1.isObject(indexSchema)) {\r\n                            nuke = true;\r\n                        }\r\n                        else if (typeof index.keyPath !== typeof indexSchema.keyPath) {\r\n                            nuke = true;\r\n                        }\r\n                        else if (typeof index.keyPath === 'string') {\r\n                            if (index.keyPath !== indexSchema.keyPath) {\r\n                                nuke = true;\r\n                            }\r\n                        }\r\n                        else /* Keypath is array */ if (index.keyPath.length !== indexSchema.keyPath.length) {\r\n                            // Keypath length doesn't match, don't bother doing a comparison of each element\r\n                            nuke = true;\r\n                        }\r\n                        else {\r\n                            for (var i = 0; i < index.keyPath.length; i++) {\r\n                                if (index.keyPath[i] !== indexSchema.keyPath[i]) {\r\n                                    nuke = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (nuke) {\r\n                            store.deleteIndex(indexName);\r\n                        }\r\n                    });\r\n                }\r\n                // IndexedDB deals well with adding new indexes on the fly, so we don't need to force migrate, \r\n                // unless adding multiEntry or fullText index\r\n                var needsMigrate = false;\r\n                // Check any indexes in the schema that need to be created\r\n                lodash_1.each(storeSchema.indexes, function (indexSchema) {\r\n                    if (!lodash_1.includes(store.indexNames, indexSchema.name)) {\r\n                        var keyPath = indexSchema.keyPath;\r\n                        if (_this._fakeComplicatedKeys) {\r\n                            if (indexSchema.multiEntry || indexSchema.fullText) {\r\n                                if (NoSqlProviderUtils_1.isCompoundKeyPath(keyPath)) {\r\n                                    throw new Error('Can\\'t use multiEntry and compound keys');\r\n                                }\r\n                                else {\r\n                                    // Create an object store for the index\r\n                                    var indexStore = db.createObjectStore(storeSchema.name + '_' + indexSchema.name, { autoIncrement: true });\r\n                                    indexStore.createIndex('key', 'key');\r\n                                    indexStore.createIndex('refkey', 'refkey');\r\n                                    if (storeExistedBefore && !indexSchema.doNotBackfill) {\r\n                                        needsMigrate = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (NoSqlProviderUtils_1.isCompoundKeyPath(keyPath)) {\r\n                                // Going to have to hack the compound index into a column, so here it is.\r\n                                store.createIndex(indexSchema.name, IndexPrefix + indexSchema.name, {\r\n                                    unique: indexSchema.unique\r\n                                });\r\n                            }\r\n                            else {\r\n                                store.createIndex(indexSchema.name, keyPath, {\r\n                                    unique: indexSchema.unique\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (indexSchema.fullText) {\r\n                            store.createIndex(indexSchema.name, IndexPrefix + indexSchema.name, {\r\n                                unique: false,\r\n                                multiEntry: true\r\n                            });\r\n                            if (storeExistedBefore && !indexSchema.doNotBackfill) {\r\n                                needsMigrate = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            store.createIndex(indexSchema.name, keyPath, {\r\n                                unique: indexSchema.unique,\r\n                                multiEntry: indexSchema.multiEntry\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n                if (needsMigrate) {\r\n                    // Walk every element in the store and re-put it to fill out the new index.\r\n                    var fakeToken = {\r\n                        storeNames: [storeSchema.name],\r\n                        exclusive: false,\r\n                        completionPromise: new Promise(function (resolve) { return resolve(); })\r\n                    };\r\n                    var iTrans = new IndexedDbTransaction(trans, undefined, fakeToken, schema, _this._fakeComplicatedKeys);\r\n                    var tStore_1 = iTrans.getStore(storeSchema.name);\r\n                    var cursorReq = store.openCursor();\r\n                    var thisIndexPutters_1 = [];\r\n                    migrationPutters.push(IndexedDbIndex.iterateOverCursorRequest(cursorReq, function (cursor) {\r\n                        var err = lodash_1.attempt(function () {\r\n                            var item = removeFullTextMetadataAndReturn(storeSchema, cursor.value);\r\n                            thisIndexPutters_1.push(tStore_1.put(item));\r\n                        });\r\n                        if (err) {\r\n                            thisIndexPutters_1.push(Promise.reject(err));\r\n                        }\r\n                    }).then(function () { return Promise.all(thisIndexPutters_1).then(lodash_1.noop); }));\r\n                }\r\n            });\r\n        };\r\n        var promise = IndexedDbProvider.WrapRequest(dbOpen);\r\n        return promise.then(function (db) {\r\n            return Promise.all(migrationPutters).then(function () {\r\n                _this._db = db;\r\n            });\r\n        }, function (err) {\r\n            if (err && err.type === 'error' && err.target && err.target.error && err.target.error.name === 'VersionError') {\r\n                if (!wipeIfExists) {\r\n                    console.log('Database version too new, Wiping: ' + (err.target.error.message || err.target.error.name));\r\n                    return _this.open(dbName, schema, true, verbose);\r\n                }\r\n            }\r\n            return Promise.reject(err);\r\n        });\r\n    };\r\n    IndexedDbProvider.prototype.close = function () {\r\n        if (!this._db) {\r\n            return Promise.reject('Database already closed');\r\n        }\r\n        this._db.close();\r\n        this._db = undefined;\r\n        return Promise.resolve(void 0);\r\n    };\r\n    IndexedDbProvider.prototype._deleteDatabaseInternal = function () {\r\n        var _this = this;\r\n        var trans = lodash_1.attempt(function () {\r\n            return _this._dbFactory.deleteDatabase(_this._dbName);\r\n        });\r\n        if (lodash_1.isError(trans)) {\r\n            return Promise.reject(trans);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            trans.onsuccess = function () {\r\n                resolve(void 0);\r\n            };\r\n            trans.onerror = function (ev) {\r\n                reject(ev);\r\n            };\r\n        });\r\n    };\r\n    IndexedDbProvider.prototype.openTransaction = function (storeNames, writeNeeded) {\r\n        var _this = this;\r\n        if (!this._db) {\r\n            return Promise.reject('Can\\'t openTransaction, database is closed');\r\n        }\r\n        var intStoreNames = storeNames;\r\n        if (this._fakeComplicatedKeys) {\r\n            // Clone the list becuase we're going to add fake store names to it\r\n            intStoreNames = lodash_1.clone(storeNames);\r\n            // Pull the alternate multientry stores into the transaction as well\r\n            var missingStores_1 = [];\r\n            lodash_1.each(storeNames, function (storeName) {\r\n                var storeSchema = lodash_1.find(_this._schema.stores, function (s) { return s.name === storeName; });\r\n                if (!storeSchema) {\r\n                    missingStores_1.push(storeName);\r\n                    return;\r\n                }\r\n                if (storeSchema.indexes) {\r\n                    lodash_1.each(storeSchema.indexes, function (indexSchema) {\r\n                        if (indexSchema.multiEntry || indexSchema.fullText) {\r\n                            intStoreNames.push(storeSchema.name + '_' + indexSchema.name);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            if (missingStores_1.length > 0) {\r\n                return Promise.reject('Can\\'t find store(s): ' + missingStores_1.join(','));\r\n            }\r\n        }\r\n        return this._lockHelper.openTransaction(storeNames, writeNeeded).then(function (transToken) {\r\n            var trans = lodash_1.attempt(function () {\r\n                return _this._db.transaction(intStoreNames, writeNeeded ? 'readwrite' : 'readonly');\r\n            });\r\n            if (lodash_1.isError(trans)) {\r\n                return Promise.reject(trans);\r\n            }\r\n            return Promise.resolve(new IndexedDbTransaction(trans, _this._lockHelper, transToken, _this._schema, _this._fakeComplicatedKeys));\r\n        });\r\n    };\r\n    return IndexedDbProvider;\r\n}(NoSqlProvider_1.DbProvider));\r\nexports.IndexedDbProvider = IndexedDbProvider;\r\n// DbTransaction implementation for the IndexedDB DbProvider.\r\nvar IndexedDbTransaction = /** @class */ (function () {\r\n    function IndexedDbTransaction(_trans, lockHelper, _transToken, _schema, _fakeComplicatedKeys) {\r\n        var _this = this;\r\n        this._trans = _trans;\r\n        this._transToken = _transToken;\r\n        this._schema = _schema;\r\n        this._fakeComplicatedKeys = _fakeComplicatedKeys;\r\n        this._stores = lodash_1.map(this._transToken.storeNames, function (storeName) { return _this._trans.objectStore(storeName); });\r\n        if (lockHelper) {\r\n            // Chromium seems to have a bug in their indexeddb implementation that lets it start a timeout\r\n            // while the app is in the middle of a commit (it does a two-phase commit).  It can then finish\r\n            // the commit, and later fire the timeout, despite the transaction having been written out already.\r\n            // In this case, it appears that we should be completely fine to ignore the spurious timeout.\r\n            //\r\n            // Applicable Chromium source code here:\r\n            // https://chromium.googlesource.com/chromium/src/+/master/content/browser/indexed_db/indexed_db_transaction.cc\r\n            var history_1 = [];\r\n            this._trans.oncomplete = function () {\r\n                history_1.push('complete');\r\n                lockHelper.transactionComplete(_this._transToken);\r\n            };\r\n            this._trans.onerror = function () {\r\n                history_1.push('error-' + (_this._trans.error ? _this._trans.error.message : ''));\r\n                if (history_1.length > 1) {\r\n                    console.warn('IndexedDbTransaction Errored after Resolution, Swallowing. Error: ' +\r\n                        (_this._trans.error ? _this._trans.error.message : undefined) + ', History: ' + history_1.join(','));\r\n                    return;\r\n                }\r\n                lockHelper.transactionFailed(_this._transToken, 'IndexedDbTransaction OnError: ' +\r\n                    (_this._trans.error ? _this._trans.error.message : undefined) + ', History: ' + history_1.join(','));\r\n            };\r\n            this._trans.onabort = function () {\r\n                history_1.push('abort-' + (_this._trans.error ? _this._trans.error.message : ''));\r\n                if (history_1.length > 1) {\r\n                    console.warn('IndexedDbTransaction Aborted after Resolution, Swallowing. Error: ' +\r\n                        (_this._trans.error ? _this._trans.error.message : undefined) + ', History: ' + history_1.join(','));\r\n                    return;\r\n                }\r\n                lockHelper.transactionFailed(_this._transToken, 'IndexedDbTransaction Aborted, Error: ' +\r\n                    (_this._trans.error ? _this._trans.error.message : undefined) + ', History: ' + history_1.join(','));\r\n            };\r\n        }\r\n    }\r\n    IndexedDbTransaction.prototype.getStore = function (storeName) {\r\n        var _this = this;\r\n        var store = lodash_1.find(this._stores, function (s) { return s.name === storeName; });\r\n        var storeSchema = lodash_1.find(this._schema.stores, function (s) { return s.name === storeName; });\r\n        if (!store || !storeSchema) {\r\n            throw new Error('Store not found: ' + storeName);\r\n        }\r\n        var indexStores = [];\r\n        if (this._fakeComplicatedKeys && storeSchema.indexes) {\r\n            // Pull the alternate multientry stores in as well\r\n            lodash_1.each(storeSchema.indexes, function (indexSchema) {\r\n                if (indexSchema.multiEntry || indexSchema.fullText) {\r\n                    indexStores.push(_this._trans.objectStore(storeSchema.name + '_' + indexSchema.name));\r\n                }\r\n            });\r\n        }\r\n        return new IndexedDbStore(store, indexStores, storeSchema, this._fakeComplicatedKeys);\r\n    };\r\n    IndexedDbTransaction.prototype.getCompletionPromise = function () {\r\n        return this._transToken.completionPromise;\r\n    };\r\n    IndexedDbTransaction.prototype.abort = function () {\r\n        // This will wrap through the onAbort above\r\n        this._trans.abort();\r\n    };\r\n    IndexedDbTransaction.prototype.markCompleted = function () {\r\n        // noop\r\n    };\r\n    return IndexedDbTransaction;\r\n}());\r\nfunction removeFullTextMetadataAndReturn(schema, val) {\r\n    if (val) {\r\n        // We have full text index fields as real fields on the result, so nuke them before returning them to the caller.\r\n        lodash_1.each(schema.indexes, function (index) {\r\n            if (index.fullText) {\r\n                delete val[IndexPrefix + index.name];\r\n            }\r\n        });\r\n    }\r\n    return val;\r\n}\r\n// DbStore implementation for the IndexedDB DbProvider.  Again, fairly closely maps to the standard IndexedDB spec, aside from\r\n// a bunch of hacks to support compound keypaths on IE.\r\nvar IndexedDbStore = /** @class */ (function () {\r\n    function IndexedDbStore(_store, _indexStores, _schema, _fakeComplicatedKeys) {\r\n        this._store = _store;\r\n        this._indexStores = _indexStores;\r\n        this._schema = _schema;\r\n        this._fakeComplicatedKeys = _fakeComplicatedKeys;\r\n        // NOP\r\n    }\r\n    IndexedDbStore.prototype.get = function (key) {\r\n        var _this = this;\r\n        if (this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(this._schema.primaryKeyPath)) {\r\n            var err = lodash_1.attempt(function () {\r\n                key = NoSqlProviderUtils_1.serializeKeyToString(key, _this._schema.primaryKeyPath);\r\n            });\r\n            if (err) {\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        return IndexedDbProvider.WrapRequest(this._store.get(key))\r\n            .then(function (val) { return removeFullTextMetadataAndReturn(_this._schema, val); });\r\n    };\r\n    IndexedDbStore.prototype.getMultiple = function (keyOrKeys) {\r\n        var _this = this;\r\n        var keys = lodash_1.attempt(function () {\r\n            var keys = NoSqlProviderUtils_1.formListOfKeys(keyOrKeys, _this._schema.primaryKeyPath);\r\n            if (_this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(_this._schema.primaryKeyPath)) {\r\n                return lodash_1.map(keys, function (key) { return NoSqlProviderUtils_1.serializeKeyToString(key, _this._schema.primaryKeyPath); });\r\n            }\r\n            return keys;\r\n        });\r\n        if (lodash_1.isError(keys)) {\r\n            return Promise.reject(keys);\r\n        }\r\n        // There isn't a more optimized way to do this with indexeddb, have to get the results one by one\r\n        return Promise.all(lodash_1.map(keys, function (key) {\r\n            return IndexedDbProvider.WrapRequest(_this._store.get(key)).then(function (val) { return removeFullTextMetadataAndReturn(_this._schema, val); });\r\n        }))\r\n            .then(lodash_1.compact);\r\n    };\r\n    IndexedDbStore.prototype.put = function (itemOrItems) {\r\n        var _this = this;\r\n        var items = NoSqlProviderUtils_1.arrayify(itemOrItems);\r\n        var promises = [];\r\n        var err = lodash_1.attempt(function () {\r\n            lodash_1.each(items, function (item) {\r\n                var errToReport;\r\n                var fakedPk = false;\r\n                if (_this._fakeComplicatedKeys) {\r\n                    // Fill out any compound-key indexes\r\n                    if (NoSqlProviderUtils_1.isCompoundKeyPath(_this._schema.primaryKeyPath)) {\r\n                        fakedPk = true;\r\n                        item['nsp_pk'] = NoSqlProviderUtils_1.getSerializedKeyForKeypath(item, _this._schema.primaryKeyPath);\r\n                    }\r\n                    lodash_1.each(_this._schema.indexes, function (index) {\r\n                        if (index.multiEntry || index.fullText) {\r\n                            var indexStore_1 = lodash_1.find(_this._indexStores, function (store) { return store.name === _this._schema.name + '_' + index.name; });\r\n                            var keys_1;\r\n                            if (index.fullText) {\r\n                                keys_1 = FullTextSearchHelpers_1.getFullTextIndexWordsForItem(index.keyPath, item);\r\n                            }\r\n                            else {\r\n                                // Get each value of the multientry and put it into the index store\r\n                                var valsRaw = NoSqlProviderUtils_1.getValueForSingleKeypath(item, index.keyPath);\r\n                                // It might be an array of multiple entries, so just always go with array-based logic\r\n                                keys_1 = NoSqlProviderUtils_1.arrayify(valsRaw);\r\n                            }\r\n                            var refKey_1;\r\n                            var err_1 = lodash_1.attempt(function () {\r\n                                // We're using normal indexeddb tables to store the multientry indexes, so we only need to use the key\r\n                                // serialization if the multientry keys ALSO are compound.\r\n                                if (NoSqlProviderUtils_1.isCompoundKeyPath(index.keyPath)) {\r\n                                    keys_1 = lodash_1.map(keys_1, function (val) { return NoSqlProviderUtils_1.serializeKeyToString(val, index.keyPath); });\r\n                                }\r\n                                // We need to reference the PK of the actual row we're using here, so calculate the actual PK -- if it's\r\n                                // compound, we're already faking complicated keys, so we know to serialize it to a string.  If not, use the\r\n                                // raw value.\r\n                                refKey_1 = NoSqlProviderUtils_1.getKeyForKeypath(item, _this._schema.primaryKeyPath);\r\n                                if (lodash_1.isArray(_this._schema.primaryKeyPath)) {\r\n                                    refKey_1 = NoSqlProviderUtils_1.serializeKeyToString(refKey_1, _this._schema.primaryKeyPath);\r\n                                }\r\n                            });\r\n                            if (err_1) {\r\n                                errToReport = err_1;\r\n                                return false;\r\n                            }\r\n                            // First clear out the old values from the index store for the refkey\r\n                            var cursorReq = indexStore_1.index('refkey').openCursor(IDBKeyRange.only(refKey_1));\r\n                            promises.push(IndexedDbIndex.iterateOverCursorRequest(cursorReq, function (cursor) {\r\n                                cursor['delete']();\r\n                            })\r\n                                .then(function () {\r\n                                // After nuking the existing entries, add the new ones\r\n                                var iputters = lodash_1.map(keys_1, function (key) {\r\n                                    var indexObj = {\r\n                                        key: key,\r\n                                        refkey: refKey_1\r\n                                    };\r\n                                    return IndexedDbProvider.WrapRequest(indexStore_1.put(indexObj));\r\n                                });\r\n                                return Promise.all(iputters);\r\n                            }).then(lodash_1.noop));\r\n                        }\r\n                        else if (NoSqlProviderUtils_1.isCompoundKeyPath(index.keyPath)) {\r\n                            item[IndexPrefix + index.name] = NoSqlProviderUtils_1.getSerializedKeyForKeypath(item, index.keyPath);\r\n                        }\r\n                        return true;\r\n                    });\r\n                }\r\n                else {\r\n                    lodash_1.each(_this._schema.indexes, function (index) {\r\n                        if (index.fullText) {\r\n                            item[IndexPrefix + index.name] =\r\n                                FullTextSearchHelpers_1.getFullTextIndexWordsForItem(index.keyPath, item);\r\n                        }\r\n                    });\r\n                }\r\n                if (!errToReport) {\r\n                    errToReport = lodash_1.attempt(function () {\r\n                        var req = _this._store.put(item);\r\n                        if (fakedPk) {\r\n                            // If we faked the PK and mutated the incoming object, we can nuke that on the way out.  IndexedDB clones the\r\n                            // object synchronously for the put call, so it's already been captured with the nsp_pk field intact.\r\n                            delete item['nsp_pk'];\r\n                        }\r\n                        promises.push(IndexedDbProvider.WrapRequest(req));\r\n                    });\r\n                }\r\n                if (errToReport) {\r\n                    promises.push(Promise.reject(errToReport));\r\n                }\r\n            });\r\n        });\r\n        if (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        return Promise.all(promises).then(lodash_1.noop);\r\n    };\r\n    IndexedDbStore.prototype.remove = function (keyOrKeys) {\r\n        var _this = this;\r\n        var keys = lodash_1.attempt(function () {\r\n            var keys = NoSqlProviderUtils_1.formListOfKeys(keyOrKeys, _this._schema.primaryKeyPath);\r\n            if (_this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(_this._schema.primaryKeyPath)) {\r\n                return lodash_1.map(keys, function (key) { return NoSqlProviderUtils_1.serializeKeyToString(key, _this._schema.primaryKeyPath); });\r\n            }\r\n            return keys;\r\n        });\r\n        if (lodash_1.isError(keys)) {\r\n            return Promise.reject(keys);\r\n        }\r\n        return Promise.all(lodash_1.map(keys, function (key) {\r\n            if (_this._fakeComplicatedKeys && lodash_1.some(_this._schema.indexes, function (index) { return index.multiEntry || index.fullText; })) {\r\n                // If we're faking keys and there's any multientry indexes, we have to do the way more complicated version...\r\n                return IndexedDbProvider.WrapRequest(_this._store.get(key)).then(function (item) {\r\n                    if (item) {\r\n                        // Go through each multiEntry index and nuke the referenced items from the sub-stores\r\n                        var promises = lodash_1.map(lodash_1.filter(_this._schema.indexes, function (index) { return !!index.multiEntry; }), function (index) {\r\n                            var indexStore = lodash_1.find(_this._indexStores, function (store) { return store.name === _this._schema.name + '_' + index.name; });\r\n                            var refKey = lodash_1.attempt(function () {\r\n                                // We need to reference the PK of the actual row we're using here, so calculate the actual PK -- if it's\r\n                                // compound, we're already faking complicated keys, so we know to serialize it to a string.  If not, use the\r\n                                // raw value.\r\n                                var tempRefKey = NoSqlProviderUtils_1.getKeyForKeypath(item, _this._schema.primaryKeyPath);\r\n                                return lodash_1.isArray(_this._schema.primaryKeyPath) ?\r\n                                    NoSqlProviderUtils_1.serializeKeyToString(tempRefKey, _this._schema.primaryKeyPath) :\r\n                                    tempRefKey;\r\n                            });\r\n                            if (lodash_1.isError(refKey)) {\r\n                                return Promise.reject(refKey);\r\n                            }\r\n                            // First clear out the old values from the index store for the refkey\r\n                            var cursorReq = indexStore.index('refkey').openCursor(IDBKeyRange.only(refKey));\r\n                            return IndexedDbIndex.iterateOverCursorRequest(cursorReq, function (cursor) {\r\n                                cursor['delete']();\r\n                            });\r\n                        });\r\n                        // Also remember to nuke the item from the actual store\r\n                        promises.push(IndexedDbProvider.WrapRequest(_this._store['delete'](key)));\r\n                        return Promise.all(promises).then(lodash_1.noop);\r\n                    }\r\n                    return undefined;\r\n                });\r\n            }\r\n            return IndexedDbProvider.WrapRequest(_this._store['delete'](key));\r\n        })).then(lodash_1.noop);\r\n    };\r\n    IndexedDbStore.prototype.removeRange = function (indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        var index = lodash_1.attempt(function () {\r\n            return indexName ? _this.openIndex(indexName) : _this.openPrimaryKey();\r\n        });\r\n        if (!index || lodash_1.isError(index)) {\r\n            return Promise.reject('Index \"' + indexName + '\" not found');\r\n        }\r\n        return index.getKeysForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive).then(function (keys) {\r\n            _this.remove(keys);\r\n        });\r\n    };\r\n    IndexedDbStore.prototype.openIndex = function (indexName) {\r\n        var _this = this;\r\n        var indexSchema = lodash_1.find(this._schema.indexes, function (idx) { return idx.name === indexName; });\r\n        if (!indexSchema) {\r\n            throw new Error('Index not found: ' + indexName);\r\n        }\r\n        if (this._fakeComplicatedKeys && (indexSchema.multiEntry || indexSchema.fullText)) {\r\n            var store = lodash_1.find(this._indexStores, function (indexStore) { return indexStore.name === _this._schema.name + '_' + indexSchema.name; });\r\n            if (!store) {\r\n                throw new Error('Indexstore not found: ' + this._schema.name + '_' + indexSchema.name);\r\n            }\r\n            return new IndexedDbIndex(store.index('key'), indexSchema, this._schema.primaryKeyPath, this._fakeComplicatedKeys, this._store);\r\n        }\r\n        else {\r\n            var index = this._store.index(indexName);\r\n            if (!index) {\r\n                throw new Error('Index store not found: ' + indexName);\r\n            }\r\n            return new IndexedDbIndex(index, indexSchema, this._schema.primaryKeyPath, this._fakeComplicatedKeys);\r\n        }\r\n    };\r\n    IndexedDbStore.prototype.openPrimaryKey = function () {\r\n        return new IndexedDbIndex(this._store, undefined, this._schema.primaryKeyPath, this._fakeComplicatedKeys);\r\n    };\r\n    IndexedDbStore.prototype.clearAllData = function () {\r\n        var storesToClear = [this._store];\r\n        if (this._indexStores) {\r\n            storesToClear = storesToClear.concat(this._indexStores);\r\n        }\r\n        var promises = lodash_1.map(storesToClear, function (store) { return IndexedDbProvider.WrapRequest(store.clear()); });\r\n        return Promise.all(promises).then(lodash_1.noop);\r\n    };\r\n    return IndexedDbStore;\r\n}());\r\n// DbIndex implementation for the IndexedDB DbProvider.  Fairly closely maps to the standard IndexedDB spec, aside from\r\n// a bunch of hacks to support compound keypaths on IE and some helpers to make the caller not have to walk the awkward cursor\r\n// result APIs to get their result list.  Also added ability to use an \"index\" for opening the primary key on a store.\r\nvar IndexedDbIndex = /** @class */ (function (_super) {\r\n    __extends(IndexedDbIndex, _super);\r\n    function IndexedDbIndex(_store, indexSchema, primaryKeyPath, _fakeComplicatedKeys, _fakedOriginalStore) {\r\n        var _this = _super.call(this, indexSchema, primaryKeyPath) || this;\r\n        _this._store = _store;\r\n        _this._fakeComplicatedKeys = _fakeComplicatedKeys;\r\n        _this._fakedOriginalStore = _fakedOriginalStore;\r\n        return _this;\r\n    }\r\n    IndexedDbIndex.prototype._resolveCursorResult = function (req, limit, offset) {\r\n        var _this = this;\r\n        if (this._fakeComplicatedKeys && this._fakedOriginalStore) {\r\n            // Get based on the keys from the index store, which have refkeys that point back to the original store\r\n            return IndexedDbIndex.getFromCursorRequest(req, limit, offset).then(function (rets) {\r\n                // Now get the original items using the refkeys from the index store, which are PKs on the main store\r\n                var getters = lodash_1.map(rets, function (ret) { return IndexedDbProvider.WrapRequest(_this._fakedOriginalStore.get(ret.refkey)); });\r\n                return Promise.all(getters);\r\n            });\r\n        }\r\n        else {\r\n            return IndexedDbIndex.getFromCursorRequest(req, limit, offset);\r\n        }\r\n    };\r\n    IndexedDbIndex.prototype.getAll = function (reverseOrSortOrder, limit, offset) {\r\n        var reverse = reverseOrSortOrder === true || reverseOrSortOrder === NoSqlProvider_1.QuerySortOrder.Reverse;\r\n        if (!reverse && this._store.getAll && !offset && !this._fakeComplicatedKeys) {\r\n            return IndexedDbProvider.WrapRequest(this._store.getAll(undefined, limit));\r\n        }\r\n        // ************************* Don't change this null to undefined, IE chokes on it... *****************************\r\n        // ************************* Don't change this null to undefined, IE chokes on it... *****************************\r\n        // ************************* Don't change this null to undefined, IE chokes on it... *****************************\r\n        var req = this._store.openCursor(null, reverse ? 'prev' : 'next');\r\n        return this._resolveCursorResult(req, limit, offset);\r\n    };\r\n    IndexedDbIndex.prototype.getOnly = function (key, reverseOrSortOrder, limit, offset) {\r\n        var _this = this;\r\n        var keyRange = lodash_1.attempt(function () {\r\n            return _this._getKeyRangeForOnly(key);\r\n        });\r\n        if (lodash_1.isError(keyRange)) {\r\n            return Promise.reject(keyRange);\r\n        }\r\n        var reverse = reverseOrSortOrder === true || reverseOrSortOrder === NoSqlProvider_1.QuerySortOrder.Reverse;\r\n        if (!reverse && this._store.getAll && !offset && !this._fakeComplicatedKeys) {\r\n            return IndexedDbProvider.WrapRequest(this._store.getAll(keyRange, limit));\r\n        }\r\n        var req = this._store.openCursor(keyRange, reverse ? 'prev' : 'next');\r\n        return this._resolveCursorResult(req, limit, offset);\r\n    };\r\n    IndexedDbIndex.prototype.getMultiple = function (keyOrKeys) {\r\n        var _this = this;\r\n        var keys = lodash_1.attempt(function () {\r\n            var keys = NoSqlProviderUtils_1.formListOfKeys(keyOrKeys, _this._keyPath);\r\n            return keys;\r\n        });\r\n        if (lodash_1.isError(keys)) {\r\n            return Promise.reject(keys);\r\n        }\r\n        if (this._store.get && !this._fakeComplicatedKeys) {\r\n            return Promise.all(lodash_1.map(keys, function (key) { return IndexedDbProvider.WrapRequest(_this._store.get(key)); })).then(lodash_1.compact);\r\n        }\r\n        return Promise.all(lodash_1.map(keys, function (key) { return _this.getOnly(key); })).then(function (vals) { return lodash_1.compact(lodash_1.flatten(vals)); });\r\n    };\r\n    // Warning: This function can throw, make sure to trap.\r\n    IndexedDbIndex.prototype._getKeyRangeForOnly = function (key) {\r\n        if (this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(this._keyPath)) {\r\n            return IDBKeyRange.only(NoSqlProviderUtils_1.serializeKeyToString(key, this._keyPath));\r\n        }\r\n        return IDBKeyRange.only(key);\r\n    };\r\n    IndexedDbIndex.prototype.getRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive, reverseOrSortOrder, limit, offset) {\r\n        var _this = this;\r\n        var keyRange = lodash_1.attempt(function () {\r\n            return _this._getKeyRangeForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n        if (lodash_1.isError(keyRange)) {\r\n            return Promise.reject(keyRange);\r\n        }\r\n        var reverse = reverseOrSortOrder === true || reverseOrSortOrder === NoSqlProvider_1.QuerySortOrder.Reverse;\r\n        if (!reverse && this._store.getAll && !offset && !this._fakeComplicatedKeys) {\r\n            return IndexedDbProvider.WrapRequest(this._store.getAll(keyRange, limit));\r\n        }\r\n        var req = this._store.openCursor(keyRange, reverse ? 'prev' : 'next');\r\n        return this._resolveCursorResult(req, limit, offset);\r\n    };\r\n    // Warning: This function can throw, make sure to trap.\r\n    IndexedDbIndex.prototype._getKeyRangeForRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        if (this._fakeComplicatedKeys && NoSqlProviderUtils_1.isCompoundKeyPath(this._keyPath)) {\r\n            // IE has to switch to hacky pre-joined-compound-keys\r\n            return IDBKeyRange.bound(NoSqlProviderUtils_1.serializeKeyToString(keyLowRange, this._keyPath), NoSqlProviderUtils_1.serializeKeyToString(keyHighRange, this._keyPath), lowRangeExclusive, highRangeExclusive);\r\n        }\r\n        return IDBKeyRange.bound(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n    };\r\n    IndexedDbIndex.prototype.countAll = function () {\r\n        var req = this._store.count();\r\n        return this._countRequest(req);\r\n    };\r\n    IndexedDbIndex.prototype.countOnly = function (key) {\r\n        var _this = this;\r\n        var keyRange = lodash_1.attempt(function () {\r\n            return _this._getKeyRangeForOnly(key);\r\n        });\r\n        if (lodash_1.isError(keyRange)) {\r\n            return Promise.reject(keyRange);\r\n        }\r\n        var req = this._store.count(keyRange);\r\n        return this._countRequest(req);\r\n    };\r\n    IndexedDbIndex.prototype.countRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        var keyRange = lodash_1.attempt(function () {\r\n            return _this._getKeyRangeForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n        if (lodash_1.isError(keyRange)) {\r\n            return Promise.reject(keyRange);\r\n        }\r\n        var req = this._store.count(keyRange);\r\n        return this._countRequest(req);\r\n    };\r\n    IndexedDbIndex.prototype.getKeysForRange = function (keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        var _this = this;\r\n        var keyRange = lodash_1.attempt(function () {\r\n            return _this._getKeyRangeForRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n        if (lodash_1.isError(keyRange)) {\r\n            return Promise.reject(keyRange);\r\n        }\r\n        if (this._store.getAllKeys && !this._fakeComplicatedKeys) {\r\n            return IndexedDbProvider.WrapRequest(this._store.getAllKeys(keyRange));\r\n        }\r\n        var keys = [];\r\n        var req = this._store.openCursor(keyRange, 'next');\r\n        return IndexedDbIndex.iterateOverCursorRequest(req, function (cursor) {\r\n            keys.push(cursor.key);\r\n        }).then(function () {\r\n            return keys;\r\n        });\r\n    };\r\n    IndexedDbIndex.getFromCursorRequest = function (req, limit, offset) {\r\n        var outList = [];\r\n        return this.iterateOverCursorRequest(req, function (cursor) {\r\n            // Typings on cursor are wrong...\r\n            outList.push(cursor.value);\r\n        }, limit, offset).then(function () {\r\n            return outList;\r\n        });\r\n    };\r\n    IndexedDbIndex.prototype._countRequest = function (req) {\r\n        return new Promise(function (resolve, reject) {\r\n            req.onsuccess = function (event) {\r\n                resolve(event.target.result);\r\n            };\r\n            req.onerror = function (ev) {\r\n                reject(ev);\r\n            };\r\n        });\r\n    };\r\n    IndexedDbIndex.iterateOverCursorRequest = function (req, func, limit, offset) {\r\n        return new Promise(function (resolve, reject) {\r\n            var count = 0;\r\n            req.onsuccess = function (event) {\r\n                var cursor = event.target.result;\r\n                if (cursor) {\r\n                    if (offset) {\r\n                        cursor.advance(offset);\r\n                        offset = 0;\r\n                    }\r\n                    else {\r\n                        func(cursor);\r\n                        count++;\r\n                        if (limit && (count === limit)) {\r\n                            resolve(void 0);\r\n                            return;\r\n                        }\r\n                        cursor['continue']();\r\n                    }\r\n                }\r\n                else {\r\n                    // Nothing else to iterate\r\n                    resolve(void 0);\r\n                }\r\n            };\r\n            req.onerror = function (ev) {\r\n                reject(ev);\r\n            };\r\n        });\r\n    };\r\n    return IndexedDbIndex;\r\n}(FullTextSearchHelpers_1.DbIndexFTSFromRangeQueries));\r\n\n\n//# sourceURL=webpack:///./src/IndexedDbProvider.ts?");

/***/ }),

/***/ "./src/NoSqlProvider.ts":
/*!******************************!*\
  !*** ./src/NoSqlProvider.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * NoSqlProvider.ts\r\n * Author: David de Regt\r\n * Copyright: Microsoft 2016\r\n *\r\n * Low-level wrapper to expose a nosql-like database which can be backed by\r\n * numerous different backend store types, invisible to the consumer.  The\r\n * usage semantics are very similar to IndexedDB.  This file contains most\r\n * of the helper interfaces, while the specific database providers should\r\n * be required piecemeal.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\n__webpack_require__(/*! ./Promise */ \"./src/Promise.ts\");\r\nvar QuerySortOrder;\r\n(function (QuerySortOrder) {\r\n    QuerySortOrder[QuerySortOrder[\"None\"] = 0] = \"None\";\r\n    QuerySortOrder[QuerySortOrder[\"Forward\"] = 1] = \"Forward\";\r\n    QuerySortOrder[QuerySortOrder[\"Reverse\"] = 2] = \"Reverse\";\r\n})(QuerySortOrder = exports.QuerySortOrder || (exports.QuerySortOrder = {}));\r\nvar FullTextTermResolution;\r\n(function (FullTextTermResolution) {\r\n    FullTextTermResolution[FullTextTermResolution[\"And\"] = 0] = \"And\";\r\n    FullTextTermResolution[FullTextTermResolution[\"Or\"] = 1] = \"Or\";\r\n})(FullTextTermResolution = exports.FullTextTermResolution || (exports.FullTextTermResolution = {}));\r\n// Abstract base type for a database provider.  Has accessors for opening transactions and one-off accesor helpers.\r\n// Note: this is a different concept than a DbStore or DbIndex, although it provides a similar (or identical) interface.\r\nvar DbProvider = /** @class */ (function () {\r\n    function DbProvider() {\r\n    }\r\n    DbProvider.prototype.open = function (dbName, schema, _wipeIfExists, verbose) {\r\n        // virtual call\r\n        this._dbName = dbName;\r\n        this._schema = schema;\r\n        this._verbose = verbose;\r\n        return undefined;\r\n    };\r\n    DbProvider.prototype.deleteDatabase = function () {\r\n        var _this = this;\r\n        return this.close().always(function () { return _this._deleteDatabaseInternal(); });\r\n    };\r\n    DbProvider.prototype.clearAllData = function () {\r\n        var storeNames = this._schema.stores.map(function (store) { return store.name; });\r\n        return this.openTransaction(storeNames, true).then(function (trans) {\r\n            var clearers = storeNames.map(function (storeName) {\r\n                var store = lodash_1.attempt(function () {\r\n                    return trans.getStore(storeName);\r\n                });\r\n                if (!store || lodash_1.isError(store)) {\r\n                    return Promise.reject('Store \"' + storeName + '\" not found');\r\n                }\r\n                return store.clearAllData();\r\n            });\r\n            return Promise.all(clearers).then(lodash_1.noop);\r\n        });\r\n    };\r\n    DbProvider.prototype._getStoreTransaction = function (storeName, readWrite) {\r\n        return this.openTransaction([storeName], readWrite).then(function (trans) {\r\n            var store = lodash_1.attempt(function () {\r\n                return trans.getStore(storeName);\r\n            });\r\n            if (!store || lodash_1.isError(store)) {\r\n                return Promise.reject('Store \"' + storeName + '\" not found');\r\n            }\r\n            return Promise.resolve(store);\r\n        });\r\n    };\r\n    // Shortcut functions\r\n    DbProvider.prototype.get = function (storeName, key) {\r\n        return this._getStoreTransaction(storeName, false).then(function (store) {\r\n            return store.get(key);\r\n        });\r\n    };\r\n    DbProvider.prototype.getMultiple = function (storeName, keyOrKeys, indexName) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.getMultiple(keyOrKeys);\r\n        });\r\n    };\r\n    DbProvider.prototype.put = function (storeName, itemOrItems) {\r\n        return this._getStoreTransaction(storeName, true).then(function (store) {\r\n            return store.put(itemOrItems);\r\n        });\r\n    };\r\n    DbProvider.prototype.remove = function (storeName, keyOrKeys) {\r\n        return this._getStoreTransaction(storeName, true).then(function (store) {\r\n            return store.remove(keyOrKeys);\r\n        });\r\n    };\r\n    DbProvider.prototype.removeRange = function (storeName, indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        return this._getStoreTransaction(storeName, true).then(function (store) {\r\n            return store.removeRange(indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n    };\r\n    DbProvider.prototype._getStoreIndexTransaction = function (storeName, readWrite, indexName) {\r\n        return this._getStoreTransaction(storeName, readWrite).then(function (store) {\r\n            var index = lodash_1.attempt(function () {\r\n                return indexName ? store.openIndex(indexName) : store.openPrimaryKey();\r\n            });\r\n            if (!index || lodash_1.isError(index)) {\r\n                return Promise.reject('Index \"' + indexName + '\" not found');\r\n            }\r\n            return Promise.resolve(index);\r\n        });\r\n    };\r\n    DbProvider.prototype.getAll = function (storeName, indexName, reverseOrSortOrder, limit, offset) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.getAll(reverseOrSortOrder, limit, offset);\r\n        });\r\n    };\r\n    DbProvider.prototype.getOnly = function (storeName, indexName, key, reverseOrSortOrder, limit, offset) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.getOnly(key, reverseOrSortOrder, limit, offset);\r\n        });\r\n    };\r\n    DbProvider.prototype.getRange = function (storeName, indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive, reverseOrSortOrder, limit, offset) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.getRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive, reverseOrSortOrder, limit, offset);\r\n        });\r\n    };\r\n    DbProvider.prototype.countAll = function (storeName, indexName) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.countAll();\r\n        });\r\n    };\r\n    DbProvider.prototype.countOnly = function (storeName, indexName, key) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.countOnly(key);\r\n        });\r\n    };\r\n    DbProvider.prototype.countRange = function (storeName, indexName, keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive) {\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.countRange(keyLowRange, keyHighRange, lowRangeExclusive, highRangeExclusive);\r\n        });\r\n    };\r\n    DbProvider.prototype.fullTextSearch = function (storeName, indexName, searchPhrase, resolution, _limit) {\r\n        if (resolution === void 0) { resolution = FullTextTermResolution.And; }\r\n        return this._getStoreIndexTransaction(storeName, false, indexName).then(function (index) {\r\n            return index.fullTextSearch(searchPhrase, resolution);\r\n        });\r\n    };\r\n    return DbProvider;\r\n}());\r\nexports.DbProvider = DbProvider;\r\n// Runs down the given providers in order and tries to instantiate them.  If they're not supported, it will continue until it finds one\r\n// that does work, or it will reject the promise if it runs out of providers and none work.\r\nfunction openListOfProviders(providersToTry, dbName, schema, wipeIfExists, verbose) {\r\n    return new Promise(function (resolve, reject) {\r\n        var providerIndex = 0;\r\n        var errorList = [];\r\n        var tryNext = function () {\r\n            if (providerIndex >= providersToTry.length) {\r\n                reject(errorList.length <= 1 ? errorList[0] : errorList);\r\n                return;\r\n            }\r\n            var provider = providersToTry[providerIndex];\r\n            provider.open(dbName, schema, wipeIfExists, verbose).then(function () {\r\n                resolve(provider);\r\n            }, function (err) {\r\n                errorList.push(err);\r\n                providerIndex++;\r\n                tryNext();\r\n            });\r\n        };\r\n        tryNext();\r\n    });\r\n}\r\nexports.openListOfProviders = openListOfProviders;\r\n\n\n//# sourceURL=webpack:///./src/NoSqlProvider.ts?");

/***/ }),

/***/ "./src/NoSqlProviderUtils.ts":
/*!***********************************!*\
  !*** ./src/NoSqlProviderUtils.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n* NoSqlProviderUtils.ts\r\n* Author: David de Regt\r\n* Copyright: Microsoft 2015\r\n*\r\n* Reusable helper functions for NoSqlProvider providers/transactions/etc.\r\n*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nfunction isIE() {\r\n    return (typeof (document) !== 'undefined' && document.all !== null && document.documentMode <= 11) ||\r\n        (typeof (navigator) !== 'undefined' && !!navigator.userAgent && navigator.userAgent.indexOf('Edge/') !== -1);\r\n}\r\nexports.isIE = isIE;\r\nfunction isSafari() {\r\n    return (typeof (navigator) !== 'undefined' && ((navigator.userAgent.indexOf('Safari') !== -1 &&\r\n        navigator.userAgent.indexOf('Chrome') === -1 && navigator.userAgent.indexOf('BB10') === -1) ||\r\n        (navigator.userAgent.indexOf('Mobile Crosswalk') !== -1)));\r\n}\r\nexports.isSafari = isSafari;\r\nfunction arrayify(obj) {\r\n    return lodash_1.isArray(obj) ? obj : [obj];\r\n}\r\nexports.arrayify = arrayify;\r\n// Constant string for joining compound keypaths for websql and IE indexeddb.  There may be marginal utility in using a more obscure\r\n// string sequence.\r\nvar keypathJoinerString = '%&';\r\n// This function computes a serialized single string value for a keypath on an object.  This is used for generating ordered string keys\r\n// for compound (or non-compound) values.\r\nfunction getSerializedKeyForKeypath(obj, keyPathRaw) {\r\n    var values = getKeyForKeypath(obj, keyPathRaw);\r\n    if (values === undefined) {\r\n        return undefined;\r\n    }\r\n    return serializeKeyToString(values, keyPathRaw);\r\n}\r\nexports.getSerializedKeyForKeypath = getSerializedKeyForKeypath;\r\nfunction getKeyForKeypath(obj, keyPathRaw) {\r\n    var keyPathArray = arrayify(keyPathRaw);\r\n    var values = lodash_1.map(keyPathArray, function (kp) { return getValueForSingleKeypath(obj, kp); });\r\n    if (lodash_1.some(values, function (val) { return lodash_1.isNull(val) || lodash_1.isUndefined(val); })) {\r\n        // If any components of the key are null/undefined, then the result is undefined\r\n        return undefined;\r\n    }\r\n    if (!lodash_1.isArray(keyPathRaw)) {\r\n        return values[0];\r\n    }\r\n    else {\r\n        return values;\r\n    }\r\n}\r\nexports.getKeyForKeypath = getKeyForKeypath;\r\n// Internal helper function for getting a value out of a standard keypath.\r\nfunction getValueForSingleKeypath(obj, singleKeyPath) {\r\n    return lodash_1.get(obj, singleKeyPath, undefined);\r\n}\r\nexports.getValueForSingleKeypath = getValueForSingleKeypath;\r\nfunction isCompoundKeyPath(keyPath) {\r\n    return lodash_1.isArray(keyPath) && keyPath.length > 1;\r\n}\r\nexports.isCompoundKeyPath = isCompoundKeyPath;\r\nfunction formListOfKeys(keyOrKeys, keyPath) {\r\n    if (isCompoundKeyPath(keyPath)) {\r\n        if (!lodash_1.isArray(keyOrKeys)) {\r\n            throw new Error('formListOfKeys called with a compound keypath (' + JSON.stringify(keyPath) +\r\n                ') but a non-compound keyOrKeys (' + JSON.stringify(keyOrKeys) + ')');\r\n        }\r\n        if (!lodash_1.isArray(keyOrKeys[0])) {\r\n            // Looks like a single compound key, so make it a list of a single key\r\n            return [keyOrKeys];\r\n        }\r\n        // Array of arrays, so looks fine\r\n        return keyOrKeys;\r\n    }\r\n    // Non-compound, so just make sure it's a list when it comes out in case it's a single key passed\r\n    return arrayify(keyOrKeys);\r\n}\r\nexports.formListOfKeys = formListOfKeys;\r\nfunction serializeValueToOrderableString(val) {\r\n    if (typeof val === 'number') {\r\n        return 'A' + serializeNumberToOrderableString(val);\r\n    }\r\n    if (lodash_1.isDate(val)) {\r\n        return 'B' + serializeNumberToOrderableString(val.getTime());\r\n    }\r\n    if (typeof val === 'string') {\r\n        return 'C' + val;\r\n    }\r\n    var type = lodash_1.isObject(val) ? Object.getPrototypeOf(val).constructor : typeof val;\r\n    throw new Error('Type \\'' + type + '\\' unsupported at this time.  Only numbers, Dates, and strings are currently supported.');\r\n}\r\nexports.serializeValueToOrderableString = serializeValueToOrderableString;\r\nvar zeroes = '0000000000000000';\r\nfunction formatFixed(n, digits) {\r\n    var result = String(n);\r\n    var prefix = digits - result.length;\r\n    if (prefix > 0 && prefix < zeroes.length) {\r\n        result = zeroes.substr(0, prefix) + result;\r\n    }\r\n    return result;\r\n}\r\nfunction serializeNumberToOrderableString(n) {\r\n    if (n === 0 || isNaN(n) || !isFinite(n)) {\r\n        return String(n);\r\n    }\r\n    var isPositive = true;\r\n    if (n < 0) {\r\n        isPositive = false;\r\n        n = -n;\r\n    }\r\n    var exponent = Math.floor(Math.log(n) / Math.LN10);\r\n    n = n / Math.pow(10, exponent);\r\n    if (isPositive) {\r\n        return formatFixed(1024 + exponent, 4) + String(n);\r\n    }\r\n    else {\r\n        return '-' + formatFixed(1024 - exponent, 4) + String(10 - n);\r\n    }\r\n}\r\nexports.serializeNumberToOrderableString = serializeNumberToOrderableString;\r\nfunction serializeKeyToString(key, keyPath) {\r\n    if (isCompoundKeyPath(keyPath)) {\r\n        if (lodash_1.isArray(key)) {\r\n            return lodash_1.map(key, function (k) { return serializeValueToOrderableString(k); }).join(keypathJoinerString);\r\n        }\r\n        else {\r\n            throw new Error('serializeKeyToString called with a compound keypath (' + JSON.stringify(keyPath) +\r\n                ') but a non-compound key (' + JSON.stringify(key) + ')');\r\n        }\r\n    }\r\n    else {\r\n        if (lodash_1.isArray(key)) {\r\n            throw new Error('serializeKeyToString called with a non-compound keypath (' + JSON.stringify(keyPath) +\r\n                ') but a compound key (' + JSON.stringify(key) + ')');\r\n        }\r\n        else {\r\n            return serializeValueToOrderableString(key);\r\n        }\r\n    }\r\n}\r\nexports.serializeKeyToString = serializeKeyToString;\r\nfunction formListOfSerializedKeys(keyOrKeys, keyPath) {\r\n    return lodash_1.map(formListOfKeys(keyOrKeys, keyPath), function (key) { return serializeKeyToString(key, keyPath); });\r\n}\r\nexports.formListOfSerializedKeys = formListOfSerializedKeys;\r\n\n\n//# sourceURL=webpack:///./src/NoSqlProviderUtils.ts?");

/***/ }),

/***/ "./src/Promise.ts":
/*!************************!*\
  !*** ./src/Promise.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nPromise.prototype.finally = function (onResolveOrReject) {\r\n    return this.catch(function (reason) {\r\n        return reason;\r\n    }).then(onResolveOrReject);\r\n};\r\nPromise.prototype.always = function (onResolveOrReject) {\r\n    return this.then(onResolveOrReject, function (reason) {\r\n        onResolveOrReject(reason);\r\n        throw reason;\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack:///./src/Promise.ts?");

/***/ }),

/***/ "./src/TransactionLockHelper.ts":
/*!**************************************!*\
  !*** ./src/TransactionLockHelper.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * TransactionLockHelper.ts\r\n * Author: David de Regt\r\n * Copyright: Microsoft 2017\r\n *\r\n * Several of the different providers need various types of help enforcing exclusive/readonly transactions.  This helper keeps\r\n * store-specific lock info and releases transactions at the right time, when the underlying provider can't handle it.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar assert_1 = __webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\");\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this._reject = undefined;\r\n        this._resolve = undefined;\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._reject = reject;\r\n            _this._resolve = resolve;\r\n        });\r\n    }\r\n    Object.defineProperty(Deferred.prototype, \"promise\", {\r\n        get: function () {\r\n            return this._promise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Deferred.prototype.resolve = function (value) {\r\n        return this._resolve(value);\r\n    };\r\n    Deferred.prototype.reject = function (reason) {\r\n        return this._reject(reason);\r\n    };\r\n    return Deferred;\r\n}());\r\nexports.Deferred = Deferred;\r\nvar TransactionLockHelper = /** @class */ (function () {\r\n    function TransactionLockHelper(_schema, _supportsDiscreteTransactions) {\r\n        var _this = this;\r\n        this._schema = _schema;\r\n        this._supportsDiscreteTransactions = _supportsDiscreteTransactions;\r\n        this._closed = false;\r\n        this._exclusiveLocks = {};\r\n        this._readOnlyCounts = {};\r\n        this._pendingTransactions = [];\r\n        lodash_1.each(this._schema.stores, function (store) {\r\n            _this._exclusiveLocks[store.name] = false;\r\n            _this._readOnlyCounts[store.name] = 0;\r\n        });\r\n    }\r\n    TransactionLockHelper.prototype.closeWhenPossible = function () {\r\n        if (!this._closingDefer) {\r\n            this._closingDefer = new Deferred();\r\n            this._checkClose();\r\n        }\r\n        return this._closingDefer.promise;\r\n    };\r\n    TransactionLockHelper.prototype._checkClose = function () {\r\n        if (!this._closed && this._closingDefer && !this.hasTransaction()) {\r\n            this._closed = true;\r\n            this._closingDefer.resolve(void 0);\r\n        }\r\n    };\r\n    TransactionLockHelper.prototype.hasTransaction = function () {\r\n        return this._pendingTransactions.length > 0 ||\r\n            lodash_1.some(this._exclusiveLocks, function (value) { return value; }) ||\r\n            lodash_1.some(this._readOnlyCounts, function (value) { return value > 0; });\r\n    };\r\n    TransactionLockHelper.prototype.openTransaction = function (storeNames, exclusive) {\r\n        var _this = this;\r\n        if (storeNames) {\r\n            var missingStore = lodash_1.find(storeNames, function (name) { return !lodash_1.some(_this._schema.stores, function (store) { return name === store.name; }); });\r\n            if (missingStore) {\r\n                return Promise.reject('Opened a transaction with a store name (' + missingStore + ') not defined in your schema!');\r\n            }\r\n        }\r\n        var completionDefer = new Deferred();\r\n        var newToken = {\r\n            // Undefined means lock all stores\r\n            storeNames: storeNames || lodash_1.map(this._schema.stores, function (store) { return store.name; }),\r\n            exclusive: exclusive,\r\n            completionPromise: completionDefer.promise\r\n        };\r\n        var pendingTrans = {\r\n            token: newToken,\r\n            opened: false,\r\n            openDefer: new Deferred(),\r\n            completionDefer: completionDefer\r\n        };\r\n        this._pendingTransactions.push(pendingTrans);\r\n        this._checkNextTransactions();\r\n        return pendingTrans.openDefer.promise;\r\n    };\r\n    TransactionLockHelper.prototype.transactionComplete = function (token) {\r\n        var pendingTransIndex = lodash_1.findIndex(this._pendingTransactions, function (trans) { return trans.token === token; });\r\n        if (pendingTransIndex !== -1) {\r\n            var pendingTrans = this._pendingTransactions[pendingTransIndex];\r\n            if (pendingTrans.completionDefer) {\r\n                pendingTrans.hadSuccess = true;\r\n                var toResolve = pendingTrans.completionDefer;\r\n                this._pendingTransactions.splice(pendingTransIndex, 1);\r\n                pendingTrans.completionDefer = undefined;\r\n                toResolve.resolve(void 0);\r\n            }\r\n            else {\r\n                throw new Error('Completing a transaction that has already been completed. Stores: ' + token.storeNames.join(',') +\r\n                    ', HadSuccess: ' + pendingTrans.hadSuccess);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Completing a transaction that is no longer tracked. Stores: ' + token.storeNames.join(','));\r\n        }\r\n        this._cleanTransaction(token);\r\n    };\r\n    TransactionLockHelper.prototype.transactionFailed = function (token, message) {\r\n        var pendingTransIndex = lodash_1.findIndex(this._pendingTransactions, function (trans) { return trans.token === token; });\r\n        if (pendingTransIndex !== -1) {\r\n            var pendingTrans = this._pendingTransactions[pendingTransIndex];\r\n            if (pendingTrans.completionDefer) {\r\n                pendingTrans.hadSuccess = false;\r\n                var toResolve = pendingTrans.completionDefer;\r\n                this._pendingTransactions.splice(pendingTransIndex, 1);\r\n                pendingTrans.completionDefer = undefined;\r\n                toResolve.reject(new Error(message));\r\n            }\r\n            else {\r\n                throw new Error('Failing a transaction that has already been completed. Stores: ' + token.storeNames.join(',') +\r\n                    ', HadSuccess: ' + pendingTrans.hadSuccess + ', Message: ' + message);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error('Failing a transaction that is no longer tracked. Stores: ' + token.storeNames.join(',') + ', message: ' +\r\n                message);\r\n        }\r\n        this._cleanTransaction(token);\r\n    };\r\n    TransactionLockHelper.prototype._cleanTransaction = function (token) {\r\n        var _this = this;\r\n        if (token.exclusive) {\r\n            lodash_1.each(token.storeNames, function (storeName) {\r\n                assert_1.ok(_this._exclusiveLocks[storeName], 'Missing expected exclusive lock for store: ' + storeName);\r\n                _this._exclusiveLocks[storeName] = false;\r\n            });\r\n        }\r\n        else {\r\n            lodash_1.each(token.storeNames, function (storeName) {\r\n                assert_1.ok(_this._readOnlyCounts[storeName] > 0, 'Missing expected readonly lock for store: ' + storeName);\r\n                _this._readOnlyCounts[storeName]--;\r\n            });\r\n        }\r\n        this._checkNextTransactions();\r\n    };\r\n    TransactionLockHelper.prototype._checkNextTransactions = function () {\r\n        var _this = this;\r\n        if (lodash_1.some(this._exclusiveLocks, function (lock) { return lock; }) && !this._supportsDiscreteTransactions) {\r\n            // In these cases, no more transactions will be possible.  Break out early.\r\n            return;\r\n        }\r\n        var _loop_1 = function (i) {\r\n            var trans = this_1._pendingTransactions[i];\r\n            if (trans.opened) {\r\n                i++;\r\n                return out_i_1 = i, \"continue\";\r\n            }\r\n            if (this_1._closingDefer) {\r\n                this_1._pendingTransactions.splice(i, 1);\r\n                trans.openDefer.reject('Closing Provider');\r\n                return out_i_1 = i, \"continue\";\r\n            }\r\n            if (lodash_1.some(trans.token.storeNames, function (storeName) { return _this._exclusiveLocks[storeName] ||\r\n                (trans.token.exclusive && _this._readOnlyCounts[storeName] > 0); })) {\r\n                i++;\r\n                return out_i_1 = i, \"continue\";\r\n            }\r\n            trans.opened = true;\r\n            if (trans.token.exclusive) {\r\n                lodash_1.each(trans.token.storeNames, function (storeName) {\r\n                    _this._exclusiveLocks[storeName] = true;\r\n                });\r\n            }\r\n            else {\r\n                lodash_1.each(trans.token.storeNames, function (storeName) {\r\n                    _this._readOnlyCounts[storeName]++;\r\n                });\r\n            }\r\n            trans.openDefer.resolve(trans.token);\r\n            out_i_1 = i;\r\n        };\r\n        var this_1 = this, out_i_1;\r\n        for (var i = 0; i < this._pendingTransactions.length;) {\r\n            _loop_1(i);\r\n            i = out_i_1;\r\n        }\r\n        this._checkClose();\r\n    };\r\n    return TransactionLockHelper;\r\n}());\r\nexports.TransactionLockHelper = TransactionLockHelper;\r\n\n\n//# sourceURL=webpack:///./src/TransactionLockHelper.ts?");

/***/ }),

/***/ "./src/tests/NoSqlProviderTests.ts":
/*!*****************************************!*\
  !*** ./src/tests/NoSqlProviderTests.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar assert = __webpack_require__(/*! assert */ \"./node_modules/assert/assert.js\");\r\nvar lodash_1 = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\r\nvar NoSqlProvider_1 = __webpack_require__(/*! ../NoSqlProvider */ \"./src/NoSqlProvider.ts\");\r\nvar InMemoryProvider_1 = __webpack_require__(/*! ../InMemoryProvider */ \"./src/InMemoryProvider.ts\");\r\nvar IndexedDbProvider_1 = __webpack_require__(/*! ../IndexedDbProvider */ \"./src/IndexedDbProvider.ts\");\r\nvar NoSqlProviderUtils_1 = __webpack_require__(/*! ../NoSqlProviderUtils */ \"./src/NoSqlProviderUtils.ts\");\r\nvar cleanupFile = false;\r\nfunction openProvider(providerName, schema, wipeFirst) {\r\n    var provider;\r\n    if (providerName === 'memory') {\r\n        provider = new InMemoryProvider_1.InMemoryProvider();\r\n    }\r\n    else if (providerName === 'indexeddb') {\r\n        provider = new IndexedDbProvider_1.IndexedDbProvider();\r\n    }\r\n    else if (providerName === 'indexeddbfakekeys') {\r\n        provider = new IndexedDbProvider_1.IndexedDbProvider(undefined, false);\r\n    }\r\n    else {\r\n        throw new Error('Provider not found for name: ' + providerName);\r\n    }\r\n    var dbName = providerName.indexOf('sqlite3memory') !== -1 ? ':memory:' : 'test';\r\n    return NoSqlProvider_1.openListOfProviders([provider], dbName, schema, wipeFirst, false);\r\n}\r\nfunction sleep(timeMs) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(function () { resolve(void 0); }, timeMs);\r\n    });\r\n}\r\ndescribe('NoSqlProvider', function () {\r\n    this.timeout(60 * 1000);\r\n    after(function (done) {\r\n        if (cleanupFile) {\r\n            var fs = __webpack_require__(/*! fs */ \"fs\");\r\n            fs.unlink('test', function (err) {\r\n                if (err) {\r\n                    throw err;\r\n                }\r\n                console.log('path/file.txt was deleted');\r\n                done();\r\n            });\r\n        }\r\n        else {\r\n            done();\r\n        }\r\n    });\r\n    var provsToTest;\r\n    if (typeof window === 'undefined') {\r\n        // Non-browser environment...\r\n        provsToTest = ['memory'];\r\n    }\r\n    else {\r\n        provsToTest = ['memory'];\r\n        provsToTest.push('indexeddb', 'indexeddbfakekeys');\r\n    }\r\n    it('Number/value/type sorting', function () {\r\n        var pairsToTest = [\r\n            [0, 1],\r\n            [-1, 1],\r\n            [100, 100.1],\r\n            [-123456.789, -123456.78],\r\n            [-123456.789, 0],\r\n            [-123456.789, 123456.789],\r\n            [0.000012345, 8],\r\n            [0.000012345, 0.00002],\r\n            [-0.000012345, 0.000000001],\r\n            [1, Date.now()],\r\n            [new Date(0), new Date(2)],\r\n            [new Date(1), new Date(2)],\r\n            [new Date(-1), new Date(1)],\r\n            [new Date(-2), new Date(-1)],\r\n            [new Date(-2), new Date(0)],\r\n            [1, 'hi'],\r\n            [-1, 'hi'],\r\n            [Date.now(), 'hi'],\r\n            ['hi', 'hi2'],\r\n            ['a', 'b']\r\n        ];\r\n        pairsToTest.forEach(function (pair) {\r\n            assert(NoSqlProviderUtils_1.serializeValueToOrderableString(pair[0]) <\r\n                NoSqlProviderUtils_1.serializeValueToOrderableString(pair[1]), 'failed for pair: ' + pair);\r\n        });\r\n        try {\r\n            NoSqlProviderUtils_1.serializeValueToOrderableString([4, 5]);\r\n            assert(false, 'Should reject this key');\r\n        }\r\n        catch (e) {\r\n            // Should throw -- expecting this result.\r\n        }\r\n    });\r\n    provsToTest.forEach(function (provName) {\r\n        describe('Provider: ' + provName, function () {\r\n            describe('Delete database', function () {\r\n                if (provName.indexOf('memory') !== -1) {\r\n                    xit('Skip delete test for in memory DB', function () {\r\n                        //noop\r\n                    });\r\n                }\r\n                else if (provName.indexOf('indexeddb') === 0) {\r\n                    it('Deletes the database', function (done) {\r\n                        var schema = {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        };\r\n                        openProvider(provName, schema, true)\r\n                            .then(function (prov) {\r\n                            // insert some stuff\r\n                            return prov.put('test', { id: 'a', val: 'b' })\r\n                                //then delete\r\n                                .then(function () { return prov.deleteDatabase(); });\r\n                        })\r\n                            .then(function () { return openProvider(provName, schema, false); })\r\n                            .then(function (prov) {\r\n                            return prov.get('test', 'a').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                // not found\r\n                                assert(!ret);\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                }\r\n                else {\r\n                    it('Rejects with an error', function (done) {\r\n                        var schema = {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        };\r\n                        return openProvider(provName, schema, true).\r\n                            then(function (prov) {\r\n                            // insert some stuff\r\n                            return prov.put('test', { id: 'a', val: 'b' })\r\n                                .then(function () { return prov.deleteDatabase(); });\r\n                        })\r\n                            .then(function () {\r\n                            //this should not happen\r\n                            assert(false, 'Should fail');\r\n                        }).catch(function () {\r\n                            // as expected, didn't delete anything\r\n                            return openProvider(provName, schema, false)\r\n                                .then(function (prov) { return prov.get('test', 'a').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.val, 'b');\r\n                                return prov.close();\r\n                            }); });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                }\r\n            });\r\n            describe('Data Manipulation', function () {\r\n                // Setter should set the testable parameter on the first param to the value in the second param, and third param to the\r\n                // second index column for compound indexes.\r\n                var tester = function (prov, indexName, compound, setter) {\r\n                    var putters = [1, 2, 3, 4, 5].map(function (v) {\r\n                        var obj = { val: 'val' + v };\r\n                        if (indexName) {\r\n                            obj.id = 'id' + v;\r\n                        }\r\n                        setter(obj, 'indexa' + v, 'indexb' + v);\r\n                        return prov.put('test', obj);\r\n                    });\r\n                    return Promise.all(putters).then(function () {\r\n                        var formIndex = function (i, i2) {\r\n                            if (i2 === void 0) { i2 = i; }\r\n                            if (compound) {\r\n                                return ['indexa' + i, 'indexb' + i2];\r\n                            }\r\n                            else {\r\n                                return 'indexa' + i;\r\n                            }\r\n                        };\r\n                        var t0 = prov.getMultiple('test', compound ? formIndex(1, 1) : 'indexa1', indexName).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getMultiple');\r\n                            [1].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; }), 'cant find ' + v); });\r\n                        });\r\n                        var t1 = prov.getAll('test', indexName).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 5, 'getAll');\r\n                            [1, 2, 3, 4, 5].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; }), 'cant find ' + v); });\r\n                        });\r\n                        var t1count = prov.countAll('test', indexName).then(function (ret) {\r\n                            assert.equal(ret, 5, 'countAll');\r\n                        });\r\n                        var t1b = prov.getAll('test', indexName, false, 3).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 3, 'getAll lim3');\r\n                            [1, 2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; }), 'cant find ' + v); });\r\n                        });\r\n                        var t1c = prov.getAll('test', indexName, false, 3, 1).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 3, 'getAll lim3 off1');\r\n                            [2, 3, 4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; }), 'cant find ' + v); });\r\n                        });\r\n                        var t2 = prov.getOnly('test', indexName, formIndex(3)).then(function (ret) {\r\n                            assert.equal(ret.length, 1, 'getOnly');\r\n                            assert.equal(ret[0].val, 'val3');\r\n                        });\r\n                        var t2count = prov.countOnly('test', indexName, formIndex(3)).then(function (ret) {\r\n                            assert.equal(ret, 1, 'countOnly');\r\n                        });\r\n                        var t3 = prov.getRange('test', indexName, formIndex(2), formIndex(4)).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 3, 'getRange++');\r\n                            [2, 3, 4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3count = prov.countRange('test', indexName, formIndex(2), formIndex(4)).then(function (ret) {\r\n                            assert.equal(ret, 3, 'countRange++');\r\n                        });\r\n                        var t3b = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, false, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange++ lim1');\r\n                            [2].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3b2 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, false, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange++ lim1');\r\n                            [2].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3b3 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, NoSqlProvider_1.QuerySortOrder.Forward, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange++ lim1');\r\n                            [2].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3b4 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, NoSqlProvider_1.QuerySortOrder.Reverse, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange++ lim1 rev');\r\n                            [4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3c = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, false, 1, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange++ lim1 off1');\r\n                            [3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3d = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, false, 2, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange++ lim2 off1');\r\n                            [3, 4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3d2 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, NoSqlProvider_1.QuerySortOrder.Forward, 2, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange++ lim2 off1');\r\n                            [3, 4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3d3 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, true, 2, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange++ lim2 off1 rev');\r\n                            assert.equal(ret[0].val, 'val3');\r\n                            [2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t3d4 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, false, NoSqlProvider_1.QuerySortOrder.Reverse, 2, 1)\r\n                            .then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange++ lim2 off1 rev');\r\n                            assert.equal(ret[0].val, 'val3');\r\n                            [2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t4 = prov.getRange('test', indexName, formIndex(2), formIndex(4), true, false).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange-+');\r\n                            [3, 4].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t4count = prov.countRange('test', indexName, formIndex(2), formIndex(4), true, false).then(function (ret) {\r\n                            assert.equal(ret, 2, 'countRange-+');\r\n                        });\r\n                        var t5 = prov.getRange('test', indexName, formIndex(2), formIndex(4), false, true).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 2, 'getRange+-');\r\n                            [2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t5count = prov.countRange('test', indexName, formIndex(2), formIndex(4), false, true).then(function (ret) {\r\n                            assert.equal(ret, 2, 'countRange+-');\r\n                        });\r\n                        var t6 = prov.getRange('test', indexName, formIndex(2), formIndex(4), true, true).then(function (retVal) {\r\n                            var ret = retVal;\r\n                            assert.equal(ret.length, 1, 'getRange--');\r\n                            [3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                        });\r\n                        var t6count = prov.countRange('test', indexName, formIndex(2), formIndex(4), true, true).then(function (ret) {\r\n                            assert.equal(ret, 1, 'countRange--');\r\n                        });\r\n                        return Promise.all([t0, t1, t1count, t1b, t1c, t2, t2count, t3, t3count, t3b, t3b2, t3b3, t3b4, t3c, t3d, t3d2, t3d3,\r\n                            t3d4, t4, t4count, t5, t5count, t6, t6count]).then(function () {\r\n                            if (compound) {\r\n                                var tt1 = prov.getRange('test', indexName, formIndex(2, 2), formIndex(4, 3))\r\n                                    .then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 2, 'getRange2++');\r\n                                    [2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                                });\r\n                                var tt1count = prov.countRange('test', indexName, formIndex(2, 2), formIndex(4, 3))\r\n                                    .then(function (ret) {\r\n                                    assert.equal(ret, 2, 'countRange2++');\r\n                                });\r\n                                var tt2 = prov.getRange('test', indexName, formIndex(2, 2), formIndex(4, 3), false, true)\r\n                                    .then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 2, 'getRange2+-');\r\n                                    [2, 3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                                });\r\n                                var tt2count = prov.countRange('test', indexName, formIndex(2, 2), formIndex(4, 3), false, true)\r\n                                    .then(function (ret) {\r\n                                    assert.equal(ret, 2, 'countRange2+-');\r\n                                });\r\n                                var tt3 = prov.getRange('test', indexName, formIndex(2, 2), formIndex(4, 3), true, false)\r\n                                    .then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 1, 'getRange2-+');\r\n                                    [3].forEach(function (v) { assert(lodash_1.find(ret, function (r) { return r.val === 'val' + v; })); });\r\n                                });\r\n                                var tt3count = prov.countRange('test', indexName, formIndex(2, 2), formIndex(4, 3), true, false)\r\n                                    .then(function (ret) {\r\n                                    assert.equal(ret, 1, 'countRange2-+');\r\n                                });\r\n                                return Promise.all([tt1, tt1count, tt2, tt2count, tt3, tt3count]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }\r\n                            else {\r\n                                return prov.close();\r\n                            }\r\n                        });\r\n                    });\r\n                };\r\n                it('Simple primary key put/get/getAll', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: 'a', val: 'b' }).then(function () {\r\n                            return prov.get('test', 'a').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.val, 'b');\r\n                                return prov.getAll('test', undefined).then(function (ret2Val) {\r\n                                    var ret2 = ret2Val;\r\n                                    assert.equal(ret2.length, 1);\r\n                                    assert.equal(ret2[0].val, 'b');\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Empty gets/puts', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', []).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 0);\r\n                                return prov.getMultiple('test', []).then(function (rets) {\r\n                                    assert(!!rets);\r\n                                    assert.equal(rets.length, 0);\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('getMultiple with blank', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 3].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getMultiple('test', ['a1', 'a2', 'a3']).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 2);\r\n                                return prov.close();\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Removing items', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 5);\r\n                                return prov.remove('test', 'a1').then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (rets) {\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 4);\r\n                                        return prov.remove('test', ['a3', 'a4', 'a2']).then(function () {\r\n                                            return prov.getAll('test', undefined).then(function (retVals) {\r\n                                                var rets = retVals;\r\n                                                assert(!!rets);\r\n                                                assert.equal(rets.length, 1);\r\n                                                assert.equal(rets[0].id, 'a5');\r\n                                                return prov.close();\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (inclusive low/high)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 10);\r\n                                return prov.removeRange('test', '', 'a3', 'a7').then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 5);\r\n                                        assert.equal(rets[0].id, 'a1');\r\n                                        assert.equal(rets[1].id, 'a10');\r\n                                        assert.equal(rets[2].id, 'a2');\r\n                                        assert.equal(rets[3].id, 'a8');\r\n                                        assert.equal(rets[4].id, 'a9');\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (exclusive low, inclusive high)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 10);\r\n                                return prov.removeRange('test', '', 'a3', 'a7', true, false).then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 6);\r\n                                        assert.equal(rets[0].id, 'a1');\r\n                                        assert.equal(rets[1].id, 'a10');\r\n                                        assert.equal(rets[2].id, 'a2');\r\n                                        assert.equal(rets[3].id, 'a3');\r\n                                        assert.equal(rets[4].id, 'a8');\r\n                                        assert.equal(rets[5].id, 'a9');\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (inclusive low, exclusive high)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 10);\r\n                                return prov.removeRange('test', '', 'a3', 'a7', false, true).then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 6);\r\n                                        assert.equal(rets[0].id, 'a1');\r\n                                        assert.equal(rets[1].id, 'a10');\r\n                                        assert.equal(rets[2].id, 'a2');\r\n                                        assert.equal(rets[3].id, 'a7');\r\n                                        assert.equal(rets[4].id, 'a8');\r\n                                        assert.equal(rets[5].id, 'a9');\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (exclusive low, exclusive high)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 10);\r\n                                return prov.removeRange('test', '', 'a3', 'a7', true, true).then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 7);\r\n                                        assert.equal(rets[0].id, 'a1');\r\n                                        assert.equal(rets[1].id, 'a10');\r\n                                        assert.equal(rets[2].id, 'a2');\r\n                                        assert.equal(rets[3].id, 'a3');\r\n                                        assert.equal(rets[4].id, 'a7');\r\n                                        assert.equal(rets[5].id, 'a8');\r\n                                        assert.equal(rets[6].id, 'a9');\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (nothing done)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 5);\r\n                                return prov.removeRange('test', '', 'a6', 'a9').then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 5);\r\n                                        assert.equal(rets[0].id, 'a1');\r\n                                        assert.equal(rets[1].id, 'a2');\r\n                                        assert.equal(rets[2].id, 'a3');\r\n                                        assert.equal(rets[3].id, 'a4');\r\n                                        assert.equal(rets[4].id, 'a5');\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Remove range (all removed)', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', [1, 2, 3, 4, 5].map(function (i) { return { id: 'a' + i }; })).then(function () {\r\n                            return prov.getAll('test', undefined).then(function (rets) {\r\n                                assert(!!rets);\r\n                                assert.equal(rets.length, 5);\r\n                                return prov.removeRange('test', '', 'a1', 'a5').then(function () {\r\n                                    return prov.getAll('test', undefined).then(function (retVals) {\r\n                                        var rets = retVals;\r\n                                        assert(!!rets);\r\n                                        assert.equal(rets.length, 0);\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Invalid Key Type', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: { x: 'a' }, val: 'b' }).then(function () {\r\n                            assert(false, 'Shouldn\\'t get here');\r\n                        }, function () {\r\n                            // Woot, failed like it's supposed to\r\n                            return prov.close();\r\n                        }).then(function () {\r\n                            done();\r\n                        });\r\n                    }).catch(function (err) {\r\n                        done(err);\r\n                    });\r\n                });\r\n                it('Primary Key Basic KeyPath', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return tester(prov, undefined, false, function (obj, v) { obj.id = v; });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                var _loop_1 = function (i) {\r\n                    it('Simple index put/get, getAll, getOnly, and getRange' + (i === 0 ? '' : ' (includeData)'), function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [\r\n                                        {\r\n                                            name: 'index',\r\n                                            keyPath: 'a',\r\n                                            includeDataInIndex: i === 1\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return tester(prov, 'index', false, function (obj, v) { obj.a = v; });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                };\r\n                for (var i = 0; i <= 1; i++) {\r\n                    _loop_1(i);\r\n                }\r\n                it('Multipart primary key basic test', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'a.b'\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return tester(prov, undefined, false, function (obj, v) { obj.a = { b: v }; });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Multipart index basic test', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id',\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'index',\r\n                                        keyPath: 'a.b'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return tester(prov, 'index', false, function (obj, v) { obj.a = { b: v }; });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Compound primary key basic test', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: ['a', 'b']\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return tester(prov, undefined, true, function (obj, v1, v2) { obj.a = v1; obj.b = v2; });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('Compound index basic test', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id',\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'index',\r\n                                        keyPath: ['a', 'b']\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return tester(prov, 'index', true, function (obj, v1, v2) { obj.a = v1; obj.b = v2; });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                var _loop_2 = function (i) {\r\n                    it('MultiEntry multipart indexed tests' + (i === 0 ? '' : ' (includeData)'), function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [\r\n                                        {\r\n                                            name: 'key',\r\n                                            multiEntry: true,\r\n                                            keyPath: 'k.k',\r\n                                            includeDataInIndex: i === 1\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'a', val: 'b', k: { k: ['w', 'x', 'y', 'z'] } })\r\n                                // Insert data without multi-entry key defined\r\n                                .then(function () { return prov.put('test', { id: 'c', val: 'd', k: [] }); })\r\n                                .then(function () { return prov.put('test', { id: 'e', val: 'f' }); })\r\n                                .then(function () {\r\n                                var g1 = prov.get('test', 'a').then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.val, 'b');\r\n                                });\r\n                                var g2 = prov.getAll('test', 'key').then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 4);\r\n                                    ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                                });\r\n                                var g2b = prov.getAll('test', 'key', false, 2).then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 2);\r\n                                    ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                                });\r\n                                var g2c = prov.getAll('test', 'key', false, 2, 1).then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 2);\r\n                                    ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                                });\r\n                                var g3 = prov.getOnly('test', 'key', 'x').then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 1);\r\n                                    assert.equal(ret[0].val, 'b');\r\n                                });\r\n                                var g4 = prov.getRange('test', 'key', 'x', 'y', false, false).then(function (retVal) {\r\n                                    var ret = retVal;\r\n                                    assert.equal(ret.length, 2);\r\n                                    ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                                });\r\n                                return Promise.all([g1, g2, g2b, g2c, g3, g4]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                };\r\n                for (var i = 0; i <= 1; i++) {\r\n                    _loop_2(i);\r\n                }\r\n                it('MultiEntry multipart indexed - update index', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id',\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'key',\r\n                                        multiEntry: true,\r\n                                        keyPath: 'k.k'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: 'a', val: 'b', k: { k: ['w', 'x', 'y', 'z'] } })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'y', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.put('test', { id: 'a', val: 'b', k: { k: ['z'] } });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'y', false, false).then(function (ret) {\r\n                                assert.equal(ret.length, 0);\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'z', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 1);\r\n                                assert.equal(ret[0].val, 'b');\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.remove('test', 'a');\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'z', false, false).then(function (ret) {\r\n                                assert.equal(ret.length, 0);\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.close();\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('MultiEntry multipart indexed tests - getMultiple', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: 'id',\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'key',\r\n                                        multiEntry: true,\r\n                                        keyPath: 'k.k'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: 'a', id2: '1', val: 'b', k: { k: ['w', 'x', 'y', 'z'] } })\r\n                            .then(function () {\r\n                            var g = prov.getMultiple('test', ['x', 'y'], 'key').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                            var g1 = prov.getMultiple('test', ['lala'], 'key').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 0);\r\n                            });\r\n                            return Promise.all([g, g1]).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('MultiEntry multipart indexed tests - Compound Key', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: ['id', 'id2'],\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'key',\r\n                                        multiEntry: true,\r\n                                        keyPath: 'k.k'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: 'a', id2: '1', val: 'b', k: { k: ['w', 'x', 'y', 'z'] } })\r\n                            // Insert data without multi-entry key defined\r\n                            .then(function () { return prov.put('test', { id: 'c', id2: '2', val: 'd', k: [] }); })\r\n                            .then(function () { return prov.put('test', { id: 'e', id2: '3', val: 'f' }); })\r\n                            .then(function () {\r\n                            var g1 = prov.get('test', ['a', '1']).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.val, 'b');\r\n                            });\r\n                            var g2 = prov.getAll('test', 'key').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 4);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                            var g2b = prov.getAll('test', 'key', false, 2).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                            var g2c = prov.getAll('test', 'key', false, 2, 1).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                            var g3 = prov.getOnly('test', 'key', 'x').then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 1);\r\n                                assert.equal(ret[0].val, 'b');\r\n                            });\r\n                            var g4 = prov.getRange('test', 'key', 'x', 'y', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                            return Promise.all([g1, g2, g2b, g2c, g3, g4]).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                it('MultiEntry multipart indexed - update index - Compound', function (done) {\r\n                    openProvider(provName, {\r\n                        version: 1,\r\n                        stores: [\r\n                            {\r\n                                name: 'test',\r\n                                primaryKeyPath: ['id', 'id2'],\r\n                                indexes: [\r\n                                    {\r\n                                        name: 'key',\r\n                                        multiEntry: true,\r\n                                        keyPath: 'k.k'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }, true).then(function (prov) {\r\n                        return prov.put('test', { id: 'a', id2: '1', val: 'b', k: { k: ['w', 'x', 'y', 'z'] } })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'y', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 2);\r\n                                ret.forEach(function (r) { assert.equal(r.val, 'b'); });\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.put('test', { id: 'a', id2: '1', val: 'b', k: { k: ['z'] } });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'y', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 0);\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'z', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 1);\r\n                                assert.equal(ret[0].val, 'b');\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.remove('test', ['a', '1']);\r\n                        })\r\n                            .then(function () {\r\n                            return prov.getRange('test', 'key', 'x', 'z', false, false).then(function (retVal) {\r\n                                var ret = retVal;\r\n                                assert.equal(ret.length, 0);\r\n                            });\r\n                        })\r\n                            .then(function () {\r\n                            return prov.close();\r\n                        });\r\n                    }).then(function () { return done(); }, function (err) { return done(err); });\r\n                });\r\n                describe('Transaction Semantics', function () {\r\n                    it('Testing transaction expiration', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.openTransaction(['test'], true).then(function (trans) {\r\n                                var promise = trans.getCompletionPromise();\r\n                                var check1 = false;\r\n                                promise.then(function () {\r\n                                    check1 = true;\r\n                                }, function () {\r\n                                    assert.ok(false, 'Bad');\r\n                                });\r\n                                return sleep(200).then(function () {\r\n                                    assert.ok(check1);\r\n                                    var store = trans.getStore('test');\r\n                                    return store.put({ id: 'abc', a: 'a' });\r\n                                });\r\n                            }).then(function () {\r\n                                assert.ok(false, 'Should fail');\r\n                                return Promise.reject();\r\n                            }, function () {\r\n                                // woot\r\n                                return undefined;\r\n                            }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Testing aborting', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            var checked = false;\r\n                            return prov.openTransaction(['test'], true).then(function (trans) {\r\n                                var promise = trans.getCompletionPromise();\r\n                                var store = trans.getStore('test');\r\n                                return store.put({ id: 'abc', a: 'a' }).then(function () {\r\n                                    trans.abort();\r\n                                    return promise.then(function () {\r\n                                        assert.ok(false, 'Should fail');\r\n                                    }, function () {\r\n                                        return prov.get('test', 'abc').then(function (res) {\r\n                                            assert.ok(!res);\r\n                                            checked = true;\r\n                                        });\r\n                                    });\r\n                                });\r\n                            }).then(function () {\r\n                                assert.ok(checked);\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            done();\r\n                        });\r\n                    });\r\n                    it('Testing read/write transaction locks', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', a: 'a' }).then(function () {\r\n                                var check1 = false, check2 = false;\r\n                                var started1 = false;\r\n                                var closed1 = false;\r\n                                var p1 = prov.openTransaction(['test'], true).then(function (trans) {\r\n                                    trans.getCompletionPromise().then(function () {\r\n                                        closed1 = true;\r\n                                    });\r\n                                    started1 = true;\r\n                                    var store = trans.getStore('test');\r\n                                    return store.put({ id: 'abc', a: 'b' }).then(function () {\r\n                                        return store.get('abc').then(function (val) {\r\n                                            assert.ok(val && val.a === 'b');\r\n                                            assert.ok(!closed1);\r\n                                            check1 = true;\r\n                                        });\r\n                                    });\r\n                                });\r\n                                assert.ok(!closed1);\r\n                                var p2 = prov.openTransaction(['test'], false).then(function (trans) {\r\n                                    assert.ok(closed1);\r\n                                    assert.ok(started1 && check1);\r\n                                    var store = trans.getStore('test');\r\n                                    return store.get('abc').then(function (val) {\r\n                                        assert.ok(val && val.a === 'b');\r\n                                        check2 = true;\r\n                                    });\r\n                                });\r\n                                return Promise.all([p1, p2]).then(function () {\r\n                                    assert.ok(check1 && check2);\r\n                                });\r\n                            }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                });\r\n            });\r\n            if (provName.indexOf('memory') === -1) {\r\n                describe('Schema Upgrades', function () {\r\n                    it('Opening an older DB version', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 2,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.close();\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test2',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.get('test', 'abc').then(function () {\r\n                                    return prov.close().then(function () {\r\n                                        return Promise.reject('Shouldn\\'t have worked');\r\n                                    });\r\n                                }, function () {\r\n                                    // Expected to fail, so chain from failure to success\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Basic NOOP schema upgrade path', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.get('test', 'abc').then(function (item) {\r\n                                    assert(!!item);\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Adding new store', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    },\r\n                                    {\r\n                                        name: 'test2',\r\n                                        primaryKeyPath: 'ttt'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.put('test2', { id: 'def', ttt: 'ghi' }).then(function () {\r\n                                    var p1 = prov.get('test', 'abc').then(function (itemVal) {\r\n                                        var item = itemVal;\r\n                                        assert(!!item);\r\n                                        assert.equal(item.id, 'abc');\r\n                                    });\r\n                                    var p2 = prov.get('test2', 'abc').then(function (item) {\r\n                                        assert(!item);\r\n                                    });\r\n                                    var p3 = prov.get('test2', 'def').then(function (item) {\r\n                                        assert(!item);\r\n                                    });\r\n                                    var p4 = prov.get('test2', 'ghi').then(function (itemVal) {\r\n                                        var item = itemVal;\r\n                                        assert(!!item);\r\n                                        assert.equal(item.id, 'def');\r\n                                    });\r\n                                    return Promise.all([p1, p2, p3, p4]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Removing old store', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test2',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.get('test', 'abc').then(function () {\r\n                                    return prov.close().then(function () {\r\n                                        return Promise.reject('Shouldn\\'t have worked');\r\n                                    });\r\n                                }, function () {\r\n                                    // Expected to fail, so chain from failure to success\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Remove store with index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt'\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'abc' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test2',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.get('test', 'abc').then(function () {\r\n                                    return prov.close().then(function () {\r\n                                        return Promise.reject('Shouldn\\'t have worked');\r\n                                    });\r\n                                }, function () {\r\n                                    // Expected to fail, so chain from failure to success\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Add index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'a' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt'\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    function testBatchUpgrade(itemByteSize) {\r\n                        var recordCount = 5000;\r\n                        var data = {};\r\n                        lodash_1.times(recordCount, function (num) {\r\n                            data[num.toString()] = {\r\n                                id: num.toString(),\r\n                                tt: 'tt' + num.toString()\r\n                            };\r\n                        });\r\n                        return openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    estimatedObjBytes: itemByteSize\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', lodash_1.values(data)).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        estimatedObjBytes: itemByteSize,\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt'\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.getAll('test', undefined).then(function (records) {\r\n                                    assert.equal(records.length, lodash_1.keys(data).length, 'Incorrect record count');\r\n                                    lodash_1.each(records, function (dbRecordToValidate) {\r\n                                        var originalRecord = data[dbRecordToValidate.id];\r\n                                        assert.ok(!!originalRecord);\r\n                                        assert.equal(originalRecord.id, dbRecordToValidate.id);\r\n                                        assert.equal(originalRecord.tt, dbRecordToValidate.tt);\r\n                                    });\r\n                                }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        });\r\n                    }\r\n                    it('Add index - Large records - batched upgrade', function (done) {\r\n                        testBatchUpgrade(10000).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Add index - small records - No batch upgrade', function (done) {\r\n                        testBatchUpgrade(1).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    if (provName.indexOf('indexeddb') !== 0) {\r\n                        // This migration works on indexeddb because we don't check the types and the browsers silently accept it but just\r\n                        // neglect to index the field...\r\n                        it('Add index to boolean field should fail', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, true).then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: true }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }).then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [{\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt'\r\n                                                }]\r\n                                        }\r\n                                    ]\r\n                                }, false).then(function () {\r\n                                    return Promise.reject('Should not work');\r\n                                }, function () {\r\n                                    return Promise.resolve();\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                    }\r\n                    it('Add multiEntry index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: ['a', 'b'] }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                multiEntry: true\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p1b = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p1b, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Changing multiEntry index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt',\r\n                                            multiEntry: true\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: ['x', 'y'], ttb: ['a', 'b'] }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'ttb',\r\n                                                multiEntry: true\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p1b = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p1c = prov.getOnly('test', 'ind1', 'x').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p1b, p1c, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Removing old index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt'\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'a' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.getOnly('test', 'ind1', 'a').then(function () {\r\n                                    return prov.close().then(function () {\r\n                                        return Promise.reject('Shouldn\\'t have worked');\r\n                                    });\r\n                                }, function () {\r\n                                    // Expected to fail, so chain from failure to success\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Changing index keypath', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt'\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'a', ttb: 'b' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'ttb'\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                var p2 = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].ttb, 'b');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Change non-multientry index to includeDataInIndex', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt'\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'a' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                includeDataInIndex: true\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Change non-multientry index from includeDataInIndex', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt',\r\n                                            includeDataInIndex: true\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: 'a' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                includeDataInIndex: false\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                    assert.equal(items[0].tt, 'a');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Change multientry index to includeDataInIndex', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt',\r\n                                            multiEntry: true\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: ['a', 'b'] }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                multiEntry: true,\r\n                                                includeDataInIndex: true\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p1b = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p1b, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Change multientry index from includeDataInIndex', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [{\r\n                                            name: 'ind1',\r\n                                            keyPath: 'tt',\r\n                                            multiEntry: true,\r\n                                            includeDataInIndex: true\r\n                                        }]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', tt: ['a', 'b'] }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                multiEntry: true,\r\n                                                includeDataInIndex: false\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p1b = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                var p3 = prov.getOnly('test', 'ind1', 'abc').then(function (items) {\r\n                                    assert.equal(items.length, 0);\r\n                                });\r\n                                return Promise.all([p1, p1b, p2, p3]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Adding new FTS store', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    },\r\n                                    {\r\n                                        name: 'test2',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [\r\n                                            {\r\n                                                name: 'a',\r\n                                                keyPath: 'content',\r\n                                                fullText: true\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                return prov.put('test2', { id: 'def', content: 'ghi' }).then(function () {\r\n                                    var p1 = prov.get('test', 'abc').then(function (item) {\r\n                                        assert.ok(item);\r\n                                        assert.equal(item.id, 'abc');\r\n                                    });\r\n                                    var p2 = prov.get('test2', 'abc').then(function (item) {\r\n                                        assert.ok(!item);\r\n                                    });\r\n                                    var p3 = prov.get('test2', 'def').then(function (item) {\r\n                                        assert.ok(item);\r\n                                    });\r\n                                    var p4 = prov.fullTextSearch('test2', 'a', 'ghi').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'def');\r\n                                    });\r\n                                    return Promise.all([p1, p2, p3, p4]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Adding new FTS index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id'\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', content: 'ghi' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [\r\n                                            {\r\n                                                name: 'a',\r\n                                                keyPath: 'content',\r\n                                                fullText: true\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.get('test', 'abc').then(function (item) {\r\n                                    assert.ok(item);\r\n                                    assert.equal(item.id, 'abc');\r\n                                });\r\n                                var p2 = prov.fullTextSearch('test', 'a', 'ghi').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                });\r\n                                return Promise.all([p1, p2]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    it('Removing FTS index', function (done) {\r\n                        openProvider(provName, {\r\n                            version: 1,\r\n                            stores: [\r\n                                {\r\n                                    name: 'test',\r\n                                    primaryKeyPath: 'id',\r\n                                    indexes: [\r\n                                        {\r\n                                            name: 'a',\r\n                                            keyPath: 'content',\r\n                                            fullText: true\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }, true).then(function (prov) {\r\n                            return prov.put('test', { id: 'abc', content: 'ghi' }).then(function () {\r\n                                return prov.close();\r\n                            });\r\n                        }).then(function () {\r\n                            return openProvider(provName, {\r\n                                version: 2,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, false).then(function (prov) {\r\n                                var p1 = prov.get('test', 'abc').then(function (item) {\r\n                                    assert.ok(item);\r\n                                    assert.equal(item.id, 'abc');\r\n                                    assert.equal(item.content, 'ghi');\r\n                                });\r\n                                var p2 = prov.fullTextSearch('test', 'a', 'ghi').then(function (items) {\r\n                                    assert.equal(items.length, 1);\r\n                                    assert.equal(items[0].id, 'abc');\r\n                                }).then(function () {\r\n                                    assert.ok(false, 'should not work');\r\n                                }, function () {\r\n                                    return Promise.resolve();\r\n                                });\r\n                                return Promise.all([p1, p2]).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            });\r\n                        }).then(function () { return done(); }, function (err) { return done(err); });\r\n                    });\r\n                    // indexed db might backfill anyway behind the scenes\r\n                    if (provName.indexOf('indexeddb') !== 0) {\r\n                        it('Adding an index that does not require backfill', function (done) {\r\n                            return openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, true).then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: 'a' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }).then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [{\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt',\r\n                                                    doNotBackfill: true\r\n                                                }]\r\n                                        }\r\n                                    ]\r\n                                }, false).then(function (prov) { return prov.put('test', { id: 'bcd', tt: 'b' }).then(function () {\r\n                                    var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                        // item not found, we didn't backfill the first item\r\n                                        assert.equal(items.length, 0);\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                    });\r\n                                    var p3 = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                        // index works properly for the new item\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'bcd');\r\n                                        assert.equal(items[0].tt, 'b');\r\n                                    });\r\n                                    return Promise.all([p1, p2, p3]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                }); });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                        it('Adding two indexes at once - backfill and not', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, true).then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: 'a', zz: 'b' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }).then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [\r\n                                                {\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt',\r\n                                                    doNotBackfill: true,\r\n                                                },\r\n                                                {\r\n                                                    name: 'ind2',\r\n                                                    keyPath: 'zz',\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    ]\r\n                                }, false).then(function (prov) {\r\n                                    var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                        // we had to backfill, so we filled all \r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'b');\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'b');\r\n                                    });\r\n                                    var p3 = prov.getOnly('test', 'ind2', 'b').then(function (items) {\r\n                                        // index works properly for the second index\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'b');\r\n                                    });\r\n                                    return Promise.all([p1, p2, p3]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                        it('Change no backfill index into a normal index', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [\r\n                                            {\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                doNotBackfill: true,\r\n                                            },\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }, true).then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: 'a', zz: 'b' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }).then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [\r\n                                                {\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt',\r\n                                                },\r\n                                            ]\r\n                                        }\r\n                                    ]\r\n                                }, false).then(function (prov) {\r\n                                    var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                        // we backfilled \r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'b');\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'b');\r\n                                    });\r\n                                    return Promise.all([p1, p2]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                        it('Perform two updates which require no backfill', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id'\r\n                                    }\r\n                                ]\r\n                            }, true)\r\n                                .then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: 'a', zz: 'aa' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            })\r\n                                .then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [{\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt',\r\n                                                    doNotBackfill: true\r\n                                                }]\r\n                                        }\r\n                                    ]\r\n                                }, false)\r\n                                    .then(function (prov) {\r\n                                    return prov.put('test', { id: 'bcd', tt: 'b', zz: 'bb' }).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            })\r\n                                .then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 3,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [{\r\n                                                    name: 'ind1',\r\n                                                    keyPath: 'tt',\r\n                                                    doNotBackfill: true\r\n                                                }, {\r\n                                                    name: 'ind2',\r\n                                                    keyPath: 'zz',\r\n                                                    doNotBackfill: true\r\n                                                }]\r\n                                        }\r\n                                    ]\r\n                                }, false)\r\n                                    .then(function (prov) {\r\n                                    var p1 = prov.getOnly('test', 'ind1', 'a').then(function (items) {\r\n                                        // item not found, we didn't backfill the first item\r\n                                        assert.equal(items.length, 0);\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'aa');\r\n                                    });\r\n                                    var p3 = prov.getOnly('test', 'ind1', 'b').then(function (items) {\r\n                                        // first index works properly for the second item\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'bcd');\r\n                                        assert.equal(items[0].tt, 'b');\r\n                                    });\r\n                                    var p4 = prov.getOnly('test', 'ind2', 'bb').then(function (items) {\r\n                                        // second index wasn't backfilled\r\n                                        assert.equal(items.length, 0);\r\n                                    });\r\n                                    return Promise.all([p1, p2, p3, p4]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                        it('Removes index without pulling data to JS', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [\r\n                                            {\r\n                                                name: 'ind1',\r\n                                                keyPath: 'content',\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]\r\n                            }, true).then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', content: 'ghi' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            }).then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id'\r\n                                        }\r\n                                    ]\r\n                                }, false)\r\n                                    .then(function (prov) {\r\n                                    // check the index was actually removed\r\n                                    var p1 = prov.get('test', 'abc').then(function (item) {\r\n                                        assert.ok(item);\r\n                                        assert.equal(item.id, 'abc');\r\n                                        assert.equal(item.content, 'ghi');\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', 'ind1', 'ghi').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                    }).then(function () {\r\n                                        assert.ok(false, 'should not work');\r\n                                    }, function () {\r\n                                        return Promise.resolve();\r\n                                    });\r\n                                    return Promise.all([p1, p2]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                        it('Add and remove index in the same upgrade', function (done) {\r\n                            openProvider(provName, {\r\n                                version: 1,\r\n                                stores: [\r\n                                    {\r\n                                        name: 'test',\r\n                                        primaryKeyPath: 'id',\r\n                                        indexes: [{\r\n                                                name: 'ind1',\r\n                                                keyPath: 'tt',\r\n                                                doNotBackfill: true\r\n                                            }]\r\n                                    }\r\n                                ]\r\n                            }, true)\r\n                                .then(function (prov) {\r\n                                return prov.put('test', { id: 'abc', tt: 'a', zz: 'aa' }).then(function () {\r\n                                    return prov.close();\r\n                                });\r\n                            })\r\n                                .then(function () {\r\n                                return openProvider(provName, {\r\n                                    version: 2,\r\n                                    stores: [\r\n                                        {\r\n                                            name: 'test',\r\n                                            primaryKeyPath: 'id',\r\n                                            indexes: [{\r\n                                                    name: 'ind2',\r\n                                                    keyPath: 'zz',\r\n                                                    doNotBackfill: true\r\n                                                }]\r\n                                        }\r\n                                    ]\r\n                                }, false)\r\n                                    .then(function (prov) {\r\n                                    var p1 = prov.getOnly('test', undefined, 'abc').then(function (items) {\r\n                                        assert.equal(items.length, 1);\r\n                                        assert.equal(items[0].id, 'abc');\r\n                                        assert.equal(items[0].tt, 'a');\r\n                                        assert.equal(items[0].zz, 'aa');\r\n                                    });\r\n                                    var p2 = prov.getOnly('test', 'ind1', 'a').then(function () {\r\n                                        return Promise.reject('Shouldn\\'t have worked');\r\n                                    }, function () {\r\n                                        // Expected to fail, so chain from failure to success\r\n                                        return undefined;\r\n                                    });\r\n                                    return Promise.all([p1, p2]).then(function () {\r\n                                        return prov.close();\r\n                                    });\r\n                                });\r\n                            }).then(function () { return done(); }, function (err) { return done(err); });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            it('Full Text Index', function (done) {\r\n                openProvider(provName, {\r\n                    version: 1,\r\n                    stores: [\r\n                        {\r\n                            name: 'test',\r\n                            primaryKeyPath: 'id',\r\n                            indexes: [{\r\n                                    name: 'i',\r\n                                    keyPath: 'txt',\r\n                                    fullText: true\r\n                                }]\r\n                        }\r\n                    ]\r\n                }, true).then(function (prov) {\r\n                    return prov.put('test', [\r\n                        { id: 'a1', txt: 'the quick brown fox jumps over the lăzy dog who is a bro with brows' },\r\n                        { id: 'a2', txt: 'bob likes his dog' },\r\n                        { id: 'a3', txt: 'tes>ter' },\r\n                        {\r\n                            id: 'a4',\r\n                            txt: 'Бывает проснешься как птица,' +\r\n                                ' крылатой пружиной на взводе и хочется жить и трудиться, но к завтраку это проходит!'\r\n                        },\r\n                        {\r\n                            id: 'a5',\r\n                            txt: '漁夫從遠處看見漁夫'\r\n                        },\r\n                        {\r\n                            // i18n digits test case\r\n                            id: 'a6',\r\n                            txt: '߂i18nDigits߂'\r\n                        },\r\n                        {\r\n                            // Test data to make sure that we don't search for empty strings (... used to put empty string to the index)\r\n                            id: 'a7',\r\n                            txt: 'User1, User2, User3 ...'\r\n                        }\r\n                    ]).then(function () {\r\n                        var p1 = prov.fullTextSearch('test', 'i', 'brown').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p2 = prov.fullTextSearch('test', 'i', 'dog').then(function (res) {\r\n                            assert.equal(res.length, 2);\r\n                        });\r\n                        var p3 = prov.fullTextSearch('test', 'i', 'do').then(function (res) {\r\n                            assert.equal(res.length, 2);\r\n                        });\r\n                        var p4 = prov.fullTextSearch('test', 'i', 'LiKe').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a2');\r\n                        });\r\n                        var p5 = prov.fullTextSearch('test', 'i', 'azy').then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p6 = prov.fullTextSearch('test', 'i', 'lazy dog').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p7 = prov.fullTextSearch('test', 'i', 'dog lazy').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p8 = prov.fullTextSearch('test', 'i', 'DOG lăzy').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p9 = prov.fullTextSearch('test', 'i', 'lĄzy').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p10 = prov.fullTextSearch('test', 'i', 'brown brown brown').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p11 = prov.fullTextSearch('test', 'i', 'brown brOwn browN').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p12 = prov.fullTextSearch('test', 'i', 'brow').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p13 = prov.fullTextSearch('test', 'i', 'bro').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p14 = prov.fullTextSearch('test', 'i', 'br').then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p15 = prov.fullTextSearch('test', 'i', 'b').then(function (res) {\r\n                            assert.equal(res.length, 2);\r\n                        });\r\n                        var p16 = prov.fullTextSearch('test', 'i', 'b z').then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p17 = prov.fullTextSearch('test', 'i', 'b z', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 2);\r\n                            assert.ok(lodash_1.some(res, function (r) { return r.id === 'a1'; }) && lodash_1.some(res, function (r) { return r.id === 'a2'; }));\r\n                        });\r\n                        var p18 = prov.fullTextSearch('test', 'i', 'q h', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 2);\r\n                            assert.ok(lodash_1.some(res, function (r) { return r.id === 'a1'; }) && lodash_1.some(res, function (r) { return r.id === 'a2'; }));\r\n                        });\r\n                        var p19 = prov.fullTextSearch('test', 'i', 'fox nopers', NoSqlProvider_1.FullTextTermResolution.Or)\r\n                            .then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                            assert.equal(res[0].id, 'a1');\r\n                        });\r\n                        var p20 = prov.fullTextSearch('test', 'i', 'foxers nopers', NoSqlProvider_1.FullTextTermResolution.Or)\r\n                            .then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p21 = prov.fullTextSearch('test', 'i', 'fox)', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p22 = prov.fullTextSearch('test', 'i', 'fox*', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p23 = prov.fullTextSearch('test', 'i', 'fox* fox( <fox>', NoSqlProvider_1.FullTextTermResolution.Or)\r\n                            .then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p24 = prov.fullTextSearch('test', 'i', 'f)ox', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p25 = prov.fullTextSearch('test', 'i', 'fo*x', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p26 = prov.fullTextSearch('test', 'i', 'tes>ter', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p27 = prov.fullTextSearch('test', 'i', 'f*x', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        var p28 = prov.fullTextSearch('test', 'i', 'бывает', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p29 = prov.fullTextSearch('test', 'i', '漁', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        var p30 = prov.fullTextSearch('test', 'i', '߂i18nDigits߂', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 1);\r\n                        });\r\n                        // This is an empty string test. All special symbols will be replaced so this is technically empty string search.\r\n                        var p31 = prov.fullTextSearch('test', 'i', '!@#$%$', NoSqlProvider_1.FullTextTermResolution.Or).then(function (res) {\r\n                            assert.equal(res.length, 0);\r\n                        });\r\n                        return Promise.all([p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20,\r\n                            p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31]).then(function () {\r\n                            return prov.close();\r\n                        });\r\n                    });\r\n                }).then(function () { return done(); }, function (err) { return done(err); });\r\n            });\r\n        });\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack:///./src/tests/NoSqlProviderTests.ts?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = fs;\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ })

/******/ });